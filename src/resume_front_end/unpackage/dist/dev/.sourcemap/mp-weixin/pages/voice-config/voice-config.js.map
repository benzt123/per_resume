{"version":3,"file":"voice-config.js","sources":["pages/voice-config/voice-config.vue","../Edgedownload/HBuilderX/plugins/uniapp-cli-vite/uniPage:/cGFnZXMvdm9pY2UtY29uZmlnL3ZvaWNlLWNvbmZpZy52dWU"],"sourcesContent":["<template>\n\t<view class=\"container\">\n\t\t<!-- 页面标题 -->\n\t\t<view class=\"header\">\n\t\t\t<text class=\"title\">语音识别配置</text>\n\t\t\t<text class=\"subtitle\">配置字节跳动语音识别服务</text>\n\t\t</view>\n\t\t\n\t\t<!-- 配置表单 -->\n\t\t<view class=\"config-form\">\n\t\t\t<!-- API配置区域 -->\n\t\t\t<view class=\"form-section\">\n\t\t\t\t<text class=\"section-title\">API配置</text>\n\t\t\t\t\n\t\t\t\t<view class=\"form-item\">\n\t\t\t\t\t<text class=\"label\">App ID</text>\n\t\t\t\t\t<input \n\t\t\t\t\t\tclass=\"input\" \n\t\t\t\t\t\tv-model=\"config.appId\"\n\t\t\t\t\t\tplaceholder=\"请输入字节跳动App ID\"\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t/>\n\t\t\t\t</view>\n\t\t\t\t\n\t\t\t\t<view class=\"form-item\">\n\t\t\t\t\t<text class=\"label\">Access Key</text>\n\t\t\t\t\t<input \n\t\t\t\t\t\tclass=\"input\" \n\t\t\t\t\t\tv-model=\"config.accessKey\"\n\t\t\t\t\t\tplaceholder=\"请输入Access Key\"\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t/>\n\t\t\t\t</view>\n\t\t\t</view>\n\t\t\t\n\t\t\t<!-- 识别配置区域 -->\n\t\t\t<view class=\"form-section\">\n\t\t\t\t<text class=\"section-title\">识别配置</text>\n\t\t\t\t\n\t\t\t\t<view class=\"form-item\">\n\t\t\t\t\t<text class=\"label\">模型名称</text>\n\t\t\t\t\t<picker \n\t\t\t\t\t\tmode=\"selector\" \n\t\t\t\t\t\t:value=\"modelIndex\" \n\t\t\t\t\t\t:range=\"modelOptions\"\n\t\t\t\t\t\t@change=\"onModelChange\">\n\t\t\t\t\t\t<view class=\"picker\">{{modelOptions[modelIndex]}}</view>\n\t\t\t\t\t</picker>\n\t\t\t\t</view>\n\t\t\t\t\n\t\t\t\t<view class=\"form-item switch-item\">\n\t\t\t\t\t<text class=\"label\">启用标点符号</text>\n\t\t\t\t\t<switch \n\t\t\t\t\t\t:checked=\"config.enablePunc\"\n\t\t\t\t\t\t@change=\"onSwitchChange\"\n\t\t\t\t\t\tdata-field=\"enablePunc\"\n\t\t\t\t\t\tcolor=\"#667eea\"\n\t\t\t\t\t/>\n\t\t\t\t</view>\n\t\t\t\t\n\t\t\t\t<view class=\"form-item switch-item\">\n\t\t\t\t\t<text class=\"label\">启用数字转换</text>\n\t\t\t\t\t<switch \n\t\t\t\t\t\t:checked=\"config.enableItn\"\n\t\t\t\t\t\t@change=\"onSwitchChange\"\n\t\t\t\t\t\tdata-field=\"enableItn\"\n\t\t\t\t\t\tcolor=\"#667eea\"\n\t\t\t\t\t/>\n\t\t\t\t</view>\n\t\t\t\t\n\t\t\t\t<view class=\"form-item switch-item\">\n\t\t\t\t\t<text class=\"label\">说话人识别</text>\n\t\t\t\t\t<switch \n\t\t\t\t\t\t:checked=\"config.enableSpeakerInfo\"\n\t\t\t\t\t\t@change=\"onSwitchChange\"\n\t\t\t\t\t\tdata-field=\"enableSpeakerInfo\"\n\t\t\t\t\t\tcolor=\"#667eea\"\n\t\t\t\t\t/>\n\t\t\t\t</view>\n\t\t\t</view>\n\t\t\t\n\t\t\t<!-- 使用说明 -->\n\t\t\t<view class=\"form-section\">\n\t\t\t\t<text class=\"section-title\">使用说明</text>\n\t\t\t\t<view class=\"help-content\">\n\t\t\t\t\t<text class=\"help-text\">🎪 演示模式：无需配置，可直接体验语音录制功能</text>\n\t\t\t\t\t<text class=\"help-text\">� 火山引擎：需申请API密钥，支持真实语音识别</text>\n\t\t\t\t\t<text class=\"help-text\">🎤 在聊天页面长按语音按钮开始录音</text>\n\t\t\t\t\t<text class=\"help-text\">✨ 松开按钮自动识别并转换为文字</text>\n\t\t\t\t</view>\n\t\t\t\t\n\t\t\t\t<view class=\"error-help\" v-if=\"testResult && !testResult.success\">\n\t\t\t\t\t<text class=\"error-title\">⚠️ 常见问题解决方案：</text>\n\t\t\t\t\t<text class=\"error-text\">• grant not found: App ID或Access Key错误</text>\n\t\t\t\t\t<text class=\"error-text\">• 权限不足: 请确认已开通语音识别服务</text>\n\t\t\t\t\t<text class=\"error-text\">• 网络超时: 检查网络连接状况</text>\n\t\t\t\t\t<text class=\"error-text\">• 建议先尝试演示模式体验功能</text>\n\t\t\t\t</view>\n\t\t\t\t\n\t\t\t\t<button class=\"help-btn\" @click=\"openHelp\">\n\t\t\t\t\t📖 查看详细配置指南\n\t\t\t\t</button>\n\t\t\t</view>\n\t\t</view>\n\t\t\n\t\t<!-- 操作按钮 -->\n\t\t<view class=\"actions\">\n\t\t\t<button class=\"test-btn\" @click=\"testConfiguration\" :disabled=\"!canTest\">\n\t\t\t\t🧪 测试配置\n\t\t\t</button>\n\t\t\t<button class=\"save-btn\" @click=\"saveConfiguration\" :disabled=\"!canSave\">\n\t\t\t\t✅ 保存配置\n\t\t\t</button>\n\t\t</view>\n\t\t\n\t\t<!-- 测试结果显示 -->\n\t\t<view v-if=\"testResult\" class=\"test-result\" :class=\"testResult.success ? 'success' : 'error'\">\n\t\t\t<text class=\"result-title\">{{ testResult.success ? '✅ 测试成功' : '❌ 测试失败' }}</text>\n\t\t\t<text class=\"result-message\">{{ testResult.message }}</text>\n\t\t</view>\n\t</view>\n</template>\n\n<script>\n\texport default {\n\t\tdata() {\n\t\t\treturn {\n\t\t\t\tconfig: {\n\t\t\t\t\tappId: '',\n\t\t\t\t\taccessKey: '',\n\t\t\t\t\tmodelName: 'bigmodel',\n\t\t\t\t\tenablePunc: true,\n\t\t\t\t\tenableItn: true,\n\t\t\t\t\tenableSpeakerInfo: false\n\t\t\t\t},\n\t\t\t\tmodelOptions: ['bigmodel', 'general'],\n\t\t\t\tmodelIndex: 0,\n\t\t\t\ttestResult: null\n\t\t\t}\n\t\t},\n\t\t\n\t\tcomputed: {\n\t\t\tcanSave() {\n\t\t\t\t// 需要配置完整才能保存\n\t\t\t\treturn this.config.appId.trim() && this.config.accessKey.trim()\n\t\t\t},\n\t\t\t\n\t\t\tcanTest() {\n\t\t\t\t// 需要配置完整才能测试\n\t\t\t\treturn this.config.appId.trim() && this.config.accessKey.trim()\n\t\t\t}\n\t\t},\n\t\t\n\t\tonLoad() {\n\t\t\tthis.loadConfiguration()\n\t\t},\n\t\t\n\t\tmethods: {\n\t\t\t// 加载配置\n\t\t\tloadConfiguration() {\n\t\t\t\tconst saved = uni.getStorageSync('voiceConfig')\n\t\t\t\tif (saved) {\n\t\t\t\t\tthis.config = { ...this.config, ...saved }\n\t\t\t\t\t\n\t\t\t\t\t// 设置模型选择器\n\t\t\t\t\tconst modelIndex = this.modelOptions.indexOf(this.config.modelName)\n\t\t\t\t\tthis.modelIndex = modelIndex >= 0 ? modelIndex : 0\n\t\t\t\t}\n\t\t\t},\n\t\t\t\n\t\t\t// 模型选择变化\n\t\t\tonModelChange(e) {\n\t\t\t\tthis.modelIndex = e.detail.value\n\t\t\t\tthis.config.modelName = this.modelOptions[this.modelIndex]\n\t\t\t},\n\t\t\t\n\t\t\t// 开关变化\n\t\t\tonSwitchChange(e) {\n\t\t\t\tconst field = e.currentTarget.dataset.field\n\t\t\t\tthis.config[field] = e.detail.value\n\t\t\t},\n\t\t\t\n\t\t\t// 测试配置\n\t\t\tasync testConfiguration() {\n\t\t\t\tif (!this.canTest) return\n\t\t\t\t\n\t\t\t\tuni.showLoading({\n\t\t\t\t\ttitle: '测试中...'\n\t\t\t\t})\n\t\t\t\t\n\t\t\t\ttry {\n\t\t\t\t\t// 火山引擎API测试\n\t\t\t\t\tawait this.testVolcengineMode()\n\t\t\t\t\t\n\t\t\t\t} catch (error) {\n\t\t\t\t\tconsole.error('测试失败:', error)\n\t\t\t\t\tlet errorMessage = '未知错误'\n\t\t\t\t\t\n\t\t\t\t\t// 详细的错误分类\n\t\t\t\t\tif (error.message.includes('grant not found')) {\n\t\t\t\t\t\terrorMessage = 'App ID 或 Access Key 无效，请检查配置是否正确'\n\t\t\t\t\t} else if (error.message.includes('timeout')) {\n\t\t\t\t\t\terrorMessage = '网络超时，请检查网络连接'\n\t\t\t\t\t} else if (error.message.includes('unauthorized') || error.message.includes('403')) {\n\t\t\t\t\t\terrorMessage = '权限不足，请确认账号已开通语音识别服务'\n\t\t\t\t\t} else if (error.message.includes('400')) {\n\t\t\t\t\t\terrorMessage = '请求参数错误，请检查配置信息'\n\t\t\t\t\t} else {\n\t\t\t\t\t\terrorMessage = error.message || '服务调用失败'\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tthis.testResult = {\n\t\t\t\t\t\tsuccess: false,\n\t\t\t\t\t\tmessage: `测试失败：${errorMessage}`\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t// 显示详细的帮助信息\n\t\t\t\t\tuni.showModal({\n\t\t\t\t\t\ttitle: '测试失败',\n\t\t\t\t\t\tcontent: `${errorMessage}\\n\\n建议：\\n1. 确认App ID和Access Key正确\\n2. 确认已开通火山引擎语音识别服务\\n3. 检查网络连接\\n4. 可尝试使用演示模式体验功能`,\n\t\t\t\t\t\tshowCancel: false\n\t\t\t\t\t})\n\t\t\t\t} finally {\n\t\t\t\t\tuni.hideLoading()\n\t\t\t\t}\n\t\t\t},\n\t\t\t\n\t\t\t// 测试火山引擎模式\n\t\t\tasync testVolcengineMode() {\n\t\t\t\t// 先进行简单的API连通性测试\n\t\t\t\tuni.showLoading({\n\t\t\t\t\ttitle: '检查API连接...'\n\t\t\t\t})\n\t\t\t\t\n\t\t\t\tconst connectivityTest = await this.testApiConnectivity()\n\t\t\t\t\n\t\t\t\tif (!connectivityTest.success) {\n\t\t\t\t\tthrow new Error(connectivityTest.message)\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// 尝试获取测试音频数据\n\t\t\t\tuni.showLoading({\n\t\t\t\t\ttitle: '准备测试音频...'\n\t\t\t\t})\n\t\t\t\t\n\t\t\t\tconst audioData = await this.getTestAudioData();\n\t\t\t\tif (!audioData) {\n\t\t\t\t\t// 如果没有音频数据，只进行API连通性测试\n\t\t\t\t\tthis.testResult = {\n\t\t\t\t\t\tsuccess: true,\n\t\t\t\t\t\tmessage: 'API配置正确，连接测试成功！（未找到测试音频文件，但API连通性正常）'\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tuni.showToast({\n\t\t\t\t\t\ttitle: 'API连接成功',\n\t\t\t\t\t\ticon: 'success'\n\t\t\t\t\t})\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// 使用音频数据进行完整测试\n\t\t\t\tuni.showLoading({\n\t\t\t\t\ttitle: '正在识别语音...'\n\t\t\t\t})\n\t\t\t\t\n\t\t\t\t// 直接调用Flash API，使用audioData\n\t\t\t\tconst result = await this.callFlashAPI(null, audioData)\n\t\t\t\t\n\t\t\t\tthis.testResult = {\n\t\t\t\t\tsuccess: true,\n\t\t\t\t\tmessage: result ? `识别成功：${result}` : 'API配置正确，但测试音频无法识别内容'\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tuni.showToast({\n\t\t\t\t\ttitle: '测试成功',\n\t\t\t\t\ticon: 'success'\n\t\t\t\t})\n\t\t\t},\n\t\t\t\n\t\t\t// API连通性测试\n\t\t\tasync testApiConnectivity() {\n\t\t\t\ttry {\n\t\t\t\t\t// 简单的API测试请求\n\t\t\t\t\tconst response = await uni.request({\n\t\t\t\t\t\turl: \"https://openspeech.bytedance.com/api/v3/auc/bigmodel/recognize/flash\",\n\t\t\t\t\t\tmethod: 'POST',\n\t\t\t\t\t\theader: {\n\t\t\t\t\t\t\t\"X-Api-App-Key\": this.config.appId,\n\t\t\t\t\t\t\t\"X-Api-Access-Key\": this.config.accessKey,\n\t\t\t\t\t\t\t\"X-Api-Resource-Id\": \"volc.bigasr.auc_turbo\",\n\t\t\t\t\t\t\t\"X-Api-Request-Id\": \"test-connectivity\",\n\t\t\t\t\t\t\t\"X-Api-Sequence\": \"-1\",\n\t\t\t\t\t\t\t\"Content-Type\": \"application/json\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\tdata: {\n\t\t\t\t\t\t\tuser: { uid: \"test\" },\n\t\t\t\t\t\t\taudio: { url: \"test\" },\n\t\t\t\t\t\t\trequest: { model_name: \"bigmodel\" }\n\t\t\t\t\t\t},\n\t\t\t\t\t\ttimeout: 10000\n\t\t\t\t\t})\n\t\t\t\t\t\n\t\t\t\t\t// 检查响应状态\n\t\t\t\t\tif (response.statusCode === 200) {\n\t\t\t\t\t\tconst statusCode = response.header['X-Api-Status-Code']\n\t\t\t\t\t\tif (statusCode === '20000000' || statusCode === '40000001') {\n\t\t\t\t\t\t\t// 连接成功（即使参数错误也说明认证通过）\n\t\t\t\t\t\t\treturn { success: true }\n\t\t\t\t\t\t} else if (statusCode === '40000003' || statusCode === '40000004') {\n\t\t\t\t\t\t\t// 认证失败\n\t\t\t\t\t\t\treturn { \n\t\t\t\t\t\t\t\tsuccess: false, \n\t\t\t\t\t\t\t\tmessage: 'App ID 或 Access Key 验证失败'\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\treturn { success: true } // 其他情况认为连接正常\n\t\t\t\t} catch (error) {\n\t\t\t\t\treturn { \n\t\t\t\t\t\tsuccess: false, \n\t\t\t\t\t\tmessage: `连接失败：${error.message}`\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\t\n\t\t\t// 调用Flash API进行语音识别\n\t\t\tasync callFlashAPI(audioUrl, audioData = null) {\n\t\t\t\tconst requestId = this.generateUUID()\n\t\t\t\tconst recognizeUrl = \"https://openspeech.bytedance.com/api/v3/auc/bigmodel/recognize/flash\"\n\t\t\t\t\n\t\t\t\tconst headers = {\n\t\t\t\t\t\"X-Api-App-Key\": this.config.appId,\n\t\t\t\t\t\"X-Api-Access-Key\": this.config.accessKey,\n\t\t\t\t\t\"X-Api-Resource-Id\": \"volc.bigasr.auc_turbo\",\n\t\t\t\t\t\"X-Api-Request-Id\": requestId,\n\t\t\t\t\t\"X-Api-Sequence\": \"-1\",\n\t\t\t\t\t\"Content-Type\": \"application/json\"\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// 构建音频数据\n\t\t\t\tlet audio_data = null\n\t\t\t\tif (audioUrl) {\n\t\t\t\t\taudio_data = { \"url\": audioUrl }\n\t\t\t\t} else if (audioData) {\n\t\t\t\t\taudio_data = { \"data\": audioData } // Base64编码的音频数据\n\t\t\t\t} else {\n\t\t\t\t\t// 如果没有音频数据，使用一个极小的测试音频数据\n\t\t\t\t\t// 这主要用于测试API的连通性和权限\n\t\t\t\t\taudio_data = { \"data\": \"\" }\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tconst requestData = {\n\t\t\t\t\tuser: {\n\t\t\t\t\t\tuid: this.config.appId\n\t\t\t\t\t},\n\t\t\t\t\taudio: audio_data,\n\t\t\t\t\trequest: {\n\t\t\t\t\t\tmodel_name: this.config.modelName,\n\t\t\t\t\t\tenable_itn: this.config.enableItn,\n\t\t\t\t\t\tenable_punc: this.config.enablePunc,\n\t\t\t\t\t\tenable_ddc: true,\n\t\t\t\t\t\tenable_speaker_info: this.config.enableSpeakerInfo\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tconsole.log('Flash API 请求数据:', requestData)\n\t\t\t\t\n\t\t\t\tconst response = await uni.request({\n\t\t\t\t\turl: recognizeUrl,\n\t\t\t\t\tmethod: 'POST',\n\t\t\t\t\theader: headers,\n\t\t\t\t\tdata: requestData,\n\t\t\t\t\ttimeout: 30000\n\t\t\t\t})\n\t\t\t\t\n\t\t\t\tconsole.log('Flash API 响应:', JSON.stringify(response))\n\t\t\t\t\n\t\t\t\tif (response.statusCode === 200) {\n\t\t\t\t\tconst statusCode = response.header['X-Api-Status-Code']\n\t\t\t\t\tif (statusCode === '20000000') {\n\t\t\t\t\t\t// 识别成功，直接返回结果\n\t\t\t\t\t\tconst result = response.data\n\t\t\t\t\t\t\n\t\t\t\t\t\t// 解析识别结果\n\t\t\t\t\t\tlet recognizedText = ''\n\t\t\t\t\t\t\n\t\t\t\t\t\t// 支持多种返回格式\n\t\t\t\t\t\tif (result && result.data && result.data.result && result.data.result.text) {\n\t\t\t\t\t\t\trecognizedText = result.data.result.text\n\t\t\t\t\t\t} else if (result && result.result && result.result.text) {\n\t\t\t\t\t\t\trecognizedText = result.result.text\n\t\t\t\t\t\t} else if (result && result.utterances && result.utterances.length > 0) {\n\t\t\t\t\t\t\trecognizedText = result.utterances.map(item => item.text).join('')\n\t\t\t\t\t\t} else if (result && result.text) {\n\t\t\t\t\t\t\trecognizedText = result.text\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\treturn recognizedText.trim() || null\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthrow new Error(`语音识别失败: ${response.header['X-Api-Message'] || '未知错误'}`)\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tthrow new Error(`API调用失败: HTTP ${response.statusCode}`)\n\t\t\t\t}\n\t\t\t},\n\t\t\t\n\t\t\t// 保存配置\n\t\t\tsaveConfiguration() {\n\t\t\t\tif (!this.canSave) return\n\t\t\t\t\n\t\t\t\ttry {\n\t\t\t\t\tuni.setStorageSync('voiceConfig', this.config)\n\t\t\t\t\t\n\t\t\t\t\tuni.showToast({\n\t\t\t\t\t\ttitle: '保存成功',\n\t\t\t\t\t\ticon: 'success'\n\t\t\t\t\t})\n\t\t\t\t\t\n\t\t\t\t\t// 延迟返回\n\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\tuni.navigateBack()\n\t\t\t\t\t}, 1500)\n\t\t\t\t\t\n\t\t\t\t} catch (error) {\n\t\t\t\t\tuni.showToast({\n\t\t\t\t\t\ttitle: '保存失败',\n\t\t\t\t\t\ticon: 'error'\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t},\n\t\t\t\n\t\t\t// 打开帮助文档\n\t\t\topenHelp() {\n\t\t\t\tuni.showModal({\n\t\t\t\t\ttitle: '火山引擎语音识别配置指南',\n\t\t\t\t\tcontent: '1. 访问 console.volcengine.com\\n2. 开通\"语音技术-语音识别\"服务\\n3. 创建应用，获取App ID\\n4. 在\"访问管理\"中创建Access Key\\n5. 确保账号有足够余额或已购买套餐\\n6. 将获取的App ID和Access Key填入配置\\n\\n注意：请确保服务已正常开通并有使用权限',\n\t\t\t\t\tconfirmText: '明白了',\n\t\t\t\t\tshowCancel: false\n\t\t\t\t})\n\t\t\t},\n\t\t\t\n\t\t\t// 获取测试音频数据\n\t\t\tasync getTestAudioData() {\n\t\t\t\ttry {\n\t\t\t\t\tconsole.log('开始获取测试音频数据...');\n\t\t\t\t\t\n\t\t\t\t\t// 获取static目录下的test.mp3文件\n\t\t\t\t\tconst audioPath = '/static/test.mp3';\n\t\t\t\t\t\n\t\t\t\t\t// #ifdef APP-PLUS\n\t\t\t\t\t// App环境下使用plus.io\n\t\t\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\t\t\tconsole.log('App环境：尝试读取音频文件');\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tconst filePath = plus.io.convertLocalFileSystemURL(audioPath);\n\t\t\t\t\t\t\tplus.io.resolveLocalFileSystemURL(filePath, (entry) => {\n\t\t\t\t\t\t\t\tentry.file((file) => {\n\t\t\t\t\t\t\t\t\tconst reader = new plus.io.FileReader();\n\t\t\t\t\t\t\t\t\treader.onloadend = (e) => {\n\t\t\t\t\t\t\t\t\t\tconst base64 = e.target.result.split(',')[1];\n\t\t\t\t\t\t\t\t\t\tconsole.log('App环境成功读取音频文件:', audioPath);\n\t\t\t\t\t\t\t\t\t\tresolve(base64);\n\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\treader.onerror = () => {\n\t\t\t\t\t\t\t\t\t\tconsole.error('App环境读取音频文件失败');\n\t\t\t\t\t\t\t\t\t\tresolve('');\n\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\treader.readAsDataURL(file);\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}, () => {\n\t\t\t\t\t\t\t\tconsole.error('App环境：文件不存在');\n\t\t\t\t\t\t\t\tresolve('');\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\t\tconsole.error('App环境获取音频文件出错:', error);\n\t\t\t\t\t\t\tresolve('');\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\t// #endif\n\t\t\t\t\t\n\t\t\t\t\t// #ifndef APP-PLUS\n\t\t\t\t\t// 非App环境处理\n\t\t\t\t\tconsole.log('非App环境：检查可用的API');\n\t\t\t\t\t\n\t\t\t\t\t// 检查是否支持文件系统管理器（小程序环境）\n\t\t\t\t\tif (typeof uni.getFileSystemManager === 'function') {\n\t\t\t\t\t\tconsole.log('小程序环境：使用getFileSystemManager');\n\t\t\t\t\t\tconst fs = uni.getFileSystemManager();\n\t\t\t\t\t\treturn new Promise((resolve) => {\n\t\t\t\t\t\t\tfs.readFile({\n\t\t\t\t\t\t\t\tfilePath: audioPath,\n\t\t\t\t\t\t\t\tencoding: 'base64',\n\t\t\t\t\t\t\t\tsuccess: (res) => {\n\t\t\t\t\t\t\t\t\tconsole.log('小程序环境成功读取音频文件:', audioPath);\n\t\t\t\t\t\t\t\t\tresolve(res.data);\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tfail: (error) => {\n\t\t\t\t\t\t\t\t\tconsole.error('小程序环境读取音频文件失败:', error);\n\t\t\t\t\t\t\t\t\tresolve('');\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t});\n\t\t\t\t\t} \n\t\t\t\t\t// H5环境或其他环境\n\t\t\t\t\telse if (typeof fetch !== 'undefined') {\n\t\t\t\t\t\tconsole.log('H5环境：使用fetch API');\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tconst response = await fetch(audioPath);\n\t\t\t\t\t\t\tif (!response.ok) {\n\t\t\t\t\t\t\t\tthrow new Error(`HTTP ${response.status}: ${response.statusText}`);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tconst blob = await response.blob();\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\treturn new Promise((resolve) => {\n\t\t\t\t\t\t\t\tconst reader = new FileReader();\n\t\t\t\t\t\t\t\treader.onload = function() {\n\t\t\t\t\t\t\t\t\tconst base64 = reader.result.split(',')[1]; // 去掉data:audio/mp3;base64,前缀\n\t\t\t\t\t\t\t\t\tconsole.log('H5环境成功读取音频文件:', audioPath);\n\t\t\t\t\t\t\t\t\tresolve(base64);\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\treader.onerror = function() {\n\t\t\t\t\t\t\t\t\tconsole.error('H5环境读取音频文件失败');\n\t\t\t\t\t\t\t\t\tresolve('');\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\treader.readAsDataURL(blob);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\t\tconsole.error('H5环境获取音频文件失败:', error);\n\t\t\t\t\t\t\tconsole.log('H5环境：无法获取音频文件，跳过音频测试');\n\t\t\t\t\t\t\treturn '';\n\t\t\t\t\t\t}\n\t\t\t\t\t} \n\t\t\t\t\t// 其他环境\n\t\t\t\t\telse {\n\t\t\t\t\t\tconsole.log('当前环境不支持文件读取，跳过音频测试');\n\t\t\t\t\t\treturn '';\n\t\t\t\t\t}\n\t\t\t\t\t// #endif\n\t\t\t\t\t\n\t\t\t\t} catch (error) {\n\t\t\t\t\tconsole.error('获取测试音频数据出错:', error);\n\t\t\t\t\treturn '';\n\t\t\t\t}\n\t\t\t},\n\t\t\t\n\t\t\t// 生成UUID\n\t\t\tgenerateUUID() {\n\t\t\t\treturn 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n\t\t\t\t\tconst r = Math.random() * 16 | 0\n\t\t\t\t\tconst v = c === 'x' ? r : (r & 0x3 | 0x8)\n\t\t\t\t\treturn v.toString(16)\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t}\n</script>\n\n<style scoped>\n\t.container {\n\t\tpadding: 30rpx;\n\t\tbackground-color: #F5F5F5;\n\t\tmin-height: 100vh;\n\t}\n\t\n\t.header {\n\t\ttext-align: center;\n\t\tmargin-bottom: 50rpx;\n\t}\n\t\n\t.title {\n\t\tdisplay: block;\n\t\tfont-size: 36rpx;\n\t\tfont-weight: bold;\n\t\tcolor: #333;\n\t\tmargin-bottom: 10rpx;\n\t}\n\t\n\t.subtitle {\n\t\tfont-size: 26rpx;\n\t\tcolor: #666;\n\t}\n\t\n\t.config-form {\n\t\tmargin-bottom: 50rpx;\n\t}\n\t\n\t.form-section {\n\t\tbackground: white;\n\t\tborder-radius: 20rpx;\n\t\tpadding: 30rpx;\n\t\tmargin-bottom: 30rpx;\n\t\tbox-shadow: 0 2rpx 10rpx rgba(0,0,0,0.05);\n\t}\n\t\n\t.section-title {\n\t\tdisplay: block;\n\t\tfont-size: 30rpx;\n\t\tfont-weight: bold;\n\t\tcolor: #333;\n\t\tmargin-bottom: 30rpx;\n\t\tpadding-bottom: 15rpx;\n\t\tborder-bottom: 2rpx solid #F0F0F0;\n\t}\n\t\n\t.form-item {\n\t\tmargin-bottom: 30rpx;\n\t}\n\t\n\t.form-item:last-child {\n\t\tmargin-bottom: 0;\n\t}\n\t\n\t.label {\n\t\tdisplay: block;\n\t\tfont-size: 28rpx;\n\t\tcolor: #333;\n\t\tmargin-bottom: 15rpx;\n\t\tfont-weight: 500;\n\t}\n\t\n\t.input {\n\t\twidth: 100%;\n\t\theight: 80rpx;\n\t\tbackground: #F8F9FA;\n\t\tborder: 2rpx solid #E9ECEF;\n\t\tborder-radius: 15rpx;\n\t\tpadding: 0 20rpx;\n\t\tfont-size: 28rpx;\n\t\tcolor: #333;\n\t\tbox-sizing: border-box;\n\t}\n\t\n\t.input:focus {\n\t\tborder-color: #667eea;\n\t\tbackground: white;\n\t}\n\t\n\t.picker {\n\t\theight: 80rpx;\n\t\tbackground: #F8F9FA;\n\t\tborder: 2rpx solid #E9ECEF;\n\t\tborder-radius: 15rpx;\n\t\tpadding: 0 20rpx;\n\t\tfont-size: 28rpx;\n\t\tcolor: #333;\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tposition: relative;\n\t}\n\t\n\t.picker::after {\n\t\tcontent: '>';\n\t\tposition: absolute;\n\t\tright: 20rpx;\n\t\tcolor: #999;\n\t\ttransform: rotate(90deg);\n\t}\n\t\n\t.switch-item {\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tjustify-content: space-between;\n\t}\n\t\n\t.switch-item .label {\n\t\tmargin-bottom: 0;\n\t\tflex: 1;\n\t}\n\t\n\t.help-content {\n\t\tmargin-bottom: 30rpx;\n\t}\n\t\n\t.help-text {\n\t\tdisplay: block;\n\t\tfont-size: 26rpx;\n\t\tcolor: #666;\n\t\tline-height: 1.6;\n\t\tmargin-bottom: 15rpx;\n\t\tpadding-left: 20rpx;\n\t\tposition: relative;\n\t}\n\t\n\t.help-text::before {\n\t\tcontent: '•';\n\t\tposition: absolute;\n\t\tleft: 0;\n\t\tcolor: #667eea;\n\t}\n\t\n\t.error-help {\n\t\tbackground: #FFF3E0;\n\t\tborder: 2rpx solid #FFB74D;\n\t\tborder-radius: 15rpx;\n\t\tpadding: 20rpx;\n\t\tmargin: 20rpx 0 30rpx 0;\n\t}\n\t\n\t.error-title {\n\t\tdisplay: block;\n\t\tfont-size: 28rpx;\n\t\tfont-weight: bold;\n\t\tcolor: #E65100;\n\t\tmargin-bottom: 15rpx;\n\t}\n\t\n\t.error-text {\n\t\tdisplay: block;\n\t\tfont-size: 24rpx;\n\t\tcolor: #BF360C;\n\t\tline-height: 1.5;\n\t\tmargin-bottom: 10rpx;\n\t\tpadding-left: 15rpx;\n\t\tposition: relative;\n\t}\n\t\n\t.error-text::before {\n\t\tcontent: '•';\n\t\tposition: absolute;\n\t\tleft: 0;\n\t\tcolor: #FF9800;\n\t}\n\t\n\t.help-btn {\n\t\twidth: 100%;\n\t\theight: 80rpx;\n\t\tbackground: linear-gradient(45deg, #E3F2FD, #BBDEFB);\n\t\tcolor: #1976D2;\n\t\tborder: 2rpx solid #BBDEFB;\n\t\tborder-radius: 15rpx;\n\t\tfont-size: 28rpx;\n\t\tfont-weight: 500;\n\t}\n\t\n\t.actions {\n\t\tdisplay: flex;\n\t\tgap: 20rpx;\n\t\tmargin-bottom: 30rpx;\n\t}\n\t\n\t.test-btn {\n\t\tflex: 1;\n\t\theight: 90rpx;\n\t\tbackground: linear-gradient(45deg, #FF9800, #FFB74D);\n\t\tcolor: white;\n\t\tborder: none;\n\t\tborder-radius: 25rpx;\n\t\tfont-size: 30rpx;\n\t\tfont-weight: bold;\n\t}\n\t\n\t.test-btn:disabled {\n\t\topacity: 0.5;\n\t}\n\t\n\t.save-btn {\n\t\tflex: 1;\n\t\theight: 90rpx;\n\t\tbackground: linear-gradient(45deg, #667eea, #764ba2);\n\t\tcolor: white;\n\t\tborder: none;\n\t\tborder-radius: 25rpx;\n\t\tfont-size: 30rpx;\n\t\tfont-weight: bold;\n\t}\n\t\n\t.save-btn:disabled {\n\t\topacity: 0.5;\n\t}\n\t\n\t.test-result {\n\t\tbackground: white;\n\t\tborder-radius: 20rpx;\n\t\tpadding: 30rpx;\n\t\tbox-shadow: 0 2rpx 10rpx rgba(0,0,0,0.05);\n\t}\n\t\n\t.test-result.success {\n\t\tborder-left: 8rpx solid #4CAF50;\n\t}\n\t\n\t.test-result.error {\n\t\tborder-left: 8rpx solid #F44336;\n\t}\n\t\n\t.result-title {\n\t\tdisplay: block;\n\t\tfont-size: 30rpx;\n\t\tfont-weight: bold;\n\t\tmargin-bottom: 15rpx;\n\t}\n\t\n\t.test-result.success .result-title {\n\t\tcolor: #4CAF50;\n\t}\n\t\n\t.test-result.error .result-title {\n\t\tcolor: #F44336;\n\t}\n\t\n\t.result-message {\n\t\tfont-size: 26rpx;\n\t\tcolor: #666;\n\t\tline-height: 1.5;\n\t}\n</style>\n","import MiniProgramPage from 'D:/simple-account-v1.0.4/pages/voice-config/voice-config.vue'\nwx.createPage(MiniProgramPage)"],"names":["uni"],"mappings":"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"}