{"version":3,"file":"category-detail.js","sources":["pages/category-detail/category-detail.vue","../Edgedownload/HBuilderX/plugins/uniapp-cli-vite/uniPage:/cGFnZXMvY2F0ZWdvcnktZGV0YWlsL2NhdGVnb3J5LWRldGFpbC52dWU"],"sourcesContent":["<template>\n\t<view class=\"container\">\n\t\t<!-- 分类头部信息 -->\n\t\t<view class=\"category-header\">\n\t\t\t<view class=\"category-info\">\n\t\t\t\t<text class=\"category-icon\">{{categoryInfo.icon}}</text>\n\t\t\t\t<text class=\"category-name\">{{categoryInfo.name}}</text>\n\t\t\t</view>\n\t\t\t<view class=\"category-type\">\n\t\t\t\t<text class=\"type-text\">{{categoryInfo.type === 'expense' ? '支出分类' : '收入分类'}}</text>\n\t\t\t</view>\n\t\t</view>\n\t\t\n\t\t\n\t\t\n\t\t<!-- 年度统计 -->\n\t\t<view class=\"yearly-stats\">\n\t\t\t<text class=\"section-title\">今年数据</text>\n\t\t\t<view class=\"yearly-overview\">\n\t\t\t\t<view class=\"yearly-summary\">\n\t\t\t\t\t<view class=\"yearly-item\">\n\t\t\t\t\t\t<text class=\"yearly-label\">年度总次数</text>\n\t\t\t\t\t\t<text class=\"yearly-value\">{{yearlyCount}}次</text>\n\t\t\t\t\t</view>\n\t\t\t\t\t<view class=\"yearly-item\">\n\t\t\t\t\t\t<text class=\"yearly-label\">年度总金额</text>\n\t\t\t\t\t\t<text class=\"yearly-value\">¥{{yearlyAmount}}</text>\n\t\t\t\t\t</view>\n\t\t\t\t</view>\n\t\t\t\t\n\t\t\t\t<!-- 与去年对比 -->\n\t\t\t\t<view class=\"year-comparison-section\" v-if=\"lastYearCount > 0 || yearlyCount > 0\">\n\t\t\t\t\t<text class=\"comparison-title\">与去年对比</text>\n\t\t\t\t\t<view class=\"comparison-grid\">\n\t\t\t\t\t\t<view class=\"comparison-item\">\n\t\t\t\t\t\t\t<text class=\"comparison-label\">次数变化</text>\n\t\t\t\t\t\t\t<text class=\"comparison-value\" :class=\"getComparisonClass(yearlyCount, lastYearCount)\">\n\t\t\t\t\t\t\t\t{{getComparisonText(yearlyCount, lastYearCount, '次')}}\n\t\t\t\t\t\t\t</text>\n\t\t\t\t\t\t</view>\n\t\t\t\t\t\t<view class=\"comparison-item\">\n\t\t\t\t\t\t\t<text class=\"comparison-label\">金额变化</text>\n\t\t\t\t\t\t\t<text class=\"comparison-value\" :class=\"getComparisonClass(parseFloat(yearlyAmount), parseFloat(lastYearAmount))\">\n\t\t\t\t\t\t\t\t{{getComparisonText(parseFloat(yearlyAmount), parseFloat(lastYearAmount), '元')}}\n\t\t\t\t\t\t\t</text>\n\t\t\t\t\t\t</view>\n\t\t\t\t\t</view>\n\t\t\t\t</view>\n\t\t\t</view>\n\t\t</view>\n\t\t<!-- 月度统计 -->\n\t\t<view class=\"monthly-stats\">\n\t\t\t<text class=\"section-title\">本月数据</text>\n\t\t\t<view class=\"monthly-info\">\n\t\t\t\t<view class=\"monthly-item\">\n\t\t\t\t\t<text class=\"monthly-label\">使用次数</text>\n\t\t\t\t\t<text class=\"monthly-value\">{{monthlyCount}}次</text>\n\t\t\t\t</view>\n\t\t\t\t<view class=\"monthly-item\">\n\t\t\t\t\t<text class=\"monthly-label\">总金额</text>\n\t\t\t\t\t<text class=\"monthly-value\">¥{{monthlyAmount}}</text>\n\t\t\t\t</view>\n\t\t\t</view>\n\t\t\t\n\t\t\t<!-- 与上月对比 -->\n\t\t\t<view class=\"comparison-section\" v-if=\"lastMonthCount > 0 || monthlyCount > 0\">\n\t\t\t\t<text class=\"comparison-title\">与上月对比</text>\n\t\t\t\t<view class=\"comparison-grid\">\n\t\t\t\t\t<view class=\"comparison-item\">\n\t\t\t\t\t\t<text class=\"comparison-label\">次数变化</text>\n\t\t\t\t\t\t<text class=\"comparison-value\" :class=\"getComparisonClass(monthlyCount, lastMonthCount)\">\n\t\t\t\t\t\t\t{{getComparisonText(monthlyCount, lastMonthCount, '次')}}\n\t\t\t\t\t\t</text>\n\t\t\t\t\t</view>\n\t\t\t\t\t<view class=\"comparison-item\">\n\t\t\t\t\t\t<text class=\"comparison-label\">金额变化</text>\n\t\t\t\t\t\t<text class=\"comparison-value\" :class=\"getComparisonClass(parseFloat(monthlyAmount), parseFloat(lastMonthAmount))\">\n\t\t\t\t\t\t\t{{getComparisonText(parseFloat(monthlyAmount), parseFloat(lastMonthAmount), '元')}}\n\t\t\t\t\t\t</text>\n\t\t\t\t\t</view>\n\t\t\t\t</view>\n\t\t\t</view>\n\t\t</view>\n        \n\t\t<!-- 趋势分析 -->\n\t\t<view class=\"trend-analysis\">\n\t\t\t<text class=\"section-title\">趋势分析</text>\n\t\t\t<view class=\"trend-overview\">\n\t\t\t\t<!-- 年度趋势 -->\n\t\t\t\t<view class=\"yearly-trend\" v-if=\"yearlyTrend.length > 0\">\n\t\t\t\t\t<text class=\"trend-title\">年度趋势</text>\n\t\t\t\t\t<view class=\"year-trend-chart\">\n\t\t\t\t\t\t<view v-for=\"(year, index) in yearlyTrend\" \n\t\t\t\t\t\t\t  :key=\"index\" \n\t\t\t\t\t\t\t  class=\"year-trend-bar\"\n\t\t\t\t\t\t\t  :style=\"{height: getYearTrendBarHeight(year.amount) + 'rpx'}\">\n\t\t\t\t\t\t\t<text class=\"trend-year\">{{year.year}}</text>\n\t\t\t\t\t\t\t<view class=\"year-trend-value\">\n\t\t\t\t\t\t\t\t<text class=\"trend-amount\">¥{{year.amount}}</text>\n\t\t\t\t\t\t\t</view>\n\t\t\t\t\t\t</view>\n\t\t\t\t\t</view>\n\t\t\t\t</view>\n\t\t\t\t\n\t\t\t\t<!-- 月度趋势 -->\n\t\t\t\t<view class=\"monthly-trend\" v-if=\"monthlyTrend.length > 0\">\n\t\t\t\t\t<text class=\"trend-title\">月度趋势</text>\n\t\t\t\t\t<view class=\"trend-chart\">\n\t\t\t\t\t\t<view v-for=\"(month, index) in monthlyTrend\" \n\t\t\t\t\t\t\t  :key=\"index\" \n\t\t\t\t\t\t\t  class=\"trend-bar\"\n\t\t\t\t\t\t\t  :style=\"{height: getTrendBarHeight(month.amount) + 'rpx'}\">\n\t\t\t\t\t\t\t<text class=\"trend-month\">{{getMonthLabel(month)}}</text>\n\t\t\t\t\t\t\t<view class=\"trend-value\">\n\t\t\t\t\t\t\t\t<text class=\"trend-amount\">¥{{month.amount}}</text>\n\t\t\t\t\t\t\t</view>\n\t\t\t\t\t\t</view>\n\t\t\t\t\t</view>\n\t\t\t\t</view>\n\t\t\t</view>\n\t\t</view>\n\t\t\n        \n\n        <!-- 统计概览 -->\n\t\t<view class=\"stats-overview\">\n\t\t\t<text class=\"section-title\">统计概览</text>\n\t\t\t<view class=\"stats-grid\">\n\t\t\t\t<view class=\"stat-item\">\n\t\t\t\t\t<text class=\"stat-value\">{{totalCount}}</text>\n\t\t\t\t\t<text class=\"stat-label\">使用次数</text>\n\t\t\t\t</view>\n\t\t\t\t<view class=\"stat-item\">\n\t\t\t\t\t<text class=\"stat-value\">¥{{totalAmount}}</text>\n\t\t\t\t\t<text class=\"stat-label\">总金额</text>\n\t\t\t\t</view>\n\t\t\t\t<view class=\"stat-item\">\n\t\t\t\t\t<text class=\"stat-value\">¥{{avgAmount}}</text>\n\t\t\t\t\t<text class=\"stat-label\">平均金额</text>\n\t\t\t\t</view>\n\t\t\t\t<view class=\"stat-item\">\n\t\t\t\t\t<text class=\"stat-value\">¥{{maxAmount}}</text>\n\t\t\t\t\t<text class=\"stat-label\">最高单笔</text>\n\t\t\t\t</view>\n\t\t\t</view>\n\t\t</view>\n\t\t\n\t\t<!-- 时间统计 -->\n\t\t<view class=\"time-stats\">\n\t\t\t<text class=\"section-title\">使用时间</text>\n\t\t\t<view class=\"time-info\">\n\t\t\t\t<view class=\"time-item\">\n\t\t\t\t\t<text class=\"time-label\">首次使用</text>\n\t\t\t\t\t<text class=\"time-value\">{{firstUseDate}}</text>\n\t\t\t\t</view>\n\t\t\t\t<view class=\"time-item\">\n\t\t\t\t\t<text class=\"time-label\">最近使用</text>\n\t\t\t\t\t<text class=\"time-value\">{{lastUseDate}}</text>\n\t\t\t\t</view>\n\t\t\t</view>\n\t\t</view>\n\n\t\t<!-- 记录列表 -->\n\t\t<view class=\"records-section\">\n\t\t\t<view class=\"section-header\">\n\t\t\t\t<text class=\"section-title\">使用记录</text>\n\t\t\t\t<text class=\"record-count\">共{{records.length}}条</text>\n\t\t\t</view>\n\t\t\t\n\t\t\t<view v-if=\"records.length === 0\" class=\"empty-records\">\n\t\t\t\t<text class=\"empty-text\">暂无使用记录</text>\n\t\t\t\t<button class=\"add-record-btn\" @click=\"goToAdd\" type=\"primary\">记一笔</button>\n\t\t\t</view>\n\t\t\t\n\t\t\t<view v-else class=\"records-list\">\n\t\t\t\t<view v-for=\"record in displayRecords\" :key=\"record.id\" class=\"record-item\" @click=\"showRecordDetail(record)\">\n\t\t\t\t\t<view class=\"record-left\">\n\t\t\t\t\t\t<view class=\"record-date\">\n\t\t\t\t\t\t\t<text class=\"date-text\">{{formatDate(record.time)}}</text>\n\t\t\t\t\t\t\t<text class=\"time-text\">{{formatTime(record.time)}}</text>\n\t\t\t\t\t\t</view>\n\t\t\t\t\t\t<text class=\"record-note\" v-if=\"record.note\">{{record.note}}</text>\n\t\t\t\t\t\t<text class=\"record-note empty-note\" v-else>无备注</text>\n\t\t\t\t\t</view>\n\t\t\t\t\t<view class=\"record-right\">\n\t\t\t\t\t\t<text class=\"record-amount\" :class=\"record.type\">\n\t\t\t\t\t\t\t{{record.type === 'expense' ? '-' : '+'}}¥{{record.amount}}\n\t\t\t\t\t\t</text>\n\t\t\t\t\t</view>\n\t\t\t\t</view>\n\t\t\t\t\n\t\t\t\t<view v-if=\"records.length > displayRecords.length\" class=\"load-more\">\n\t\t\t\t\t<button class=\"load-more-btn\" @click=\"loadMoreRecords\">\n\t\t\t\t\t\t加载更多 (还有{{records.length - displayRecords.length}}条)\n\t\t\t\t\t</button>\n\t\t\t\t</view>\n\t\t\t</view>\n\t\t</view>\n\t\t\n\t\t<!-- 操作按钮 -->\n\t\t<view class=\"actions\">\n\t\t\t<button class=\"action-btn primary\" @click=\"goToAdd\">添加{{categoryInfo.name}}记录</button>\n\t\t</view>\n\t</view>\n</template>\n\n<script>\n\texport default {\n\t\tdata() {\n\t\t\treturn {\n\t\t\t\tcategoryInfo: {},\n\t\t\t\trecords: [],\n\t\t\t\tdisplayRecords: [],\n\t\t\t\tpageSize: 10,\n\t\t\t\ttotalCount: 0,\n\t\t\t\ttotalAmount: '0.00',\n\t\t\t\tavgAmount: '0.00',\n\t\t\t\tmaxAmount: '0.00',\n\t\t\t\tminAmount: '0.00',\n\t\t\t\tfirstUseDate: '暂无',\n\t\t\t\tlastUseDate: '暂无',\n\t\t\t\tmonthlyCount: 0,\n\t\t\t\tmonthlyAmount: '0.00',\n\t\t\t\tlastMonthCount: 0,\n\t\t\t\tlastMonthAmount: '0.00',\n\t\t\t\tyearlyCount: 0,\n\t\t\t\tyearlyAmount: '0.00',\n\t\t\t\tlastYearCount: 0,\n\t\t\t\tlastYearAmount: '0.00',\n\t\t\t\tmonthlyTrend: [],\n\t\t\t\tyearlyTrend: [],\n\t\t\t\t// 金额计算工具函数，解决浮点数精度问题\n\t\t\t\tmoneyCalculator: {\n\t\t\t\t\t// 金额加法\n\t\t\t\t\tadd(a, b) {\n\t\t\t\t\t\tconst factor = 100\n\t\t\t\t\t\treturn Math.round((parseFloat(a) * factor + parseFloat(b) * factor)) / factor\n\t\t\t\t\t},\n\t\t\t\t\t\n\t\t\t\t\t// 金额减法\n\t\t\t\t\tsubtract(a, b) {\n\t\t\t\t\t\tconst factor = 100\n\t\t\t\t\t\treturn Math.round((parseFloat(a) * factor - parseFloat(b) * factor)) / factor\n\t\t\t\t\t},\n\t\t\t\t\t\n\t\t\t\t\t// 金额乘法\n\t\t\t\t\tmultiply(a, b) {\n\t\t\t\t\t\tconst factor = 100\n\t\t\t\t\t\treturn Math.round(parseFloat(a) * parseFloat(b) * factor) / factor\n\t\t\t\t\t},\n\t\t\t\t\t\n\t\t\t\t\t// 金额除法\n\t\t\t\t\tdivide(a, b) {\n\t\t\t\t\t\tif (parseFloat(b) === 0) return 0\n\t\t\t\t\t\tconst factor = 100\n\t\t\t\t\t\treturn Math.round((parseFloat(a) / parseFloat(b)) * factor) / factor\n\t\t\t\t\t},\n\t\t\t\t\t\n\t\t\t\t\t// 格式化金额，保留两位小数\n\t\t\t\t\tformat(amount) {\n\t\t\t\t\t\treturn parseFloat(amount).toFixed(2)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\n\t\tonLoad(options) {\n\t\t\tif (options.category) {\n\t\t\t\ttry {\n\t\t\t\t\tthis.categoryInfo = JSON.parse(decodeURIComponent(options.category))\n\t\t\t\t\tthis.loadCategoryData()\n\t\t\t\t} catch (e) {\n\t\t\t\t\tconsole.error('解析分类信息失败:', e)\n\t\t\t\t\tuni.showToast({\n\t\t\t\t\t\ttitle: '数据加载失败',\n\t\t\t\t\t\ticon: 'none'\n\t\t\t\t\t})\n\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\tuni.navigateBack()\n\t\t\t\t\t}, 1500)\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\n\t\tmethods: {\n\t\t\tloadCategoryData() {\n\t\t\t\tconst allRecords = uni.getStorageSync('records') || []\n\t\t\t\tthis.records = allRecords.filter(record => \n\t\t\t\t\trecord.categoryId === this.categoryInfo.id && record.type === this.categoryInfo.type\n\t\t\t\t).sort((a, b) => new Date(b.time) - new Date(a.time))\n\t\t\t\t\n\t\t\t\tthis.calculateStats()\n\t\t\t\tthis.loadMoreRecords(true)\n\t\t\t},\n\t\t\t\n\t\t\tcalculateStats() {\n\t\t\t\tif (this.records.length === 0) {\n\t\t\t\t\tthis.totalCount = 0\n\t\t\t\t\tthis.totalAmount = '0.00'\n\t\t\t\t\tthis.avgAmount = '0.00'\n\t\t\t\t\tthis.maxAmount = '0.00'\n\t\t\t\t\tthis.minAmount = '0.00'\n\t\t\t\t\tthis.firstUseDate = '暂无'\n\t\t\t\t\tthis.lastUseDate = '暂无'\n\t\t\t\t\tthis.monthlyCount = 0\n\t\t\t\t\tthis.monthlyAmount = '0.00'\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// 基础统计\n\t\t\t\tthis.totalCount = this.records.length\n\t\t\t\tlet totalAmount = 0\n\t\t\t\tlet maxAmount = 0\n\t\t\t\tlet minAmount = Infinity\n\t\t\t\t\n\t\t\t\tthis.records.forEach(record => {\n\t\t\t\t\tconst amount = parseFloat(record.amount)\n\t\t\t\t\ttotalAmount = this.moneyCalculator.add(totalAmount, amount)\n\t\t\t\t\tif (amount > maxAmount) maxAmount = amount\n\t\t\t\t\tif (amount < minAmount) minAmount = amount\n\t\t\t\t})\n\t\t\t\t\n\t\t\t\tthis.totalAmount = this.moneyCalculator.format(totalAmount)\n\t\t\t\tthis.avgAmount = this.moneyCalculator.format(this.moneyCalculator.divide(totalAmount, this.records.length))\n\t\t\t\tthis.maxAmount = this.moneyCalculator.format(maxAmount)\n\t\t\t\tthis.minAmount = minAmount === Infinity ? '0.00' : this.moneyCalculator.format(minAmount)\n\t\t\t\t\n\t\t\t\t// 时间统计\n\t\t\t\tconst sortedByTime = [...this.records].sort((a, b) => new Date(a.time) - new Date(b.time))\n\t\t\t\tthis.firstUseDate = this.formatDate(sortedByTime[0].time)\n\t\t\t\tthis.lastUseDate = this.formatDate(sortedByTime[sortedByTime.length - 1].time)\n\t\t\t\t\n\t\t\t\t// 月度统计\n\t\t\t\tthis.calculateMonthlyStats()\n\t\t\t\t\n\t\t\t\t// 年度统计\n\t\t\t\tthis.calculateYearlyStats()\n\t\t\t},\n\t\t\t\n\t\t\tcalculateMonthlyStats() {\n\t\t\t\tconst now = new Date()\n\t\t\t\tconst currentYear = now.getFullYear()\n\t\t\t\tconst currentMonth = now.getMonth()\n\t\t\t\t\n\t\t\t\t// 本月统计\n\t\t\t\tconst monthRecords = this.records.filter(record => {\n\t\t\t\t\tconst recordDate = new Date(record.time)\n\t\t\t\t\treturn recordDate.getFullYear() === currentYear && recordDate.getMonth() === currentMonth\n\t\t\t\t})\n\t\t\t\t\n\t\t\t\tthis.monthlyCount = monthRecords.length\n\t\t\t\tif (monthRecords.length > 0) {\n\t\t\t\t\tlet monthTotal = 0\n\t\t\t\t\tmonthRecords.forEach(record => {\n\t\t\t\t\t\tmonthTotal = this.moneyCalculator.add(monthTotal, parseFloat(record.amount))\n\t\t\t\t\t})\n\t\t\t\t\tthis.monthlyAmount = this.moneyCalculator.format(monthTotal)\n\t\t\t\t} else {\n\t\t\t\t\tthis.monthlyAmount = '0.00'\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// 上月统计\n\t\t\t\tconst lastMonth = currentMonth === 0 ? 11 : currentMonth - 1\n\t\t\t\tconst lastMonthYear = currentMonth === 0 ? currentYear - 1 : currentYear\n\t\t\t\t\n\t\t\t\tconst lastMonthRecords = this.records.filter(record => {\n\t\t\t\t\tconst recordDate = new Date(record.time)\n\t\t\t\t\treturn recordDate.getFullYear() === lastMonthYear && recordDate.getMonth() === lastMonth\n\t\t\t\t})\n\t\t\t\t\n\t\t\t\tthis.lastMonthCount = lastMonthRecords.length\n\t\t\t\tif (lastMonthRecords.length > 0) {\n\t\t\t\t\tlet lastMonthTotal = 0\n\t\t\t\t\tlastMonthRecords.forEach(record => {\n\t\t\t\t\t\tlastMonthTotal = this.moneyCalculator.add(lastMonthTotal, parseFloat(record.amount))\n\t\t\t\t\t})\n\t\t\t\t\tthis.lastMonthAmount = this.moneyCalculator.format(lastMonthTotal)\n\t\t\t\t} else {\n\t\t\t\t\tthis.lastMonthAmount = '0.00'\n\t\t\t\t}\n\t\t\t},\n\t\t\t\n\t\t\tcalculateYearlyStats() {\n\t\t\t\tconst now = new Date()\n\t\t\t\tconst currentYear = now.getFullYear()\n\t\t\t\t\n\t\t\t\t// 年度统计\n\t\t\t\tconst yearRecords = this.records.filter(record => {\n\t\t\t\t\tconst recordDate = new Date(record.time)\n\t\t\t\t\treturn recordDate.getFullYear() === currentYear\n\t\t\t\t})\n\t\t\t\t\n\t\t\t\tthis.yearlyCount = yearRecords.length\n\t\t\t\tif (yearRecords.length > 0) {\n\t\t\t\t\tlet yearTotal = 0\n\t\t\t\t\tyearRecords.forEach(record => {\n\t\t\t\t\t\tyearTotal = this.moneyCalculator.add(yearTotal, parseFloat(record.amount))\n\t\t\t\t\t})\n\t\t\t\t\tthis.yearlyAmount = this.moneyCalculator.format(yearTotal)\n\t\t\t\t} else {\n\t\t\t\t\tthis.yearlyAmount = '0.00'\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// 去年统计\n\t\t\t\tconst lastYear = currentYear - 1\n\t\t\t\tconst lastYearRecords = this.records.filter(record => {\n\t\t\t\t\tconst recordDate = new Date(record.time)\n\t\t\t\t\treturn recordDate.getFullYear() === lastYear\n\t\t\t\t})\n\t\t\t\t\n\t\t\t\tthis.lastYearCount = lastYearRecords.length\n\t\t\t\tif (lastYearRecords.length > 0) {\n\t\t\t\t\tlet lastYearTotal = 0\n\t\t\t\t\tlastYearRecords.forEach(record => {\n\t\t\t\t\t\tlastYearTotal = this.moneyCalculator.add(lastYearTotal, parseFloat(record.amount))\n\t\t\t\t\t})\n\t\t\t\t\tthis.lastYearAmount = this.moneyCalculator.format(lastYearTotal)\n\t\t\t\t} else {\n\t\t\t\t\tthis.lastYearAmount = '0.00'\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// 月度趋势数据（当前月份及前11个月）\n\t\t\t\tthis.calculateMonthlyTrend()\n\t\t\t\t\n\t\t\t\t// 年度趋势数据\n\t\t\t\tthis.calculateYearlyTrend()\n\t\t\t},\n\t\t\t\n\t\t\tcalculateMonthlyTrend() {\n\t\t\t\tconst monthlyData = []\n\t\t\t\tconst now = new Date()\n\t\t\t\tconst allRecords = uni.getStorageSync('records') || []\n\t\t\t\tconst categoryRecords = allRecords.filter(record => \n\t\t\t\t\trecord.categoryId === this.categoryInfo.id && record.type === this.categoryInfo.type\n\t\t\t\t)\n\t\t\t\t\n\t\t\t\t// 初始化最近12个月的数据（从当前月往前）\n\t\t\t\tfor (let i = 0; i < 12; i++) {\n\t\t\t\t\tconst date = new Date(now.getFullYear(), now.getMonth() - i, 1)\n\t\t\t\t\tconst monthKey = `${date.getFullYear()}-${String(date.getMonth() + 1).padStart(2, '0')}`\n\t\t\t\t\t\n\t\t\t\t\tmonthlyData.push({\n\t\t\t\t\t\tmonth: date.getMonth() + 1,\n\t\t\t\t\t\tyear: date.getFullYear(),\n\t\t\t\t\t\tmonthKey: monthKey,\n\t\t\t\t\t\tcount: 0,\n\t\t\t\t\t\tamount: '0.00'\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// 统计每月数据\n\t\t\t\tcategoryRecords.forEach(record => {\n\t\t\t\t\tconst recordDate = new Date(record.time)\n\t\t\t\t\tconst recordYear = recordDate.getFullYear()\n\t\t\t\t\tconst recordMonth = recordDate.getMonth() + 1\n\t\t\t\t\tconst monthKey = `${recordYear}-${String(recordMonth).padStart(2, '0')}`\n\t\t\t\t\t\n\t\t\t\t\tconst monthData = monthlyData.find(m => m.monthKey === monthKey)\n\t\t\t\t\tif (monthData) {\n\t\t\t\t\t\tmonthData.count += 1\n\t\t\t\t\t\tconst currentAmount = parseFloat(monthData.amount)\n\t\t\t\t\t\tconst recordAmount = parseFloat(record.amount)\n\t\t\t\t\t\tmonthData.amount = (currentAmount + recordAmount).toFixed(2)\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t\n\t\t\t\tthis.monthlyTrend = monthlyData\n\t\t\t},\n\t\t\t\n\t\t\tgetComparisonClass(current, previous) {\n\t\t\t\tif (current > previous) return 'positive'\n\t\t\t\tif (current < previous) return 'negative'\n\t\t\t\treturn 'neutral'\n\t\t\t},\n\t\t\t\n\t\t\tgetComparisonText(current, previous, unit) {\n\t\t\t\tconst diff = current - previous\n\t\t\t\tconst percentage = previous > 0 ? ((diff / previous) * 100).toFixed(1) : '0.0'\n\t\t\t\t\n\t\t\t\tif (diff > 0) {\n\t\t\t\t\treturn `↗ +${Math.abs(diff).toFixed(unit === '元' ? 2 : 0)}${unit} (+${percentage}%)`\n\t\t\t\t} else if (diff < 0) {\n\t\t\t\t\treturn `↘ -${Math.abs(diff).toFixed(unit === '元' ? 2 : 0)}${unit} (-${Math.abs(percentage)}%)`\n\t\t\t\t} else {\n\t\t\t\t\treturn `→ 持平 (0%)`\n\t\t\t\t}\n\t\t\t},\n\t\t\t\n\t\t\tcalculateYearlyTrend() {\n\t\t\t\tconst yearlyData = []\n\t\t\t\tconst now = new Date()\n\t\t\t\tconst currentYear = now.getFullYear()\n\t\t\t\t\n\t\t\t\t// 初始化最近4年的数据（从当前年往前）\n\t\t\t\tfor (let i = 0; i < 4; i++) {\n\t\t\t\t\tconst year = currentYear - i\n\t\t\t\t\tyearlyData.push({\n\t\t\t\t\t\tyear: year,\n\t\t\t\t\t\tcount: 0,\n\t\t\t\t\t\tamount: '0.00'\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// 统计每年数据\n\t\t\t\tthis.records.forEach(record => {\n\t\t\t\t\tconst recordYear = new Date(record.time).getFullYear()\n\t\t\t\t\tconst yearData = yearlyData.find(y => y.year === recordYear)\n\t\t\t\t\t\n\t\t\t\t\tif (yearData) {\n\t\t\t\t\t\tyearData.count += 1\n\t\t\t\t\t\tconst currentAmount = parseFloat(yearData.amount)\n\t\t\t\t\t\tconst recordAmount = parseFloat(record.amount)\n\t\t\t\t\t\tyearData.amount = (currentAmount + recordAmount).toFixed(2)\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t\n\t\t\t\tthis.yearlyTrend = yearlyData\n\t\t\t},\n\t\t\t\n\t\t\tgetYearTrendBarHeight(amount) {\n\t\t\t\tif (this.yearlyTrend.length === 0) return 0\n\t\t\t\t\n\t\t\t\t// 找出最大金额用于计算比例\n\t\t\t\tconst maxAmount = Math.max(...this.yearlyTrend.map(y => parseFloat(y.amount)))\n\t\t\t\tif (maxAmount === 0) return 20\n\t\t\t\t\n\t\t\t\t// 计算高度，最小20rpx，最大150rpx\n\t\t\t\tconst ratio = parseFloat(amount) / maxAmount\n\t\t\t\treturn Math.max(20, ratio * 150)\n\t\t\t},\n\t\t\t\n\t\t\tgetTrendBarHeight(amount) {\n\t\t\t\tif (this.monthlyTrend.length === 0) return 0\n\t\t\t\t\n\t\t\t\t// 找出最大金额用于计算比例\n\t\t\t\tconst maxAmount = Math.max(...this.monthlyTrend.map(m => parseFloat(m.amount)))\n\t\t\t\tif (maxAmount === 0) return 20\n\t\t\t\t\n\t\t\t\t// 计算高度，最小20rpx，最大120rpx\n\t\t\t\tconst ratio = parseFloat(amount) / maxAmount\n\t\t\t\treturn Math.max(20, ratio * 120)\n\t\t\t},\n\t\t\t\n\t\t\tloadMoreRecords(reset = false) {\n\t\t\t\tif (reset) {\n\t\t\t\t\tthis.displayRecords = []\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tconst startIndex = this.displayRecords.length\n\t\t\t\tconst endIndex = startIndex + this.pageSize\n\t\t\t\tconst newRecords = this.records.slice(startIndex, endIndex)\n\t\t\t\t\n\t\t\t\tthis.displayRecords.push(...newRecords)\n\t\t\t},\n\t\t\t\n\t\t\tgetMonthLabel(month) {\n\t\t\t\treturn `${month.month}月`\n\t\t\t},\n\t\t\t\n\t\t\tformatDate(timeStr) {\n\t\t\t\tconst date = new Date(timeStr)\n\t\t\t\tconst now = new Date()\n\t\t\t\tconst today = new Date(now.getFullYear(), now.getMonth(), now.getDate())\n\t\t\t\tconst yesterday = new Date(today.getTime() - 24 * 60 * 60 * 1000)\n\t\t\t\tconst recordDate = new Date(date.getFullYear(), date.getMonth(), date.getDate())\n\t\t\t\t\n\t\t\t\tif (recordDate.getTime() === today.getTime()) {\n\t\t\t\t\treturn '今天'\n\t\t\t\t} else if (recordDate.getTime() === yesterday.getTime()) {\n\t\t\t\t\treturn '昨天'\n\t\t\t\t} else {\n\t\t\t\t\treturn `${date.getMonth() + 1}月${date.getDate()}日`\n\t\t\t\t}\n\t\t\t},\n\t\t\t\n\t\t\tformatTime(timeStr) {\n\t\t\t\tconst date = new Date(timeStr)\n\t\t\t\treturn `${date.getHours().toString().padStart(2, '0')}:${date.getMinutes().toString().padStart(2, '0')}`\n\t\t\t},\n\t\t\t\n\t\t\tshowRecordDetail(record) {\n\t\t\t\tuni.showModal({\n\t\t\t\t\ttitle: '记录详情',\n\t\t\t\t\tcontent: `分类：${record.categoryName}\\n金额：${record.type === 'expense' ? '-' : '+'}¥${record.amount}\\n备注：${record.note || '无'}\\n时间：${new Date(record.time).toLocaleString('zh-CN')}`,\n\t\t\t\t\tshowCancel: false\n\t\t\t\t})\n\t\t\t},\n\t\t\t\n\t\t\tgoToAdd() {\n\t\t\t\tconst categoryParam = encodeURIComponent(JSON.stringify(this.categoryInfo))\n\t\t\t\tuni.navigateTo({\n\t\t\t\t\turl: `/pages/add/add?presetCategory=${categoryParam}`\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t}\n</script>\n\n<style>\n\t.container {\n\t\tbackground: linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%);\n\t\tmin-height: 100vh;\n\t\tpadding: 20rpx;\n\t}\n\t\n\t.category-header {\n\t\tbackground: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n\t\tborder-radius: 24rpx;\n\t\tpadding: 40rpx;\n\t\tmargin-bottom: 30rpx;\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tjustify-content: space-between;\n\t\tbox-shadow: 0 8rpx 32rpx rgba(102, 126, 234, 0.3);\n\t}\n\t\n\t.category-info {\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t}\n\t\n\t.category-icon {\n\t\tfont-size: 64rpx;\n\t\tmargin-right: 20rpx;\n\t\tfilter: drop-shadow(0 4rpx 8rpx rgba(0, 0, 0, 0.2));\n\t}\n\t\n\t.category-name {\n\t\tfont-size: 40rpx;\n\t\tfont-weight: bold;\n\t\tcolor: white;\n\t}\n\t\n\t.category-type {\n\t\tbackground: rgba(255, 255, 255, 0.2);\n\t\tpadding: 12rpx 24rpx;\n\t\tborder-radius: 20rpx;\n\t\tbackdrop-filter: blur(10rpx);\n\t}\n\t\n\t.type-text {\n\t\tcolor: white;\n\t\tfont-size: 24rpx;\n\t\tfont-weight: 500;\n\t}\n\t\n\t.stats-overview, .time-stats, .monthly-stats, .yearly-stats, .trend-analysis, .records-section {\n\t\tbackground-color: rgba(255, 255, 255, 0.95);\n\t\tbackdrop-filter: blur(10rpx);\n\t\tborder-radius: 24rpx;\n\t\tpadding: 30rpx;\n\t\tmargin-bottom: 30rpx;\n\t\tbox-shadow: 0 8rpx 32rpx rgba(0, 0, 0, 0.1);\n\t}\n\t\n\t.section-title {\n\t\tfont-size: 32rpx;\n\t\tfont-weight: 600;\n\t\tcolor: #333;\n\t\tmargin-bottom: 30rpx;\n\t\tdisplay: block;\n\t\tposition: relative;\n\t}\n\t\n\t.section-title::after {\n\t\tcontent: '';\n\t\tposition: absolute;\n\t\tbottom: -10rpx;\n\t\tleft: 0;\n\t\twidth: 60rpx;\n\t\theight: 4rpx;\n\t\tbackground: linear-gradient(45deg, #667eea, #764ba2);\n\t\tborder-radius: 2rpx;\n\t}\n\t\n\t.stats-grid {\n\t\tdisplay: flex;\n\t\tflex-wrap: wrap;\n\t\tgap: 20rpx;\n\t}\n\t\n\t.stat-item {\n\t\tflex: 1;\n\t\tmin-width: 160rpx;\n\t\ttext-align: center;\n\t\tpadding: 30rpx 20rpx;\n\t\tbackground: linear-gradient(135deg, rgba(102, 126, 234, 0.1), rgba(118, 75, 162, 0.1));\n\t\tborder-radius: 16rpx;\n\t\tborder: 1px solid rgba(102, 126, 234, 0.2);\n\t}\n\t\n\t.stat-value {\n\t\tdisplay: block;\n\t\tfont-size: 36rpx;\n\t\tfont-weight: bold;\n\t\tcolor: #333;\n\t\tmargin-bottom: 8rpx;\n\t\tbackground: linear-gradient(135deg, #667eea, #764ba2);\n\t\tbackground-clip: text;\n\t\t-webkit-background-clip: text;\n\t\t-webkit-text-fill-color: transparent;\n\t}\n\t\n\t.stat-label {\n\t\tfont-size: 24rpx;\n\t\tcolor: #666;\n\t}\n\t\n\t.time-info, .monthly-info {\n\t\tdisplay: flex;\n\t\tgap: 30rpx;\n\t}\n\t\n\t.time-item, .monthly-item {\n\t\tflex: 1;\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\tpadding: 20rpx;\n\t\tbackground: rgba(102, 126, 234, 0.05);\n\t\tborder-radius: 12rpx;\n\t}\n\t\n\t.time-label, .monthly-label {\n\t\tfont-size: 24rpx;\n\t\tcolor: #666;\n\t\tmargin-bottom: 8rpx;\n\t}\n\t\n\t.time-value, .monthly-value {\n\t\tfont-size: 28rpx;\n\t\tfont-weight: 600;\n\t\tcolor: #333;\n\t}\n\t\n\t.section-header {\n\t\tdisplay: flex;\n\t\tjustify-content: space-between;\n\t\talign-items: center;\n\t\tmargin-bottom: 30rpx;\n\t}\n\t\n\t.record-count {\n\t\tfont-size: 26rpx;\n\t\tcolor: #666;\n\t\tbackground: rgba(102, 126, 234, 0.1);\n\t\tpadding: 8rpx 16rpx;\n\t\tborder-radius: 20rpx;\n\t}\n\t\n\t.empty-records {\n\t\ttext-align: center;\n\t\tpadding: 80rpx 0;\n\t}\n\t\n\t.empty-text {\n\t\tdisplay: block;\n\t\tcolor: #999;\n\t\tfont-size: 28rpx;\n\t\tmargin-bottom: 30rpx;\n\t}\n\t\n\t.add-record-btn {\n\t\tbackground: linear-gradient(45deg, #FF6B6B, #FF8E53);\n\t\tborder-radius: 50rpx;\n\t\tfont-size: 28rpx;\n\t\tborder: none;\n\t}\n\t\n\t.records-list {\n\t\tbackground: white;\n\t\tborder-radius: 16rpx;\n\t\toverflow: hidden;\n\t}\n\t\n\t.record-item {\n\t\tdisplay: flex;\n\t\tjustify-content: space-between;\n\t\talign-items: center;\n\t\tpadding: 30rpx;\n\t\tborder-bottom: 1px solid #F0F0F0;\n\t\ttransition: background-color 0.3s;\n\t}\n\t\n\t.record-item:active {\n\t\tbackground-color: #F8F9FA;\n\t}\n\t\n\t.record-item:last-child {\n\t\tborder-bottom: none;\n\t}\n\t\n\t.record-left {\n\t\tflex: 1;\n\t}\n\t\n\t.record-date {\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tmargin-bottom: 10rpx;\n\t}\n\t\n\t.date-text {\n\t\tfont-size: 28rpx;\n\t\tfont-weight: 600;\n\t\tcolor: #333;\n\t\tmargin-right: 15rpx;\n\t}\n\t\n\t.time-text {\n\t\tfont-size: 24rpx;\n\t\tcolor: #666;\n\t\tbackground: rgba(102, 126, 234, 0.1);\n\t\tpadding: 4rpx 12rpx;\n\t\tborder-radius: 12rpx;\n\t}\n\t\n\t.record-note {\n\t\tfont-size: 26rpx;\n\t\tcolor: #666;\n\t}\n\t\n\t.empty-note {\n\t\tcolor: #999;\n\t\tfont-style: italic;\n\t}\n\t\n\t.record-right {\n\t\ttext-align: right;\n\t}\n\t\n\t.record-amount {\n\t\tfont-size: 32rpx;\n\t\tfont-weight: bold;\n\t}\n\t\n\t.record-amount.expense {\n\t\tcolor: #FF6B6B;\n\t}\n\t\n\t.record-amount.income {\n\t\tcolor: #4ECDC4;\n\t}\n\t\n\t.load-more {\n\t\tpadding: 30rpx;\n\t\ttext-align: center;\n\t\tbackground: #F8F9FA;\n\t}\n\t\n\t.load-more-btn {\n\t\tbackground: transparent;\n\t\tborder: 2rpx solid #667eea;\n\t\tcolor: #667eea;\n\t\tborder-radius: 50rpx;\n\t\tfont-size: 26rpx;\n\t\tpadding: 15rpx 40rpx;\n\t}\n\t\n\t.actions {\n\t\tpadding: 30rpx 0;\n\t}\n\t\n\t.action-btn {\n\t\twidth: 100%;\n\t\tbackground: linear-gradient(45deg, #667eea, #764ba2);\n\t\tcolor: white;\n\t\tborder-radius: 50rpx;\n\t\tfont-size: 32rpx;\n\t\tfont-weight: 600;\n\t\tborder: none;\n\t\tbox-shadow: 0 6rpx 20rpx rgba(102, 126, 234, 0.3);\n\t}\n\t\n\t/* 对比分析样式 */\n\t.comparison-section, .year-comparison-section {\n\t\tmargin-top: 30rpx;\n\t\tpadding-top: 30rpx;\n\t\tborder-top: 1px solid rgba(240, 240, 240, 0.6);\n\t}\n\t\n\t.comparison-title {\n\t\tfont-size: 28rpx;\n\t\tfont-weight: 600;\n\t\tcolor: #666;\n\t\tmargin-bottom: 20rpx;\n\t\tdisplay: block;\n\t}\n\t\n\t.comparison-grid {\n\t\tdisplay: flex;\n\t\tgap: 20rpx;\n\t}\n\t\n\t.comparison-item {\n\t\tflex: 1;\n\t\ttext-align: center;\n\t\tpadding: 20rpx;\n\t\tbackground: rgba(102, 126, 234, 0.05);\n\t\tborder-radius: 12rpx;\n\t\tborder: 1px solid rgba(102, 126, 234, 0.1);\n\t}\n\t\n\t.comparison-label {\n\t\tfont-size: 24rpx;\n\t\tcolor: #666;\n\t\tmargin-bottom: 8rpx;\n\t\tdisplay: block;\n\t}\n\t\n\t.comparison-value {\n\t\tfont-size: 26rpx;\n\t\tfont-weight: 600;\n\t}\n\t\n\t.comparison-value.positive {\n\t\tcolor: #4ECDC4;\n\t}\n\t\n\t.comparison-value.negative {\n\t\tcolor: #FF6B6B;\n\t}\n\t\n\t.comparison-value.neutral {\n\t\tcolor: #999;\n\t}\n\t\n\t/* 年度统计样式 */\n\t.yearly-overview, .trend-overview {\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\tgap: 30rpx;\n\t}\n\t\n\t.yearly-summary {\n\t\tdisplay: flex;\n\t\tgap: 20rpx;\n\t}\n\t\n\t.yearly-item {\n\t\tflex: 1;\n\t\ttext-align: center;\n\t\tpadding: 25rpx 20rpx;\n\t\tbackground: linear-gradient(135deg, rgba(102, 126, 234, 0.1), rgba(118, 75, 162, 0.1));\n\t\tborder-radius: 16rpx;\n\t\tborder: 1px solid rgba(102, 126, 234, 0.2);\n\t}\n\t\n\t.yearly-label {\n\t\tfont-size: 24rpx;\n\t\tcolor: #666;\n\t\tmargin-bottom: 8rpx;\n\t\tdisplay: block;\n\t}\n\t\n\t.yearly-value {\n\t\tfont-size: 32rpx;\n\t\tfont-weight: bold;\n\t\tbackground: linear-gradient(135deg, #667eea, #764ba2);\n\t\tbackground-clip: text;\n\t\t-webkit-background-clip: text;\n\t\t-webkit-text-fill-color: transparent;\n\t}\n\t\n\t/* 趋势分析样式 */\n\t.monthly-trend, .yearly-trend {\n\t\tbackground: rgba(255, 255, 255, 0.8);\n\t\tborder-radius: 16rpx;\n\t\tpadding: 30rpx;\n\t\tborder: 1px solid rgba(102, 126, 234, 0.1);\n\t}\n\t\n\t.monthly-trend:not(:last-child) {\n\t\tmargin-bottom: 20rpx;\n\t}\n\t\n\t.trend-title {\n\t\tfont-size: 28rpx;\n\t\tfont-weight: 600;\n\t\tcolor: #666;\n\t\tmargin-bottom: 20rpx;\n\t\tdisplay: block;\n\t\tposition: relative;\n\t}\n\t\n\t.trend-title::before {\n\t\tcontent: '';\n\t\tposition: absolute;\n\t\tleft: -15rpx;\n\t\ttop: 50%;\n\t\ttransform: translateY(-50%);\n\t\twidth: 6rpx;\n\t\theight: 20rpx;\n\t\tbackground: linear-gradient(45deg, #667eea, #764ba2);\n\t\tborder-radius: 3rpx;\n\t}\n\t\n\t.yearly-trend .trend-title::before {\n\t\tbackground: linear-gradient(45deg, #FF6B6B, #FF8E53);\n\t}\n\t\n\t.trend-title {\n\t\tfont-size: 28rpx;\n\t\tfont-weight: 600;\n\t\tcolor: #666;\n\t\tmargin-bottom: 20rpx;\n\t\tdisplay: block;\n\t}\n\t\n\t.trend-chart, .year-trend-chart {\n\t\tdisplay: flex;\n\t\talign-items: flex-end;\n\t\tgap: 15rpx;\n\t\theight: 260rpx;\n\t\tpadding: 20rpx 0 40rpx 0;\n\t\toverflow-x: auto;\n\t\t-webkit-overflow-scrolling: touch;\n\t\tposition: relative;\n\t}\n\t\n\t.year-trend-chart {\n\t\tgap: 40rpx;\n\t\tjustify-content: center;\n\t}\n\t\n\t.trend-bar, .year-trend-bar {\n\t\tflex: 0 0 60rpx;\n\t\tmin-width: 60rpx;\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\talign-items: center;\n\t\tjustify-content: flex-end;\n\t\tposition: relative;\n\t\tbackground: linear-gradient(to top, #667eea, #764ba2);\n\t\tborder-radius: 8rpx 8rpx 0 0;\n\t\tmin-height: 20rpx;\n\t\ttransition: all 0.3s ease;\n\t}\n\t\n\t.year-trend-bar {\n\t\tbackground: linear-gradient(to top, #FF6B6B, #FF8E53);\n\t\tflex: 0 0 80rpx;\n\t\tmin-width: 80rpx;\n\t}\n\t\n\t.trend-bar:active, .year-trend-bar:active {\n\t\ttransform: scale(1.05);\n\t\tbox-shadow: 0 4rpx 12rpx rgba(102, 126, 234, 0.3);\n\t}\n\t\n\t.trend-month, .trend-year {\n\t\tposition: absolute;\n\t\tbottom: -35rpx;\n\t\tleft: 50%;\n\t\ttransform: translateX(-50%);\n\t\tfont-size: 22rpx;\n\t\tcolor: #666;\n\t\twhite-space: nowrap;\n\t\tbackground: rgba(255, 255, 255, 0.9);\n\t\tpadding: 4rpx 8rpx;\n\t\tborder-radius: 6rpx;\n\t\tborder: 1px solid rgba(102, 126, 234, 0.2);\n\t}\n\t\n\t.trend-value, .year-trend-value {\n\t\tposition: absolute;\n\t\tbottom: 100%;\n\t\tleft: 50%;\n\t\ttransform: translateX(-50%);\n\t\tbackground: rgba(255, 255, 255, 0.95);\n\t\tpadding: 8rpx 12rpx;\n\t\tborder-radius: 8rpx;\n\t\tbox-shadow: 0 2rpx 8rpx rgba(0, 0, 0, 0.1);\n\t\tdisplay: none;\n\t\tflex-direction: column;\n\t\talign-items: center;\n\t\tmin-width: 120rpx;\n\t\tz-index: 10;\n\t}\n\t\n\t.trend-bar:active .trend-value, .year-trend-bar:active .year-trend-value {\n\t\tdisplay: flex;\n\t}\n\t\n\t.trend-amount {\n\t\tfont-size: 24rpx;\n\t\tfont-weight: bold;\n\t\tcolor: #333;\n\t\tmargin-bottom: 4rpx;\n\t}\n\t\n\t.trend-count {\n\t\tfont-size: 20rpx;\n\t\tcolor: #666;\n\t}\n</style>\n","import MiniProgramPage from 'D:/simple-account-v1.0.4/pages/category-detail/category-detail.vue'\nwx.createPage(MiniProgramPage)"],"names":["uni"],"mappings":"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"}