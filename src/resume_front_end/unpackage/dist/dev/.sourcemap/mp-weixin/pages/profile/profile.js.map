{"version":3,"file":"profile.js","sources":["pages/profile/profile.vue","../Edgedownload/HBuilderX/plugins/uniapp-cli-vite/uniPage:/cGFnZXMvcHJvZmlsZS9wcm9maWxlLnZ1ZQ"],"sourcesContent":["<template>\n\t<view class=\"container\">\n\t\t<!-- 用户信息区域 -->\n\t\t<view class=\"user-info\">\n\t\t\t<view class=\"avatar-section\">\n\t\t\t\t<image class=\"avatar\" src=\"/static/logo.png\" mode=\"aspectFit\"></image>\n\t\t\t\t<text class=\"username\">我的账本</text>\n\t\t\t\t<text class=\"user-desc\">记录每一笔收支，管理美好生活</text>\n\t\t\t</view>\n\t\t</view>\n\t\t\n\t\t<!-- AI功能 -->\n\t\t<view class=\"data-management\">\n\t\t\t<text class=\"management-title\">AI智能功能</text>\n\t\t\t<view class=\"management-item ai-config-item\" @click=\"goToAIConfig\">\n\t\t\t\t<view class=\"management-left\">\n\t\t\t\t\t<text class=\"management-icon\">🤖</text>\n\t\t\t\t\t<text class=\"management-text\">智能体配置</text>\n\t\t\t\t</view>\n\t\t\t\t<text class=\"management-arrow\">></text>\n\t\t\t</view>\n\t\t\t<view class=\"management-item voice-config-item\" @click=\"goToVoiceConfig\">\n\t\t\t\t<view class=\"management-left\">\n\t\t\t\t\t<text class=\"management-icon\">🎤</text>\n\t\t\t\t\t<text class=\"management-text\">语音识别配置</text>\n\t\t\t\t</view>\n\t\t\t\t<text class=\"management-arrow\">></text>\n\t\t\t</view>\n\t\t</view>\n\t\t\n\t\t<!-- 数据管理 -->\n\t\t<view class=\"data-management\">\n\t\t\t<text class=\"management-title\">数据管理</text>\n\t\t\t<view class=\"management-item budget-manage-item\" @click=\"goToBudgetManage\">\n\t\t\t\t<view class=\"management-left\">\n\t\t\t\t\t<text class=\"management-icon\">💰</text>\n\t\t\t\t\t<text class=\"management-text\">预算管理</text>\n\t\t\t\t</view>\n\t\t\t\t<text class=\"management-arrow\">></text>\n\t\t\t</view>\n\t\t\t<view class=\"management-item icon-manage-item\" @click=\"goToIconManage\">\n\t\t\t\t<view class=\"management-left\">\n\t\t\t\t\t<text class=\"management-icon\">🎨</text>\n\t\t\t\t\t<text class=\"management-text\">分类管理</text>\n\t\t\t\t</view>\n\t\t\t\t<text class=\"management-arrow\">></text>\n\t\t\t</view>\n\t\t\t<view class=\"management-item refresh-item\" @click=\"refreshCategories\">\n\t\t\t\t<view class=\"management-left\">\n\t\t\t\t\t<text class=\"management-icon\">🔄</text>\n\t\t\t\t\t<text class=\"management-text\">刷新分类</text>\n\t\t\t\t</view>\n\t\t\t\t<text class=\"management-arrow\">></text>\n\t\t\t</view>\n\t\t\t<view class=\"management-item import-item\" @click=\"importData\">\n\t\t\t\t<view class=\"management-left\">\n\t\t\t\t\t<text class=\"management-icon\">📥</text>\n\t\t\t\t\t<text class=\"management-text\">导入数据</text>\n\t\t\t\t</view>\n\t\t\t\t<text class=\"management-arrow\">></text>\n\t\t\t</view>\n\t\t\t<view class=\"management-item export-item\" @click=\"exportData\">\n\t\t\t\t<view class=\"management-left\">\n\t\t\t\t\t<text class=\"management-icon\">📤</text>\n\t\t\t\t\t<text class=\"management-text\">导出数据</text>\n\t\t\t\t</view>\n\t\t\t\t<text class=\"management-arrow\">></text>\n\t\t\t</view>\n\t\t\t<view class=\"management-item danger-item\" @click=\"clearAllData\">\n\t\t\t\t<view class=\"management-left\">\n\t\t\t\t\t<text class=\"management-icon\">🗑️</text>\n\t\t\t\t\t<text class=\"management-text\">清空所有记录</text>\n\t\t\t\t</view>\n\t\t\t\t<text class=\"management-arrow\">></text>\n\t\t\t</view>\n\t\t</view>\n\t\t\n\t\t<!-- 应用信息 -->\n\t\t<view class=\"app-info\">\n\t\t\t<text class=\"info-title\">关于应用</text>\n\t\t\t<view class=\"info-item\">\n\t\t\t\t<text class=\"info-label\">版本号：</text>\n\t\t\t\t<text class=\"info-value\">1.0.3</text>\n\t\t\t</view>\n\t\t\t<view class=\"info-item\">\n\t\t\t\t<text class=\"info-label\">更新时间：</text>\n\t\t\t\t<text class=\"info-value\">2025-09-10</text>\n\t\t\t</view>\n\t\t</view>\n\t</view>\n</template>\n\n<script>\n\texport default {\n\t\tdata() {\n\t\t\treturn {\n\t\t\t\t// 从category.vue移过来的默认分类数据\n\t\t\t\tdefaultExpenseCategories: [\n\t\t\t\t\t{id: 1, name: '餐饮', icon: '🍽️'},\n\t\t\t\t\t{id: 2, name: '交通', icon: '🚗'},\n\t\t\t\t\t{id: 3, name: '购物', icon: '🛍️'},\n\t\t\t\t\t{id: 4, name: '娱乐', icon: '🎬'},\n\t\t\t\t\t{id: 5, name: '住房', icon: '🏠'},\n\t\t\t\t\t{id: 6, name: '医疗', icon: '💊'},\n\t\t\t\t\t{id: 7, name: '教育', icon: '📚'},\n\t\t\t\t\t{id: 8, name: '通讯', icon: '📱'},\n\t\t\t\t\t{id: 9, name: '服装', icon: '👕'},\n\t\t\t\t\t{id: 10, name: '其他', icon: '📦'}\n\t\t\t\t],\n\t\t\t\tdefaultIncomeCategories: [\n\t\t\t\t\t{id: 11, name: '工资', icon: '💰'},\n\t\t\t\t\t{id: 12, name: '奖金', icon: '🎁'},\n\t\t\t\t\t{id: 13, name: '投资', icon: '📈'},\n\t\t\t\t\t{id: 14, name: '兼职', icon: '💼'},\n\t\t\t\t\t{id: 15, name: '红包', icon: '🧧'},\n\t\t\t\t\t{id: 16, name: '退款', icon: '↩️'},\n\t\t\t\t\t{id: 17, name: '其他', icon: '💎'}\n\t\t\t\t]\n\t\t\t}\n\t\t},\n\t\t\n\t\tmethods: {\n\t\t\t// 跳转到智能记账聊天\n\t\t\tgoToChat() {\n\t\t\t\tuni.navigateTo({\n\t\t\t\t\turl: '/pages/chat/chat'\n\t\t\t\t})\n\t\t\t},\n\t\t\t\n\t\t\t// 跳转到AI配置页面\n\t\t\tgoToAIConfig() {\n\t\t\t\tuni.navigateTo({\n\t\t\t\t\turl: '/pages/ai-config/ai-config'\n\t\t\t\t})\n\t\t\t},\n\t\t\t\n\t\t\t// 跳转到语音识别配置页面\n\t\t\tgoToVoiceConfig() {\n\t\t\t\tuni.navigateTo({\n\t\t\t\t\turl: '/pages/voice-config/voice-config'\n\t\t\t\t})\n\t\t\t},\n\t\t\t\n\t\t\tgoToBudgetManage() {\n\t\t\t\t// 跳转到预算管理页面\n\t\t\t\tuni.navigateTo({\n\t\t\t\t\turl: '/pages/budget-manage/budget-manage'\n\t\t\t\t})\n\t\t\t},\n\t\t\t\n\t\t\tgoToIconManage() {\n\t\t\t\t// 跳转到图标管理页面\n\t\t\t\tuni.navigateTo({\n\t\t\t\t\turl: '/pages/icon-manage/icon-manage'\n\t\t\t\t})\n\t\t\t},\n\t\t\t\n\t\t\t// 统一的错误处理方法\n\t\t\tshowErrorDialog(title, message) {\n\t\t\t\tuni.showModal({\n\t\t\t\t\ttitle: title || '操作失败',\n\t\t\t\t\tcontent: message || '请重试或联系技术支持',\n\t\t\t\t\tshowCancel: false,\n\t\t\t\t\tconfirmText: '我知道了'\n\t\t\t\t})\n\t\t\t},\n\t\t\t\n\t\t\t// 统一的成功提示方法\n\t\t\tshowSuccessToast(message, duration = 1500) {\n\t\t\t\tuni.showToast({\n\t\t\t\t\ttitle: message || '操作成功',\n\t\t\t\t\ticon: 'success',\n\t\t\t\t\tduration: duration\n\t\t\t\t})\n\t\t\t},\n\t\t\t\n\t\t\trefreshCategories() {\n\t\t\t\tuni.showModal({\n\t\t\t\t\ttitle: '刷新分类',\n\t\t\t\t\tcontent: '将同步账单记录中的分类名称和图标，确定要继续吗？',\n\t\t\t\t\tconfirmText: '确认刷新',\n\t\t\t\t\tcancelText: '取消',\n\t\t\t\t\tsuccess: (res) => {\n\t\t\t\t\t\tif (res.confirm) {\n\t\t\t\t\t\t\tthis.performCategoryRefresh()\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t},\n\t\t\t\n\t\t\tperformCategoryRefresh() {\n\t\t\t\ttry {\n\t\t\t\t\t// 显示加载提示\n\t\t\t\t\tuni.showLoading({\n\t\t\t\t\t\ttitle: '正在刷新分类...'\n\t\t\t\t\t})\n\t\t\t\t\t\n\t\t\t\t\t// 1. 获取所有账单记录\n\t\t\t\t\tconst records = uni.getStorageSync('records') || []\n\t\t\t\t\tif (records.length === 0) {\n\t\t\t\t\t\tuni.hideLoading()\n\t\t\t\t\t\tuni.showToast({\n\t\t\t\t\t\t\ttitle: '暂无账单记录',\n\t\t\t\t\t\t\ticon: 'none'\n\t\t\t\t\t\t})\n\t\t\t\t\t\treturn\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t// 2. 获取当前的分类数据\n\t\t\t\t\tconst expenseCategories = uni.getStorageSync('expenseCategories') || []\n\t\t\t\t\tconst incomeCategories = uni.getStorageSync('incomeCategories') || []\n\t\t\t\t\t\n\t\t\t\t\t// 创建分类映射表，方便查找\n\t\t\t\t\tconst expenseCategoryMap = new Map()\n\t\t\t\t\tconst incomeCategoryMap = new Map()\n\t\t\t\t\t\n\t\t\t\t\texpenseCategories.forEach(cat => {\n\t\t\t\t\t\texpenseCategoryMap.set(cat.id, cat)\n\t\t\t\t\t})\n\t\t\t\t\tincomeCategories.forEach(cat => {\n\t\t\t\t\t\tincomeCategoryMap.set(cat.id, cat)\n\t\t\t\t\t})\n\t\t\t\t\t\n\t\t\t\t\t// 3. 处理账单记录和分类同步\n\t\t\t\t\tlet updatedRecordsCount = 0\n\t\t\t\t\tlet createdCategoriesCount = 0\n\t\t\t\t\tconst updatedRecords = []\n\t\t\t\t\tconst newExpenseCategories = [...expenseCategories]\n\t\t\t\t\tconst newIncomeCategories = [...incomeCategories]\n\t\t\t\t\t\n\t\t\t\t\t// 用于跟踪需要创建的新分类\n\t\t\t\t\tconst missingExpenseCategories = new Map()\n\t\t\t\t\tconst missingIncomeCategories = new Map()\n\t\t\t\t\t\n\t\t\t\t\t// 4. 遍历所有账单记录，检查和更新分类信息\n\t\t\t\t\trecords.forEach(record => {\n\t\t\t\t\t\tconst categoryMap = record.type === 'expense' ? expenseCategoryMap : incomeCategoryMap\n\t\t\t\t\t\tconst currentCategory = categoryMap.get(record.categoryId)\n\t\t\t\t\t\t\n\t\t\t\t\t\tlet updatedRecord = { ...record }\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (currentCategory) {\n\t\t\t\t\t\t\t// 分类存在，检查是否需要更新记录中的分类信息\n\t\t\t\t\t\t\tif (record.categoryName !== currentCategory.name || \n\t\t\t\t\t\t\t\trecord.categoryIcon !== currentCategory.icon) {\n\t\t\t\t\t\t\t\tupdatedRecord.categoryName = currentCategory.name\n\t\t\t\t\t\t\t\tupdatedRecord.categoryIcon = currentCategory.icon\n\t\t\t\t\t\t\t\tupdatedRecordsCount++\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// 分类不存在，记录需要创建的分类\n\t\t\t\t\t\t\tconst missingMap = record.type === 'expense' ? missingExpenseCategories : missingIncomeCategories\n\t\t\t\t\t\t\tconst categoryKey = `${record.categoryId}_${record.categoryName}_${record.categoryIcon}`\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif (!missingMap.has(categoryKey)) {\n\t\t\t\t\t\t\t\tmissingMap.set(categoryKey, {\n\t\t\t\t\t\t\t\t\tid: record.categoryId,\n\t\t\t\t\t\t\t\t\tname: record.categoryName,\n\t\t\t\t\t\t\t\t\ticon: record.categoryIcon,\n\t\t\t\t\t\t\t\t\toriginalId: record.categoryId // 保存原始ID用于后续更新\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tupdatedRecords.push(updatedRecord)\n\t\t\t\t\t})\n\t\t\t\t\t\n\t\t\t\t\t// 5. 创建缺失的分类并处理ID冲突\n\t\t\t\t\tconst categoryIdMapping = new Map() // 用于记录ID变更\n\t\t\t\t\t\n\t\t\t\t\tmissingExpenseCategories.forEach(category => {\n\t\t\t\t\t\tconst originalId = category.originalId\n\t\t\t\t\t\t// 检查ID是否冲突，如果冲突则生成新ID\n\t\t\t\t\t\tif (expenseCategoryMap.has(category.id)) {\n\t\t\t\t\t\t\tconst newId = this.generateNewCategoryId([...newExpenseCategories, ...newIncomeCategories])\n\t\t\t\t\t\t\tcategoryIdMapping.set(`expense_${originalId}`, newId)\n\t\t\t\t\t\t\tcategory.id = newId\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdelete category.originalId // 删除临时属性\n\t\t\t\t\t\tnewExpenseCategories.push(category)\n\t\t\t\t\t\tcreatedCategoriesCount++\n\t\t\t\t\t})\n\t\t\t\t\t\n\t\t\t\t\tmissingIncomeCategories.forEach(category => {\n\t\t\t\t\t\tconst originalId = category.originalId\n\t\t\t\t\t\t// 检查ID是否冲突，如果冲突则生成新ID\n\t\t\t\t\t\tif (incomeCategoryMap.has(category.id)) {\n\t\t\t\t\t\t\tconst newId = this.generateNewCategoryId([...newExpenseCategories, ...newIncomeCategories])\n\t\t\t\t\t\t\tcategoryIdMapping.set(`income_${originalId}`, newId)\n\t\t\t\t\t\t\tcategory.id = newId\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdelete category.originalId // 删除临时属性\n\t\t\t\t\t\tnewIncomeCategories.push(category)\n\t\t\t\t\t\tcreatedCategoriesCount++\n\t\t\t\t\t})\n\t\t\t\t\t\n\t\t\t\t\t// 6. 更新记录中发生ID变更的分类ID\n\t\t\t\t\tif (categoryIdMapping.size > 0) {\n\t\t\t\t\t\tupdatedRecords.forEach(record => {\n\t\t\t\t\t\t\tconst mappingKey = `${record.type}_${record.categoryId}`\n\t\t\t\t\t\t\tconst newId = categoryIdMapping.get(mappingKey)\n\t\t\t\t\t\t\tif (newId) {\n\t\t\t\t\t\t\t\trecord.categoryId = newId\n\t\t\t\t\t\t\t\tupdatedRecordsCount++\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t// 7. 保存更新后的数据\n\t\t\t\t\tuni.setStorageSync('records', updatedRecords)\n\t\t\t\t\tuni.setStorageSync('expenseCategories', newExpenseCategories)\n\t\t\t\t\tuni.setStorageSync('incomeCategories', newIncomeCategories)\n\t\t\t\t\t\n\t\t\t\t\t// 隐藏加载提示\n\t\t\t\t\tuni.hideLoading()\n\t\t\t\t\t\n\t\t\t\t\t// 8. 显示结果提示\n\t\t\t\t\tlet message = '分类刷新完成！'\n\t\t\t\t\tif (updatedRecordsCount > 0 || createdCategoriesCount > 0) {\n\t\t\t\t\t\tconst details = []\n\t\t\t\t\t\tif (updatedRecordsCount > 0) {\n\t\t\t\t\t\t\tdetails.push(`更新了${updatedRecordsCount}条记录`)\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (createdCategoriesCount > 0) {\n\t\t\t\t\t\t\tdetails.push(`创建了${createdCategoriesCount}个分类`)\n\t\t\t\t\t\t}\n\t\t\t\t\t\tmessage += '\\n' + details.join('，')\n\t\t\t\t\t} else {\n\t\t\t\t\t\tmessage += '\\n所有数据已是最新状态'\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tuni.showModal({\n\t\t\t\t\t\ttitle: '刷新完成',\n\t\t\t\t\t\tcontent: message,\n\t\t\t\t\t\tshowCancel: false,\n\t\t\t\t\t\tconfirmText: '确定'\n\t\t\t\t\t})\n\t\t\t\t\t\n\t\t\t\t} catch (error) {\n\t\t\t\t\tuni.hideLoading()\n\t\t\t\t\tconsole.error('刷新分类时出错:', error)\n\t\t\t\t\tuni.showToast({\n\t\t\t\t\t\ttitle: '刷新失败，请重试',\n\t\t\t\t\t\ticon: 'error'\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t},\n\t\t\t\n\t\t\t// 生成新的分类ID，避免冲突\n\t\t\tgenerateNewCategoryId(allCategories) {\n\t\t\t\tlet maxId = 0\n\t\t\t\tallCategories.forEach(cat => {\n\t\t\t\t\tif (typeof cat.id === 'number' && cat.id > maxId) {\n\t\t\t\t\t\tmaxId = cat.id\n\t\t\t\t\t} else if (typeof cat.id === 'string') {\n\t\t\t\t\t\tconst numId = parseInt(cat.id)\n\t\t\t\t\t\tif (!isNaN(numId) && numId > maxId) {\n\t\t\t\t\t\t\tmaxId = numId\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\treturn maxId + 1\n\t\t\t},\n\t\t\t\n\t\t\tclearAllData() {\n\t\t\t\tuni.showModal({\n\t\t\t\t\ttitle: '清空所有数据',\n\t\t\t\t\tcontent: '此操作将永久删除所有记账记录，无法恢复。确定要继续吗？',\n\t\t\t\t\tconfirmColor: '#FF6B6B',\n\t\t\t\t\tconfirmText: '确认清空',\n\t\t\t\t\tcancelText: '取消',\n\t\t\t\t\tsuccess: (res) => {\n\t\t\t\t\t\tif (res.confirm) {\n\t\t\t\t\t\t\tuni.removeStorageSync('records')\n\t\t\t\t\t\t\tuni.showToast({\n\t\t\t\t\t\t\t\ttitle: '所有数据已清空',\n\t\t\t\t\t\t\t\ticon: 'success'\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t},\n\t\t\t\n\t\t\timportData() {\n\t\t\t\t// 检查平台支持\n\t\t\t\t// #ifdef APP-PLUS\n\t\t\t\tif (typeof plus === 'undefined') {\n\t\t\t\t\tuni.showToast({\n\t\t\t\t\t\ttitle: '当前环境不支持文件系统访问',\n\t\t\t\t\t\ticon: 'none'\n\t\t\t\t\t})\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tuni.showActionSheet({\n\t\t\t\t\titemList: ['从文件导入', '从剪贴板导入', '手动输入数据'],\n\t\t\t\t\tsuccess: (res) => {\n\t\t\t\t\t\tif (res.tapIndex === 0) {\n\t\t\t\t\t\t\tthis.importFromFile()\n\t\t\t\t\t\t} else if (res.tapIndex === 1) {\n\t\t\t\t\t\t\tthis.importFromClipboard()\n\t\t\t\t\t\t} else if (res.tapIndex === 2) {\n\t\t\t\t\t\t\tthis.showCsvImportDialog()\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t// #endif\n\t\t\t\t\n\t\t\t\t// #ifndef APP-PLUS\n\t\t\t\tuni.showActionSheet({\n\t\t\t\t\titemList: ['从剪贴板导入', '手动输入数据'],\n\t\t\t\t\tsuccess: (res) => {\n\t\t\t\t\t\tif (res.tapIndex === 0) {\n\t\t\t\t\t\t\tthis.importFromClipboard()\n\t\t\t\t\t\t} else if (res.tapIndex === 1) {\n\t\t\t\t\t\t\tthis.showCsvImportDialog()\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t// #endif\n\t\t\t},\n\t\t\t\n\t\t\t// 统一的文件导入入口\n\t\t\timportFromFile() {\n\t\t\t\t// #ifdef H5\n\t\t\t\tthis.importFromFileH5()\n\t\t\t\t// #endif\n\t\t\t\t\n\t\t\t\t// #ifdef APP-PLUS\n\t\t\t\tuni.showActionSheet({\n\t\t\t\t\titemList: ['从公共存储选择', '从下载目录选择', '从应用文档选择', '手动输入路径'],\n\t\t\t\t\tsuccess: (res) => {\n\t\t\t\t\t\tif (res.tapIndex === 0) {\n\t\t\t\t\t\t\tthis.selectFromPublicStorage()\n\t\t\t\t\t\t} else if (res.tapIndex === 1) {\n\t\t\t\t\t\t\tthis.selectFromDownloads()\n\t\t\t\t\t\t} else if (res.tapIndex === 2) {\n\t\t\t\t\t\t\tthis.selectFromAppDocuments()\n\t\t\t\t\t\t} else if (res.tapIndex === 3) {\n\t\t\t\t\t\t\tthis.manualInputPath()\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t// #endif\n\t\t\t\t\n\t\t\t\t// #ifdef MP-WEIXIN\n\t\t\t\tthis.importFromFileWx()\n\t\t\t\t// #endif\n\t\t\t\t\n\t\t\t\t// #ifdef MP && !MP-WEIXIN\n\t\t\t\tthis.fallbackImport()\n\t\t\t\t// #endif\n\t\t\t\t\n\t\t\t\t// #ifndef H5 || APP-PLUS || MP\n\t\t\t\tthis.fallbackImport()\n\t\t\t\t// #endif\n\t\t\t},\n\t\t\t\n\t\t\tshowCsvImportDialog() {\n\t\t\t\tconsole.log('=== 显示CSV数据输入对话框 ===')\n\t\t\t\t// 使用 prompt 来获取用户输入的CSV数据\n\t\t\t\tuni.showModal({\n\t\t\t\t\ttitle: '导入数据',\n\t\t\t\t\tcontent: '请将CSV格式的数据粘贴到下方输入框：\\n\\n新格式：时间,类型,分类名,分类图标,金额,备注\\n旧格式：时间,类型,分类名,金额,备注\\n\\n示例：\\n\"2024-01-01 12:00\",\"支出\",\"餐饮\",\"🍽️\",\"25.50\",\"午餐\"',\n\t\t\t\t\teditable: true,\n\t\t\t\t\tplaceholderText: '请粘贴CSV数据...',\n\t\t\t\t\tconfirmText: '开始导入',\n\t\t\t\t\tcancelText: '取消',\n\t\t\t\t\tsuccess: (res) => {\n\t\t\t\t\t\tconsole.log('CSV输入对话框结果:', res)\n\t\t\t\t\t\tif (res.confirm && res.content && res.content.trim()) {\n\t\t\t\t\t\t\tconsole.log('用户输入CSV数据长度:', res.content.trim().length)\n\t\t\t\t\t\t\tconsole.log('CSV数据内容预览:', res.content.trim().substring(0, 200) + (res.content.trim().length > 200 ? '...' : ''))\n\t\t\t\t\t\t\tthis.parseCsvData(res.content.trim())\n\t\t\t\t\t\t} else if (res.confirm) {\n\t\t\t\t\t\t\tconsole.log('用户确认但未输入数据')\n\t\t\t\t\t\t\tuni.showToast({\n\t\t\t\t\t\t\t\ttitle: '请输入有效数据',\n\t\t\t\t\t\t\t\ticon: 'none'\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconsole.log('用户取消CSV数据输入')\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t},\n\t\t\t\n\t\t\timportFromClipboard() {\n\t\t\t\tconsole.log('=== 开始从剪切板导入 ===')\n\t\t\t\t\n\t\t\t\t// #ifdef H5\n\t\t\t\t// 浏览器环境使用现代Clipboard API\n\t\t\t\tif (navigator.clipboard && window.isSecureContext) {\n\t\t\t\t\tconsole.log('使用现代Clipboard API读取')\n\t\t\t\t\tnavigator.clipboard.readText().then(clipboardData => {\n\t\t\t\t\t\tconsole.log('现代Clipboard API读取成功')\n\t\t\t\t\t\tthis.processClipboardData(clipboardData)\n\t\t\t\t\t}).catch(err => {\n\t\t\t\t\t\tconsole.error('现代Clipboard API读取失败:', err)\n\t\t\t\t\t\tthis.showManualPasteDialog()\n\t\t\t\t\t})\n\t\t\t\t} else {\n\t\t\t\t\tconsole.log('现代Clipboard API不可用，显示手动粘贴对话框')\n\t\t\t\t\tthis.showManualPasteDialog()\n\t\t\t\t}\n\t\t\t\t// #endif\n\t\t\t\t\n\t\t\t\t// #ifndef H5\n\t\t\t\t// 非浏览器环境使用uni-app API\n\t\t\t\tuni.getClipboardData({\n\t\t\t\t\tsuccess: (res) => {\n\t\t\t\t\t\tconsole.log('uni-app剪切板读取成功:', res)\n\t\t\t\t\t\tthis.processClipboardData(res.data)\n\t\t\t\t\t},\n\t\t\t\t\tfail: (err) => {\n\t\t\t\t\t\tconsole.error('uni-app读取剪切板失败:', err)\n\t\t\t\t\t\tuni.showModal({\n\t\t\t\t\t\t\ttitle: '读取失败',\n\t\t\t\t\t\t\tcontent: '无法读取剪切板内容，请检查权限设置或手动粘贴数据。',\n\t\t\t\t\t\t\tshowCancel: true,\n\t\t\t\t\t\t\tconfirmText: '手动输入',\n\t\t\t\t\t\t\tcancelText: '取消',\n\t\t\t\t\t\t\tsuccess: (modalRes) => {\n\t\t\t\t\t\t\t\tif (modalRes.confirm) {\n\t\t\t\t\t\t\t\t\tthis.showCsvImportDialog()\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t// #endif\n\t\t\t},\n\t\t\t\n\t\t\tprocessClipboardData(clipboardData) {\n\t\t\t\tconsole.log('=== 处理剪切板数据 ===')\n\t\t\t\tconsole.log('剪切板数据类型:', typeof clipboardData)\n\t\t\t\tconsole.log('剪切板数据长度:', clipboardData ? clipboardData.length : 0)\n\t\t\t\tconsole.log('剪切板数据预览:', clipboardData ? clipboardData.substring(0, 200) + (clipboardData.length > 200 ? '...' : '') : '无内容')\n\t\t\t\t\n\t\t\t\tif (!clipboardData || !clipboardData.trim()) {\n\t\t\t\t\tuni.showModal({\n\t\t\t\t\t\ttitle: '剪贴板为空',\n\t\t\t\t\t\tcontent: '剪贴板中没有找到数据，请先复制CSV格式的数据。\\n\\n支持格式：\\n新格式：时间,类型,分类名,分类图标,金额,备注\\n旧格式：时间,类型,分类名,金额,备注',\n\t\t\t\t\t\tshowCancel: false,\n\t\t\t\t\t\tconfirmText: '我知道了'\n\t\t\t\t\t})\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// 检查数据格式\n\t\t\t\tconst trimmedData = clipboardData.trim()\n\t\t\t\tif (!trimmedData.includes(',')) {\n\t\t\t\t\tuni.showModal({\n\t\t\t\t\t\ttitle: '数据格式错误',\n\t\t\t\t\t\tcontent: '检测到的数据不是有效的CSV格式，请确保数据包含逗号分隔的字段。\\n\\n支持格式：\\n新格式：时间,类型,分类名,分类图标,金额,备注\\n旧格式：时间,类型,分类名,金额,备注',\n\t\t\t\t\t\tshowCancel: false,\n\t\t\t\t\t\tconfirmText: '我知道了'\n\t\t\t\t\t})\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// 显示确认对话框\n\t\t\t\tconst lines = trimmedData.split('\\n').filter(line => line.trim())\n\t\t\t\tuni.showModal({\n\t\t\t\t\ttitle: '确认导入数据',\n\t\t\t\t\tcontent: `检测到 ${lines.length} 行数据，确定要导入吗？\\n\\n数据预览：\\n${trimmedData.substring(0, 100)}${trimmedData.length > 100 ? '...' : ''}`,\n\t\t\t\t\tconfirmText: '确认导入',\n\t\t\t\t\tcancelText: '取消',\n\t\t\t\t\tsuccess: (modalRes) => {\n\t\t\t\t\t\tif (modalRes.confirm) {\n\t\t\t\t\t\t\tconsole.log('用户确认导入剪切板数据')\n\t\t\t\t\t\t\tthis.parseCsvData(trimmedData)\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconsole.log('用户取消导入剪切板数据')\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t},\n\t\t\t\n\t\t\tshowManualPasteDialog() {\n\t\t\t\tconsole.log('=== 显示手动粘贴对话框 ===')\n\t\t\t\tuni.showModal({\n\t\t\t\t\ttitle: '手动输入数据',\n\t\t\t\t\tcontent: '无法自动读取剪贴板内容，请点击确定后手动输入CSV数据。\\n\\n支持格式：\\n新格式：时间,类型,分类名,分类图标,金额,备注\\n旧格式：时间,类型,分类名,金额,备注',\n\t\t\t\t\tshowCancel: true,\n\t\t\t\t\tconfirmText: '手动输入',\n\t\t\t\t\tcancelText: '取消',\n\t\t\t\t\tsuccess: (res) => {\n\t\t\t\t\t\tif (res.confirm) {\n\t\t\t\t\t\t\tthis.showCsvImportDialog()\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t},\n\t\t\t\n\t\t\texportToClipboard(csvContent, recordCount) {\n\t\t\t\tconsole.log('=== 开始导出到剪切板 ===')\n\t\t\t\tconsole.log('记录数量:', recordCount)\n\t\t\t\tconsole.log('CSV内容长度:', csvContent.length)\n\t\t\t\tconsole.log('CSV内容预览:', csvContent.substring(0, 200))\n\t\t\t\t\n\t\t\t\t// #ifdef H5\n\t\t\t\t// 浏览器环境使用现代Clipboard API\n\t\t\t\tif (navigator.clipboard && window.isSecureContext) {\n\t\t\t\t\tconsole.log('使用现代Clipboard API')\n\t\t\t\t\tnavigator.clipboard.writeText(csvContent).then(() => {\n\t\t\t\t\t\tconsole.log('现代Clipboard API写入成功')\n\t\t\t\t\t\tuni.showModal({\n\t\t\t\t\t\t\ttitle: '导出成功',\n\t\t\t\t\t\t\tcontent: `已将 ${recordCount} 条记录复制到剪贴板！\\n\\n您可以将数据粘贴到任意文本编辑器中保存为CSV文件，或直接在其他应用中使用。`,\n\t\t\t\t\t\t\tshowCancel: false,\n\t\t\t\t\t\t\tconfirmText: '我知道了'\n\t\t\t\t\t\t})\n\t\t\t\t\t}).catch(err => {\n\t\t\t\t\t\tconsole.error('现代Clipboard API失败:', err)\n\t\t\t\t\t\tthis.fallbackCopyToClipboard(csvContent, recordCount)\n\t\t\t\t\t})\n\t\t\t\t} else {\n\t\t\t\t\tconsole.log('现代Clipboard API不可用，使用后备方案')\n\t\t\t\t\tthis.fallbackCopyToClipboard(csvContent, recordCount)\n\t\t\t\t}\n\t\t\t\t// #endif\n\t\t\t\t\n\t\t\t\t// #ifndef H5\n\t\t\t\t// 非浏览器环境使用uni-app API\n\t\t\t\tuni.setClipboardData({\n\t\t\t\t\tdata: csvContent,\n\t\t\t\t\tsuccess: () => {\n\t\t\t\t\t\tconsole.log('uni-app剪切板写入成功')\n\t\t\t\t\t\tuni.showModal({\n\t\t\t\t\t\t\ttitle: '导出成功',\n\t\t\t\t\t\t\tcontent: `已将 ${recordCount} 条记录复制到剪贴板！\\n\\n您可以将数据粘贴到任意文本编辑器中保存为CSV文件，或直接在其他应用中使用。`,\n\t\t\t\t\t\t\tshowCancel: false,\n\t\t\t\t\t\t\tconfirmText: '我知道了'\n\t\t\t\t\t\t})\n\t\t\t\t\t},\n\t\t\t\t\tfail: (err) => {\n\t\t\t\t\t\tconsole.error('uni-app剪切板写入失败:', err)\n\t\t\t\t\t\tuni.showModal({\n\t\t\t\t\t\t\ttitle: '导出失败',\n\t\t\t\t\t\t\tcontent: '无法复制数据到剪贴板，请检查应用权限设置。\\n\\n您可以尝试其他导出方式。',\n\t\t\t\t\t\t\tshowCancel: false,\n\t\t\t\t\t\t\tconfirmText: '我知道了'\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t// #endif\n\t\t\t},\n\t\t\t\n\t\t\tfallbackCopyToClipboard(csvContent, recordCount) {\n\t\t\t\tconsole.log('=== 使用后备剪切板方案 ===')\n\t\t\t\ttry {\n\t\t\t\t\t// 创建临时textarea元素\n\t\t\t\t\tconst textArea = document.createElement('textarea')\n\t\t\t\t\ttextArea.value = csvContent\n\t\t\t\t\ttextArea.style.position = 'fixed'\n\t\t\t\t\ttextArea.style.left = '-999999px'\n\t\t\t\t\ttextArea.style.top = '-999999px'\n\t\t\t\t\tdocument.body.appendChild(textArea)\n\t\t\t\t\ttextArea.focus()\n\t\t\t\t\ttextArea.select()\n\t\t\t\t\t\n\t\t\t\t\t// 尝试复制\n\t\t\t\t\tconst successful = document.execCommand('copy')\n\t\t\t\t\tdocument.body.removeChild(textArea)\n\t\t\t\t\t\n\t\t\t\t\tif (successful) {\n\t\t\t\t\t\tconsole.log('后备方案复制成功')\n\t\t\t\t\t\tuni.showModal({\n\t\t\t\t\t\t\ttitle: '导出成功',\n\t\t\t\t\t\t\tcontent: `已将${recordCount}条记录复制到剪切板\\n\\n您可以粘贴到任意文本编辑器中保存为CSV文件，或直接在其他应用中使用。`,\n\t\t\t\t\t\t\tshowCancel: false,\n\t\t\t\t\t\t\tconfirmText: '知道了'\n\t\t\t\t\t\t})\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthrow new Error('execCommand copy failed')\n\t\t\t\t\t}\n\t\t\t\t} catch (err) {\n\t\t\t\t\tconsole.error('后备方案也失败了:', err)\n\t\t\t\t\t// 最终后备方案：显示文本让用户手动复制\n\t\t\t\t\tthis.showManualCopyDialog(csvContent, recordCount)\n\t\t\t\t}\n\t\t\t},\n\t\t\t\n\t\t\tshowManualCopyDialog(csvContent, recordCount) {\n\t\t\t\tconsole.log('=== 显示手动复制对话框 ===')\n\t\t\t\tconst previewContent = csvContent.length > 500 ? \n\t\t\t\t\tcsvContent.substring(0, 500) + '\\n...(数据已截断，请复制完整内容)' : \n\t\t\t\t\tcsvContent\n\t\t\t\t\n\t\t\t\tuni.showModal({\n\t\t\t\t\ttitle: '请手动复制',\n\t\t\t\t\tcontent: `自动复制失败，请手动复制以下内容：\\n\\n${previewContent}`,\n\t\t\t\t\tshowCancel: true,\n\t\t\t\t\tconfirmText: '已复制',\n\t\t\t\t\tcancelText: '取消',\n\t\t\t\t\tsuccess: (res) => {\n\t\t\t\t\t\tif (res.confirm) {\n\t\t\t\t\t\t\tuni.showToast({\n\t\t\t\t\t\t\t\ttitle: '操作完成',\n\t\t\t\t\t\t\t\ticon: 'success'\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t},\n\t\t\t\n\t\t\tparseCsvData(csvText) {\n\t\t\t\tconsole.log('=== 开始解析CSV数据 ===')\n\t\t\t\tconsole.log('输入数据类型:', typeof csvText)\n\t\t\t\tconsole.log('输入数据长度:', csvText ? csvText.length : 'undefined')\n\t\t\t\t\n\t\t\t\ttry {\n\t\t\t\t// 检查输入数据\n\t\t\t\tif (!csvText || typeof csvText !== 'string') {\n\t\t\t\t\tconsole.error('数据检查失败: 数据为空或不是字符串类型')\n\t\t\t\t\tuni.showToast({\n\t\t\t\t\t\ttitle: '数据为空或格式错误',\n\t\t\t\t\t\ticon: 'none'\n\t\t\t\t\t})\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tconsole.log('开始分割数据行...')\n\t\t\t\tconst lines = csvText.split('\\n').filter(line => line.trim())\n\t\t\t\tconsole.log('总行数:', lines.length, '有效行数:', lines.filter(line => line.trim()).length)\n\t\t\t\t\n\t\t\t\tif (lines.length === 0) {\n\t\t\t\t\tconsole.error('数据检查失败: 文件内容为空')\n\t\t\t\t\tuni.showToast({\n\t\t\t\t\t\ttitle: '文件内容为空',\n\t\t\t\t\t\ticon: 'none'\n\t\t\t\t\t})\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tconst records = []\n\t\t\t\tconst existingRecords = uni.getStorageSync('records') || []\n\t\t\t\tconst newCategories = [] // 记录新创建的分类\n\t\t\t\tconsole.log('现有记录数量:', existingRecords.length)\n\t\t\t\t\n\t\t\t\t// 跳过标题行（如果有的话）\n\t\t\t\tlet startIndex = 0\n\t\t\t\tlet hasIconColumn = false // 检测是否包含分类图标列\n\t\t\t\tif (lines.length > 0 && lines[0]) {\n\t\t\t\t\tconst firstLine = lines[0].toLowerCase()\n\t\t\t\t\tconsole.log('第一行内容:', lines[0])\n\t\t\t\t\tconsole.log('第一行小写:', firstLine)\n\t\t\t\t\tif (firstLine.includes('时间') && firstLine.includes('类型')) {\n\t\t\t\t\t\tstartIndex = 1\n\t\t\t\t\t\thasIconColumn = firstLine.includes('图标') // 检测是否有图标列\n\t\t\t\t\t\tconsole.log('检测到标题行，从第二行开始解析，包含图标列:', hasIconColumn)\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconsole.log('未检测到标题行，从第一行开始解析')\n\t\t\t\t\t\t// 尝试检测第一行数据是否包含图标\n\t\t\t\t\t\tconst firstLineFields = this.parseCSVLine(lines[0])\n\t\t\t\t\t\thasIconColumn = firstLineFields.length >= 6 // 时间,类型,分类名,分类图标,金额,备注\n\t\t\t\t\t}\n\t\t\t\t}\t\t\t\t\tconsole.log('开始逐行解析数据，起始行:', startIndex)\n\t\t\t\t\tfor (let i = startIndex; i < lines.length; i++) {\n\t\t\t\t\t\tconst line = lines[i].trim()\n\t\t\t\t\t\tconsole.log(`处理第${i+1}行:`, line.substring(0, 100) + (line.length > 100 ? '...' : ''))\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (!line) {\n\t\t\t\t\t\t\tconsole.log(`第${i+1}行为空，跳过`)\n\t\t\t\t\t\t\tcontinue\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t// 解析CSV行（处理带引号的字段）\n\t\t\t\t\tconsole.log(`开始解析第${i+1}行的CSV字段...`)\n\t\t\t\t\tconst fields = this.parseCSVLine(line)\n\t\t\t\t\tconsole.log(`第${i+1}行解析得到${fields.length}个字段:`, fields)\n\t\t\t\t\t\n\t\t\t\t\t// 根据是否有图标列决定字段解析方式\n\t\t\t\t\tconst minFields = hasIconColumn ? 5 : 4 // 新格式需要至少5个字段，旧格式需要4个\n\t\t\t\t\tif (fields.length >= minFields) {\n\t\t\t\t\t\tlet timeStr, typeStr, categoryStr, categoryIcon, amountStr, noteStr\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (hasIconColumn) {\n\t\t\t\t\t\t\t// 新格式：时间,类型,分类名,分类图标,金额,备注\n\t\t\t\t\t\t\ttimeStr = fields[0]\n\t\t\t\t\t\t\ttypeStr = fields[1]\n\t\t\t\t\t\t\tcategoryStr = fields[2]\n\t\t\t\t\t\t\tcategoryIcon = fields[3]\n\t\t\t\t\t\t\tamountStr = fields[4]\n\t\t\t\t\t\t\tnoteStr = fields[5] || ''\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// 旧格式：时间,类型,分类名,金额,备注\n\t\t\t\t\t\t\ttimeStr = fields[0]\n\t\t\t\t\t\t\ttypeStr = fields[1]\n\t\t\t\t\t\t\tcategoryStr = fields[2]\n\t\t\t\t\t\t\tcategoryIcon = '' // 旧格式没有图标，后续会使用默认值\n\t\t\t\t\t\t\tamountStr = fields[3]\n\t\t\t\t\t\t\tnoteStr = fields[4] || ''\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tconsole.log(`第${i+1}行字段详情:`, {\n\t\t\t\t\t\t\ttime: timeStr,\n\t\t\t\t\t\t\ttype: typeStr,\n\t\t\t\t\t\t\tcategory: categoryStr,\n\t\t\t\t\t\t\ticon: categoryIcon,\n\t\t\t\t\t\t\tamount: amountStr,\n\t\t\t\t\t\t\tnote: noteStr\n\t\t\t\t\t\t})\t\t\t\t\t\t\t// 验证和转换数据\n\t\t\t\t\t\t\tconsole.log(`验证第${i+1}行数据类型...`)\n\t\t\t\t\t\t\tconst type = typeStr === '支出' ? 'expense' : typeStr === '收入' ? 'income' : null\n\t\t\t\t\t\t\tif (!type) {\n\t\t\t\t\t\t\t\tconsole.log(`第${i+1}行类型无效:`, typeStr, '跳过此行')\n\t\t\t\t\t\t\t\tcontinue\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tconsole.log(`第${i+1}行类型验证通过:`, type)\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tconsole.log(`解析第${i+1}行金额:`, amountStr)\n\t\t\t\t\t\t\tconst amount = parseFloat(amountStr.replace(/[^\\d.]/g, ''))\n\t\t\t\t\t\t\tif (isNaN(amount) || amount <= 0) {\n\t\t\t\t\t\t\t\tconsole.log(`第${i+1}行金额无效:`, amountStr, '=>', amount, '跳过此行')\n\t\t\t\t\t\t\t\tcontinue\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tconsole.log(`第${i+1}行金额验证通过:`, amount)\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t// 查找或创建对应的分类\n\t\t\t\t\t\tconsole.log(`查找第${i+1}行分类:`, categoryStr, type, '图标:', categoryIcon)\n\t\t\t\t\t\tlet category = this.findOrCreateCategory(categoryStr, type, categoryIcon)\n\t\t\t\t\t\tif (!category) {\n\t\t\t\t\t\t\tconsole.log(`第${i+1}行无法创建分类:`, categoryStr, '跳过此行')\n\t\t\t\t\t\t\tcontinue\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\t// 检查是否是新创建的分类\n\t\t\t\t\t\tif (category.isNewCategory) {\n\t\t\t\t\t\t\tconst existingNew = newCategories.find(cat => cat.name === category.name && cat.type === type)\n\t\t\t\t\t\t\tif (!existingNew) {\n\t\t\t\t\t\t\t\tnewCategories.push({\n\t\t\t\t\t\t\t\t\tname: category.name,\n\t\t\t\t\t\t\t\t\ticon: category.icon,\n\t\t\t\t\t\t\t\t\ttype: type === 'expense' ? '支出' : '收入'\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tdelete category.isNewCategory // 移除临时标记\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tconsole.log(`第${i+1}行分类处理成功:`, category)\t\t\t\t\t\t\t// 解析时间\n\t\t\t\t\t\t\tconsole.log(`解析第${i+1}行时间:`, timeStr)\n\t\t\t\t\t\t\tlet time\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\ttime = new Date(timeStr).toISOString()\n\t\t\t\t\t\t\t\tconsole.log(`第${i+1}行时间解析成功:`, time)\n\t\t\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t\t\tconsole.log(`第${i+1}行时间解析失败，使用当前时间:`, e.message)\n\t\t\t\t\t\t\t\ttime = new Date().toISOString()\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tconst record = {\n\t\t\t\t\t\t\t\tid: Date.now().toString() + '_import_' + i,\n\t\t\t\t\t\t\t\ttype: type,\n\t\t\t\t\t\t\t\tamount: amount.toFixed(2),\n\t\t\t\t\t\t\t\tcategoryId: category.id,\n\t\t\t\t\t\t\t\tcategoryName: category.name,\n\t\t\t\t\t\t\t\tcategoryIcon: category.icon,\n\t\t\t\t\t\t\t\tnote: noteStr,\n\t\t\t\t\t\t\t\ttime: time\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tconsole.log(`第${i+1}行记录创建成功:`, record)\n\t\t\t\t\t\t\trecords.push(record)\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconsole.log(`第${i+1}行字段数量不足(${fields.length}/${minFields})，跳过此行`)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tconsole.log('数据解析完成，有效记录数:', records.length)\n\t\t\t\t\t\n\t\t\t\t\tif (records.length > 0) {\n\t\t\t\t\t\t// 合并到现有数据\n\t\t\t\t\t\tconsole.log('开始合并数据到本地存储...')\n\t\t\t\t\t\tconst allRecords = [...existingRecords, ...records]\n\t\t\t\t\t\tconsole.log('合并后总记录数:', allRecords.length)\n\t\t\t\t\t\t\n\t\t\t\t\t\tuni.setStorageSync('records', allRecords)\n\t\t\t\t\t\tconsole.log('数据保存成功')\n\t\t\t\t\t\t\n\t\t\t\t\t\t// 构建成功消息\n\t\t\t\t\t\tlet successMessage = `成功导入 ${records.length} 条记录！`\n\t\t\t\t\t\tif (newCategories.length > 0) {\n\t\t\t\t\t\t\tsuccessMessage += `\\n\\n新创建分类 ${newCategories.length} 个：\\n`\n\t\t\t\t\t\t\tnewCategories.forEach(cat => {\n\t\t\t\t\t\t\t\tsuccessMessage += `${cat.icon} ${cat.name} (${cat.type})\\n`\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tuni.showModal({\n\t\t\t\t\t\t\ttitle: '导入完成',\n\t\t\t\t\t\t\tcontent: successMessage,\n\t\t\t\t\t\t\tshowCancel: false,\n\t\t\t\t\t\t\tconfirmText: '我知道了'\n\t\t\t\t\t\t})\n\t\t\t\t\t\tconsole.log('=== CSV导入流程完成 ===')\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconsole.log('没有可导入的有效数据')\n\t\t\t\t\t\tuni.showToast({\n\t\t\t\t\t\t\ttitle: '没有可导入的有效数据',\n\t\t\t\t\t\t\ticon: 'none'\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t} catch (error) {\n\t\t\t\t\tconsole.error('=== CSV解析出现异常 ===')\n\t\t\t\t\tconsole.error('错误类型:', error.name)\n\t\t\t\t\tconsole.error('错误信息:', error.message)\n\t\t\t\t\tconsole.error('错误堆栈:', error.stack)\n\t\t\t\t\tconsole.error('输入数据:', csvText)\n\t\t\t\t\t\n\t\t\t\t\tuni.showModal({\n\t\t\t\t\t\ttitle: '数据格式错误',\n\t\t\t\t\t\tcontent: '请检查数据格式是否正确！\\n\\n支持格式：\\n新格式：时间,类型,分类名,分类图标,金额,备注\\n旧格式：时间,类型,分类名,金额,备注\\n\\n示例：\\n\"2024-01-01 12:00\",\"支出\",\"餐饮\",\"🍽️\",\"25.50\",\"午餐\"',\n\t\t\t\t\t\tshowCancel: false,\n\t\t\t\t\t\tconfirmText: '我知道了'\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t},\n\t\t\t\n\t\t\t// H5平台文件导入\n\t\t\timportFromFileH5() {\n\t\t\t\tconsole.log('=== H5平台文件选择流程 ===')\n\t\t\t\t// H5平台的文件选择实现\n\t\t\t\tconst input = document.createElement('input')\n\t\t\t\tinput.type = 'file'\n\t\t\t\tinput.accept = '.csv,.txt'\n\t\t\t\tinput.style.display = 'none'\n\t\t\t\tconsole.log('创建文件选择元素:', input)\n\t\t\t\t\n\t\t\t\tinput.onchange = (event) => {\n\t\t\t\t\tconsole.log('=== H5文件选择change事件触发 ===')\n\t\t\t\t\tconst file = event.target.files[0]\n\t\t\t\t\tconsole.log('选择的文件对象:', file)\n\t\t\t\t\t\n\t\t\t\t\tif (!file) {\n\t\t\t\t\t\tconsole.log('未选择文件或文件为空')\n\t\t\t\t\t\tuni.showToast({\n\t\t\t\t\t\t\ttitle: '未选择文件',\n\t\t\t\t\t\t\ticon: 'none'\n\t\t\t\t\t\t})\n\t\t\t\t\t\treturn\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t// 检查文件大小\n\t\t\t\t\tif (file.size === 0) {\n\t\t\t\t\t\tconsole.error('文件大小为0')\n\t\t\t\t\t\tuni.showToast({\n\t\t\t\t\t\t\ttitle: '文件为空',\n\t\t\t\t\t\t\ticon: 'error'\n\t\t\t\t\t\t})\n\t\t\t\t\t\treturn\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (file.size > 5 * 1024 * 1024) { // 5MB限制\n\t\t\t\t\t\tconsole.error('文件过大:', file.size)\n\t\t\t\t\t\tuni.showToast({\n\t\t\t\t\t\t\ttitle: '文件不能超过5MB',\n\t\t\t\t\t\t\ticon: 'error'\n\t\t\t\t\t\t})\n\t\t\t\t\t\treturn\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tconsole.log('文件大小检查通过，开始读取文件内容...')\n\t\t\t\t\tconst reader = new FileReader()\n\t\t\t\t\t\n\t\t\t\t\treader.onload = (e) => {\n\t\t\t\t\t\tconsole.log('=== FileReader读取完成 ===')\n\t\t\t\t\t\tconst content = e.target.result\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (!content || typeof content !== 'string') {\n\t\t\t\t\t\t\tconsole.error('读取到的内容无效')\n\t\t\t\t\t\t\tuni.showToast({\n\t\t\t\t\t\t\t\ttitle: '文件内容无效',\n\t\t\t\t\t\t\t\ticon: 'error'\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\treturn\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tconsole.log('文件读取成功，开始解析CSV数据...')\n\t\t\t\t\t\tthis.parseCsvData(content)\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\treader.onerror = (e) => {\n\t\t\t\t\t\tconsole.error('=== FileReader读取失败 ===', e)\n\t\t\t\t\t\tuni.showToast({\n\t\t\t\t\t\t\ttitle: '读取文件失败',\n\t\t\t\t\t\t\ticon: 'error'\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tconsole.log('开始FileReader.readAsText操作...')\n\t\t\t\t\treader.readAsText(file, 'UTF-8')\n\t\t\t\t\t\n\t\t\t\t\t// 清理DOM元素\n\t\t\t\t\tconsole.log('清理文件选择元素')\n\t\t\t\t\tdocument.body.removeChild(input)\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// 用户取消选择文件时的处理\n\t\t\t\tinput.oncancel = () => {\n\t\t\t\t\tconsole.log('文件选择cancel事件触发')\n\t\t\t\t\tdocument.body.removeChild(input)\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tconsole.log('添加文件选择元素到DOM并触发点击')\n\t\t\t\tdocument.body.appendChild(input)\n\t\t\t\tinput.click()\n\t\t\t},\n\t\t\t\n\t\t\timportFromFileWx() {\n\t\t\t\tconsole.log('=== 微信小程序文件选择流程 ===')\n\t\t\t\t// 微信小程序选择文件\n\t\t\t\twx.chooseMessageFile({\n\t\t\t\t\tcount: 1,\n\t\t\t\t\ttype: 'file',\n\t\t\t\t\tsuccess: (res) => {\n\t\t\t\t\t\tconsole.log('文件选择成功:', res)\n\t\t\t\t\t\tconst file = res.tempFiles[0]\n\t\t\t\t\t\tconsole.log('选择的文件:', file)\n\t\t\t\t\t\tconsole.log('文件名:', file.name)\n\t\t\t\t\t\tconsole.log('文件大小:', file.size)\n\t\t\t\t\t\tconsole.log('文件路径:', file.path)\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (!file.name.toLowerCase().endsWith('.csv') && !file.name.toLowerCase().endsWith('.txt')) {\n\t\t\t\t\t\t\tconsole.log('文件类型检查失败:', file.name)\n\t\t\t\t\t\t\tuni.showToast({\n\t\t\t\t\t\t\t\ttitle: '请选择CSV或TXT文件',\n\t\t\t\t\t\t\t\ticon: 'none'\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\treturn\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconsole.log('文件类型检查通过')\n\t\t\t\t\t\t\n\t\t\t\t\t\tconsole.log('开始读取文件内容...')\n\t\t\t\t\t\tconst fs = wx.getFileSystemManager()\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (!fs) {\n\t\t\t\t\t\t\tconsole.error('无法获取文件系统管理器')\n\t\t\t\t\t\t\tuni.showToast({\n\t\t\t\t\t\t\t\ttitle: '文件系统不可用',\n\t\t\t\t\t\t\t\ticon: 'error'\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\treturn\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tconsole.log('文件系统管理器获取成功，开始读取文件:', file.path)\n\t\t\t\t\t\t\n\t\t\t\t\t\tfs.readFile({\n\t\t\t\t\t\t\tfilePath: file.path,\n\t\t\t\t\t\t\tencoding: 'utf8',\n\t\t\t\t\t\t\tsuccess: (fileRes) => {\n\t\t\t\t\t\t\t\tconsole.log('文件读取成功！')\n\t\t\t\t\t\t\t\tconsole.log('读取结果:', fileRes)\n\t\t\t\t\t\t\t\tconsole.log('数据类型:', typeof fileRes.data)\n\t\t\t\t\t\t\t\tconsole.log('数据长度:', fileRes.data ? fileRes.data.length : 'undefined')\n\t\t\t\t\t\t\t\tconsole.log('文件内容预览:', fileRes.data ? fileRes.data.substring(0, 200) + (fileRes.data.length > 200 ? '...' : '') : '无内容')\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tif (!fileRes.data) {\n\t\t\t\t\t\t\t\t\tconsole.error('读取到的文件内容为空')\n\t\t\t\t\t\t\t\t\tuni.showToast({\n\t\t\t\t\t\t\t\t\t\ttitle: '文件内容为空',\n\t\t\t\t\t\t\t\t\t\ticon: 'error'\n\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\treturn\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tif (typeof fileRes.data !== 'string') {\n\t\t\t\t\t\t\t\t\tconsole.error('读取到的内容不是字符串类型:', typeof fileRes.data)\n\t\t\t\t\t\t\t\t\tuni.showToast({\n\t\t\t\t\t\t\t\t\t\ttitle: '文件格式错误',\n\t\t\t\t\t\t\t\t\t\ticon: 'error'\n\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\treturn\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tconsole.log('文件内容有效，开始解析CSV...')\n\t\t\t\t\t\t\t\tthis.parseCsvData(fileRes.data)\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tfail: (err) => {\n\t\t\t\t\t\t\t\tconsole.error('读取文件失败:', err)\n\t\t\t\t\t\t\t\tconsole.error('错误对象完整信息:', JSON.stringify(err, null, 2))\n\t\t\t\t\t\t\t\tconsole.error('错误消息:', err.errMsg || err.message || '未知错误')\n\t\t\t\t\t\t\t\tconsole.error('错误代码:', err.errCode || err.code || '无代码')\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tuni.showToast({\n\t\t\t\t\t\t\t\t\ttitle: '读取文件失败: ' + (err.errMsg || err.message || '未知错误'),\n\t\t\t\t\t\t\t\t\ticon: 'error'\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t},\n\t\t\t\t\tfail: (err) => {\n\t\t\t\t\t\tconsole.log('文件选择失败:', err)\n\t\t\t\t\t\t// 检查是否是用户取消操作\n\t\t\t\t\t\tif (err.errMsg && err.errMsg.includes('cancel')) {\n\t\t\t\t\t\t\tconsole.log('用户取消文件选择(通过errMsg检测)')\n\t\t\t\t\t\t\t// 用户取消选择，不显示错误提示\n\t\t\t\t\t\t\treturn\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (err.code === 12 || (err.message && err.message.includes('cancelled'))) {\n\t\t\t\t\t\t\tconsole.log('用户取消文件选择(通过code/message检测)')\n\t\t\t\t\t\t\t// 用户取消选择，不显示错误提示\n\t\t\t\t\t\t\treturn\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// 其他错误才提示降级\n\t\t\t\t\t\tconsole.log('文件选择出现其他错误，启动降级方案')\n\t\t\t\t\t\tthis.fallbackImport()\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t},\n\t\t\t\n\t\t\tselectFromDownloads() {\n\t\t\t\tconsole.log('=== 从下载目录选择文件 ===')\n\t\t\t\tplus.io.requestFileSystem(plus.io.PUBLIC_DOWNLOADS, (fs) => {\n\t\t\t\t\tconsole.log('获取下载目录文件系统成功')\n\t\t\t\t\t\n\t\t\t\t\t// 首先检查下载目录根目录中的CSV文件\n\t\t\t\t\tfs.root.createReader().readEntries((rootEntries) => {\n\t\t\t\t\t\tconst rootCsvFiles = rootEntries.filter(entry => \n\t\t\t\t\t\t\tentry.isFile && (\n\t\t\t\t\t\t\t\tentry.name.toLowerCase().endsWith('.csv') || \n\t\t\t\t\t\t\t\tentry.name.toLowerCase().endsWith('.txt')\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t)\n\t\t\t\t\t\t\n\t\t\t\t\t\t// 然后检查AccountData子目录\n\t\t\t\t\t\tfs.root.getDirectory('AccountData', {create: false}, (accountDataEntry) => {\n\t\t\t\t\t\t\tconsole.log('找到AccountData目录')\n\t\t\t\t\t\t\taccountDataEntry.createReader().readEntries((subEntries) => {\n\t\t\t\t\t\t\t\tconst subCsvFiles = subEntries.filter(entry => \n\t\t\t\t\t\t\t\t\tentry.isFile && (\n\t\t\t\t\t\t\t\t\t\tentry.name.toLowerCase().endsWith('.csv') || \n\t\t\t\t\t\t\t\t\t\tentry.name.toLowerCase().endsWith('.txt')\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t).map(entry => ({\n\t\t\t\t\t\t\t\t\t...entry,\n\t\t\t\t\t\t\t\t\tdisplayName: `AccountData/${entry.name}`,\n\t\t\t\t\t\t\t\t\tisFromSubDir: true\n\t\t\t\t\t\t\t\t}))\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t// 合并所有文件\n\t\t\t\t\t\t\t\tconst allFiles = [\n\t\t\t\t\t\t\t\t\t...rootCsvFiles.map(entry => ({\n\t\t\t\t\t\t\t\t\t\t...entry,\n\t\t\t\t\t\t\t\t\t\tdisplayName: entry.name,\n\t\t\t\t\t\t\t\t\t\tisFromSubDir: false\n\t\t\t\t\t\t\t\t\t})),\n\t\t\t\t\t\t\t\t\t...subCsvFiles\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tthis.showFileSelectionDialog(allFiles, '下载目录')\n\t\t\t\t\t\t\t}, (err) => {\n\t\t\t\t\t\t\t\tconsole.log('AccountData目录为空或读取失败:', err)\n\t\t\t\t\t\t\t\tthis.showFileSelectionDialog(\n\t\t\t\t\t\t\t\t\trootCsvFiles.map(entry => ({\n\t\t\t\t\t\t\t\t\t\t...entry,\n\t\t\t\t\t\t\t\t\t\tdisplayName: entry.name,\n\t\t\t\t\t\t\t\t\t\tisFromSubDir: false\n\t\t\t\t\t\t\t\t\t})), \n\t\t\t\t\t\t\t\t\t'下载目录'\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t}, (err) => {\n\t\t\t\t\t\t\tconsole.log('AccountData目录不存在:', err)\n\t\t\t\t\t\t\tthis.showFileSelectionDialog(\n\t\t\t\t\t\t\t\trootCsvFiles.map(entry => ({\n\t\t\t\t\t\t\t\t\t...entry,\n\t\t\t\t\t\t\t\t\tdisplayName: entry.name,\n\t\t\t\t\t\t\t\t\tisFromSubDir: false\n\t\t\t\t\t\t\t\t})), \n\t\t\t\t\t\t\t\t'下载目录'\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t})\n\t\t\t\t\t}, (err) => {\n\t\t\t\t\t\tconsole.error('读取下载目录失败:', err)\n\t\t\t\t\t\tthis.fallbackImport()\n\t\t\t\t\t})\n\t\t\t\t}, (err) => {\n\t\t\t\t\tconsole.error('访问下载目录失败:', err)\n\t\t\t\t\tthis.fallbackImport()\n\t\t\t\t})\n\t\t\t},\n\t\t\t\n\t\t\tselectFromDocuments() {\n\t\t\t\tplus.io.requestFileSystem(plus.io.PRIVATE_DOC, (fs) => {\n\t\t\t\t\tfs.root.createReader().readEntries((entries) => {\n\t\t\t\t\t\tconst csvFiles = entries.filter(entry => \n\t\t\t\t\t\t\tentry.name.toLowerCase().endsWith('.csv') || \n\t\t\t\t\t\t\tentry.name.toLowerCase().endsWith('.txt')\n\t\t\t\t\t\t)\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (csvFiles.length === 0) {\n\t\t\t\t\t\t\tuni.showToast({\n\t\t\t\t\t\t\t\ttitle: '文档目录中没有找到CSV文件',\n\t\t\t\t\t\t\t\ticon: 'none'\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\treturn\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\t// 显示文件选择列表\n\t\t\t\t\t\tconst fileNames = csvFiles.map(file => file.name)\n\t\t\t\t\t\tuni.showActionSheet({\n\t\t\t\t\t\t\titemList: fileNames,\n\t\t\t\t\t\t\tsuccess: (res) => {\n\t\t\t\t\t\t\t\tconst selectedFile = csvFiles[res.tapIndex]\n\t\t\t\t\t\t\t\tthis.readFileContent(selectedFile)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t})\n\t\t\t\t}, (err) => {\n\t\t\t\t\tconsole.error('访问文档目录失败:', err)\n\t\t\t\t\tthis.fallbackImport()\n\t\t\t\t})\n\t\t\t},\n\t\t\t\n\t\t\t// 从公共存储（下载目录的AccountData子目录）导入\n\t\t\tselectFromPublicStorage() {\n\t\t\t\tconsole.log('=== 从公共存储选择文件 ===')\n\t\t\t\t\n\t\t\t\t// 首先尝试使用原生 API 访问真正的公共目录\n\t\t\t\ttry {\n\t\t\t\t\tconst Environment = plus.android.importClass('android.os.Environment')\n\t\t\t\t\tconst File = plus.android.importClass('java.io.File')\n\t\t\t\t\t\n\t\t\t\t\t// 获取公共下载目录\n\t\t\t\t\tlet publicDownloadsDir = Environment.getExternalStoragePublicDirectory(Environment.DIRECTORY_DOWNLOADS)\n\t\t\t\t\t\n\t\t\t\t\t// 检查是否成功获取下载目录\n\t\t\t\t\tif (publicDownloadsDir === null || publicDownloadsDir === undefined) {\n\t\t\t\t\t\t// 尝试备用方案：手动构建下载目录路径\n\t\t\t\t\t\tconst externalStorageDir = Environment.getExternalStorageDirectory()\n\t\t\t\t\t\tif (externalStorageDir !== null) {\n\t\t\t\t\t\t\tpublicDownloadsDir = new File(externalStorageDir, 'Download')\n\t\t\t\t\t\t\tconsole.log('使用备用下载目录路径:', publicDownloadsDir.getAbsolutePath())\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthrow new Error('无法获取任何外部存储目录')\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tconst accountDataDir = new File(publicDownloadsDir, 'AccountData')\n\t\t\t\t\t\n\t\t\t\t\tif (!accountDataDir.exists()) {\n\t\t\t\t\t\tuni.showToast({\n\t\t\t\t\t\t\ttitle: '未找到AccountData目录，请先导出数据',\n\t\t\t\t\t\t\ticon: 'none'\n\t\t\t\t\t\t})\n\t\t\t\t\t\treturn\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t// 获取目录中的文件列表\n\t\t\t\t\tconst files = accountDataDir.listFiles()\n\t\t\t\t\tif (!files || files.length === 0) {\n\t\t\t\t\t\tuni.showToast({\n\t\t\t\t\t\t\ttitle: 'AccountData目录为空',\n\t\t\t\t\t\t\ticon: 'none'\n\t\t\t\t\t\t})\n\t\t\t\t\t\treturn\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t// 过滤CSV和TXT文件\n\t\t\t\t\tconst csvFiles = []\n\t\t\t\t\tfor (let i = 0; i < files.length; i++) {\n\t\t\t\t\t\tconst file = files[i]\n\t\t\t\t\t\tconst fileName = file.getName()\n\t\t\t\t\t\tif (fileName.toLowerCase().endsWith('.csv') || fileName.toLowerCase().endsWith('.txt')) {\n\t\t\t\t\t\t\tcsvFiles.push({\n\t\t\t\t\t\t\t\tname: fileName,\n\t\t\t\t\t\t\t\tfullPath: file.getAbsolutePath(),\n\t\t\t\t\t\t\t\tdisplayName: fileName,\n\t\t\t\t\t\t\t\tisFromPublicDir: true,\n\t\t\t\t\t\t\t\tnativeFile: file\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (csvFiles.length === 0) {\n\t\t\t\t\t\tuni.showToast({\n\t\t\t\t\t\t\ttitle: '未找到CSV或TXT文件',\n\t\t\t\t\t\t\ticon: 'none'\n\t\t\t\t\t\t})\n\t\t\t\t\t\treturn\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tthis.showFileSelectionDialog(csvFiles, '真正的公共存储(AccountData目录)')\n\t\t\t\t\t\n\t\t\t\t} catch (error) {\n\t\t\t\t\tconsole.error('访问公共目录失败:', error)\n\t\t\t\t\t// 降级使用 plus.io API\n\t\t\t\t\tthis.fallbackSelectFromPublicStorage()\n\t\t\t\t}\n\t\t\t},\n\t\t\t\n\t\t\t// 降级的公共存储选择方法\n\t\t\tfallbackSelectFromPublicStorage() {\n\t\t\t\tconsole.log('降级使用 plus.io API 选择文件')\n\t\t\t\tplus.io.requestFileSystem(plus.io.PUBLIC_DOWNLOADS, (fs) => {\n\t\t\t\t\tconsole.log('获取下载目录文件系统成功')\n\t\t\t\t\t\n\t\t\t\t\t// 直接访问AccountData子目录\n\t\t\t\t\tfs.root.getDirectory('AccountData', {create: false}, (accountDataEntry) => {\n\t\t\t\t\t\tconsole.log('找到AccountData目录')\n\t\t\t\t\t\taccountDataEntry.createReader().readEntries((entries) => {\n\t\t\t\t\t\t\tconst csvFiles = entries.filter(entry => \n\t\t\t\t\t\t\t\tentry.isFile && (\n\t\t\t\t\t\t\t\t\tentry.name.toLowerCase().endsWith('.csv') || \n\t\t\t\t\t\t\t\t\tentry.name.toLowerCase().endsWith('.txt')\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t).map(entry => ({\n\t\t\t\t\t\t\t\t...entry,\n\t\t\t\t\t\t\t\tdisplayName: entry.name,\n\t\t\t\t\t\t\t\tisFromSubDir: true,\n\t\t\t\t\t\t\t\tparentDir: accountDataEntry\n\t\t\t\t\t\t\t}))\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tthis.showFileSelectionDialog(csvFiles, '公共存储(AccountData目录)')\n\t\t\t\t\t\t}, (err) => {\n\t\t\t\t\t\t\tconsole.error('读取AccountData目录失败:', err)\n\t\t\t\t\t\t\tuni.showToast({\n\t\t\t\t\t\t\t\ttitle: 'AccountData目录为空或无法访问',\n\t\t\t\t\t\t\t\ticon: 'none'\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t})\n\t\t\t\t\t}, (err) => {\n\t\t\t\t\t\tconsole.error('AccountData目录不存在:', err)\n\t\t\t\t\t\tuni.showToast({\n\t\t\t\t\t\t\ttitle: '未找到AccountData目录，请先导出数据',\n\t\t\t\t\t\t\ticon: 'none'\n\t\t\t\t\t\t})\n\t\t\t\t\t})\n\t\t\t\t}, (err) => {\n\t\t\t\t\tconsole.error('访问公共存储失败:', err)\n\t\t\t\t\tthis.fallbackImport()\n\t\t\t\t})\n\t\t\t},\n\t\t\t\n\t\t\t// 从应用文档目录导入\n\t\t\tselectFromAppDocuments() {\n\t\t\t\tconsole.log('=== 从应用文档目录选择文件 ===')\n\t\t\t\t\n\t\t\t\t// 首先尝试访问外部文档目录\n\t\t\t\tconst externalPath = plus.io.convertLocalFileSystemURL(\"_documents/\")\n\t\t\t\tplus.io.resolveLocalFileSystemURL(externalPath, (externalEntry) => {\n\t\t\t\t\tconsole.log('找到外部文档目录')\n\t\t\t\t\texternalEntry.createReader().readEntries((entries) => {\n\t\t\t\t\t\tconst csvFiles = entries.filter(entry => \n\t\t\t\t\t\t\tentry.isFile && (\n\t\t\t\t\t\t\t\tentry.name.toLowerCase().endsWith('.csv') || \n\t\t\t\t\t\t\t\tentry.name.toLowerCase().endsWith('.txt')\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t).map(entry => ({\n\t\t\t\t\t\t\t...entry,\n\t\t\t\t\t\t\tdisplayName: `外部文档/${entry.name}`,\n\t\t\t\t\t\t\tisFromSubDir: false\n\t\t\t\t\t\t}))\n\t\t\t\t\t\t\n\t\t\t\t\t\t// 同时检查私有文档目录\n\t\t\t\t\t\tthis.checkPrivateDocuments((privateCsvFiles) => {\n\t\t\t\t\t\t\tconst allFiles = [...csvFiles, ...privateCsvFiles]\n\t\t\t\t\t\t\tthis.showFileSelectionDialog(allFiles, '应用文档目录')\n\t\t\t\t\t\t})\n\t\t\t\t\t}, (err) => {\n\t\t\t\t\t\tconsole.log('外部文档目录为空:', err)\n\t\t\t\t\t\t// 回退到私有文档目录\n\t\t\t\t\t\tthis.checkPrivateDocuments((privateCsvFiles) => {\n\t\t\t\t\t\t\tthis.showFileSelectionDialog(privateCsvFiles, '应用文档目录')\n\t\t\t\t\t\t})\n\t\t\t\t\t})\n\t\t\t\t}, (err) => {\n\t\t\t\t\tconsole.log('外部文档目录不存在:', err)\n\t\t\t\t\t// 回退到私有文档目录\n\t\t\t\t\tthis.checkPrivateDocuments((privateCsvFiles) => {\n\t\t\t\t\t\tthis.showFileSelectionDialog(privateCsvFiles, '应用文档目录')\n\t\t\t\t\t})\n\t\t\t\t})\n\t\t\t},\n\t\t\t\n\t\t\t// 检查私有文档目录\n\t\t\tcheckPrivateDocuments(callback) {\n\t\t\t\tplus.io.requestFileSystem(plus.io.PRIVATE_DOC, (fs) => {\n\t\t\t\t\tfs.root.createReader().readEntries((entries) => {\n\t\t\t\t\t\tconst csvFiles = entries.filter(entry => \n\t\t\t\t\t\t\tentry.isFile && (\n\t\t\t\t\t\t\t\tentry.name.toLowerCase().endsWith('.csv') || \n\t\t\t\t\t\t\t\tentry.name.toLowerCase().endsWith('.txt')\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t).map(entry => ({\n\t\t\t\t\t\t\t...entry,\n\t\t\t\t\t\t\tdisplayName: `私有文档/${entry.name}`,\n\t\t\t\t\t\t\tisFromSubDir: false\n\t\t\t\t\t\t}))\n\t\t\t\t\t\tcallback(csvFiles)\n\t\t\t\t\t}, (err) => {\n\t\t\t\t\t\tconsole.log('私有文档目录为空:', err)\n\t\t\t\t\t\tcallback([])\n\t\t\t\t\t})\n\t\t\t\t}, (err) => {\n\t\t\t\t\tconsole.error('访问私有文档目录失败:', err)\n\t\t\t\t\tcallback([])\n\t\t\t\t})\n\t\t\t},\n\t\t\t\n\t\t\t// 显示文件选择对话框\n\t\t\tshowFileSelectionDialog(files, sourceDesc) {\n\t\t\t\tif (files.length === 0) {\n\t\t\t\t\tuni.showToast({\n\t\t\t\t\t\ttitle: `${sourceDesc}中没有找到CSV文件`,\n\t\t\t\t\t\ticon: 'none'\n\t\t\t\t\t})\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tconsole.log(`找到${files.length}个文件:`, files.map(f => f.displayName))\n\t\t\t\t\n\t\t\t\t// 显示文件选择列表\n\t\t\t\tconst fileNames = files.map(file => file.displayName)\n\t\t\t\tuni.showActionSheet({\n\t\t\t\t\titemList: fileNames,\n\t\t\t\t\tsuccess: (res) => {\n\t\t\t\t\t\tconst selectedFile = files[res.tapIndex]\n\t\t\t\t\t\tconsole.log('选择的文件:', selectedFile.displayName)\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (selectedFile.isFromSubDir && selectedFile.parentDir) {\n\t\t\t\t\t\t\t// 从子目录中读取文件\n\t\t\t\t\t\t\tselectedFile.parentDir.getFile(selectedFile.name, {create: false}, (fileEntry) => {\n\t\t\t\t\t\t\t\tthis.readFileContent(fileEntry)\n\t\t\t\t\t\t\t}, (err) => {\n\t\t\t\t\t\t\t\tconsole.error('获取子目录文件失败:', err)\n\t\t\t\t\t\t\t\tuni.showToast({\n\t\t\t\t\t\t\t\t\ttitle: '文件访问失败',\n\t\t\t\t\t\t\t\t\ticon: 'error'\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// 直接读取文件\n\t\t\t\t\t\t\tthis.readFileContent(selectedFile)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t},\n\t\t\t\n\t\t\tmanualInputPath() {\n\t\t\t\tuni.showModal({\n\t\t\t\t\ttitle: '输入文件路径',\n\t\t\t\t\tcontent: '请输入CSV文件的完整路径：',\n\t\t\t\t\teditable: true,\n\t\t\t\t\tplaceholderText: '/storage/emulated/0/Download/data.csv',\n\t\t\t\t\tsuccess: (res) => {\n\t\t\t\t\t\tif (res.confirm && res.content && res.content.trim()) {\n\t\t\t\t\t\t\tthis.readFileFromPath(res.content.trim())\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t},\n\t\t\t\n\t\t\treadFileFromPath(filePath) {\n\t\t\t\tplus.io.resolveLocalFileSystemURL(filePath, (entry) => {\n\t\t\t\t\tthis.readFileContent(entry)\n\t\t\t\t}, (err) => {\n\t\t\t\t\tconsole.error('文件路径错误:', err)\n\t\t\t\t\tuni.showToast({\n\t\t\t\t\t\ttitle: '文件不存在或路径错误',\n\t\t\t\t\t\ticon: 'none'\n\t\t\t\t\t})\n\t\t\t\t})\n\t\t\t},\n\t\t\t\n\t\t\treadFileContent(fileEntry) {\n\t\t\t\t// 检查是否是从真正的公共目录选择的文件\n\t\t\t\tif (fileEntry.isFromPublicDir && fileEntry.nativeFile) {\n\t\t\t\t\tconsole.log('从公共目录读取文件:', fileEntry.fullPath)\n\t\t\t\t\ttry {\n\t\t\t\t\t\tconst FileInputStream = plus.android.importClass('java.io.FileInputStream')\n\t\t\t\t\t\tconst InputStreamReader = plus.android.importClass('java.io.InputStreamReader')\n\t\t\t\t\t\tconst BufferedReader = plus.android.importClass('java.io.BufferedReader')\n\t\t\t\t\t\tconst StringBuilder = plus.android.importClass('java.lang.StringBuilder')\n\t\t\t\t\t\t\n\t\t\t\t\t\tconst fis = new FileInputStream(fileEntry.nativeFile)\n\t\t\t\t\t\tconst isr = new InputStreamReader(fis, 'UTF-8')\n\t\t\t\t\t\tconst br = new BufferedReader(isr)\n\t\t\t\t\t\t\n\t\t\t\t\t\tconst sb = new StringBuilder()\n\t\t\t\t\t\tlet line\n\t\t\t\t\t\twhile ((line = br.readLine()) !== null) {\n\t\t\t\t\t\t\tsb.append(line).append('\\n')\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tbr.close()\n\t\t\t\t\t\tisr.close()\n\t\t\t\t\t\tfis.close()\n\t\t\t\t\t\t\n\t\t\t\t\t\tconst content = sb.toString()\n\t\t\t\t\t\tconsole.log('文件内容读取完成，长度:', content.length)\n\t\t\t\t\t\tthis.parseCsvData(content)\n\t\t\t\t\t\t\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\tconsole.error('读取公共目录文件失败:', error)\n\t\t\t\t\t\tuni.showToast({\n\t\t\t\t\t\t\ttitle: '读取文件失败',\n\t\t\t\t\t\t\ticon: 'none'\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t// 使用原有的方法读取其他来源的文件\n\t\t\t\t\tfileEntry.file((file) => {\n\t\t\t\t\t\tconst reader = new plus.io.FileReader()\n\t\t\t\t\t\treader.onload = (e) => {\n\t\t\t\t\t\t\tthis.parseCsvData(e.target.result)\n\t\t\t\t\t\t}\n\t\t\t\t\t\treader.onerror = (err) => {\n\t\t\t\t\t\t\tconsole.error('读取文件失败:', err)\n\t\t\t\t\t\t\tuni.showToast({\n\t\t\t\t\t\t\t\ttitle: '读取文件失败',\n\t\t\t\t\t\t\t\ticon: 'none'\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t}\n\t\t\t\t\t\treader.readAsText(file, 'UTF-8')\n\t\t\t\t\t}, (err) => {\n\t\t\t\t\t\tconsole.error('获取文件内容失败:', err)\n\t\t\t\t\t\tuni.showToast({\n\t\t\t\t\t\t\ttitle: '获取文件内容失败',\n\t\t\t\t\t\t\ticon: 'none'\n\t\t\t\t\t\t})\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t},\n\t\t\t\n\t\t\tfallbackImport() {\n\t\t\t\tuni.showModal({\n\t\t\t\t\ttitle: '导入提示',\n\t\t\t\t\tcontent: '当前环境不支持文件选择功能，请使用\"手动输入数据\"方式导入。',\n\t\t\t\t\tshowCancel: true,\n\t\t\t\t\tconfirmText: '手动输入',\n\t\t\t\t\tcancelText: '取消',\n\t\t\t\t\tsuccess: (res) => {\n\t\t\t\t\t\tif (res.confirm) {\n\t\t\t\t\t\t\tthis.showCsvImportDialog()\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t},\n\t\t\t\n\t\t\tparseCSVLine(line) {\n\t\t\t\tconsole.log('开始解析CSV行:', line)\n\t\t\t\t// 防止空行或undefined\n\t\t\t\tif (!line || typeof line !== 'string') {\n\t\t\t\t\tconsole.log('CSV行无效，返回空数组')\n\t\t\t\t\treturn []\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tconst result = []\n\t\t\t\tlet current = ''\n\t\t\t\tlet inQuotes = false\n\t\t\t\tlet i = 0\n\t\t\t\t\n\t\t\t\tconsole.log('开始逐字符解析，总长度:', line.length)\n\t\t\t\twhile (i < line.length) {\n\t\t\t\t\tconst char = line[i]\n\t\t\t\t\t\n\t\t\t\t\tif (char === '\"') {\n\t\t\t\t\t\tinQuotes = !inQuotes\n\t\t\t\t\t\tconsole.log(`字符${i}: 引号，inQuotes=${inQuotes}`)\n\t\t\t\t\t} else if (char === ',' && !inQuotes) {\n\t\t\t\t\t\tresult.push(current.trim())\n\t\t\t\t\t\tconsole.log(`字符${i}: 逗号(非引号内)，添加字段: \"${current.trim()}\"`)\n\t\t\t\t\t\tcurrent = ''\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcurrent += char\n\t\t\t\t\t}\n\t\t\t\t\ti++\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tresult.push(current.trim())\n\t\t\t\tconsole.log(`解析完成，最后添加字段: \"${current.trim()}\"`)\n\t\t\t\t\n\t\t\t\t// 移除引号\n\t\t\t\tconst finalResult = result.map(field => field.replace(/^\"|\"$/g, ''))\n\t\t\t\tconsole.log('移除引号后的最终结果:', finalResult)\n\t\t\t\treturn finalResult\n\t\t\t},\n\t\t\t\n\t\t\tfindOrCreateCategory(categoryName, type, categoryIcon = '') {\n\t\t\t\tconsole.log('查找或创建分类:', categoryName, '类型:', type, '图标:', categoryIcon)\n\t\t\t\t\n\t\t\t\t// 从存储中加载分类数据\n\t\t\t\tlet expenseCategories = uni.getStorageSync('expenseCategories') || [...this.defaultExpenseCategories]\n\t\t\t\tlet incomeCategories = uni.getStorageSync('incomeCategories') || [...this.defaultIncomeCategories]\n\t\t\t\tconst categories = type === 'expense' ? expenseCategories : incomeCategories\n\t\t\t\t\n\t\t\t\tconsole.log('可用分类列表:', categories.map(cat => cat.name))\n\t\t\t\t\n\t\t\t\t// 精确匹配现有分类\n\t\t\t\tlet category = categories.find(cat => cat.name === categoryName)\n\t\t\t\tif (category) {\n\t\t\t\t\tconsole.log('找到现有分类:', category)\n\t\t\t\t\treturn category\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// 如果没找到，创建新分类\n\t\t\t\tconsole.log('未找到分类，创建新分类:', categoryName)\n\t\t\t\t\n\t\t\t\t// 确定分类图标\n\t\t\t\tlet finalIcon = categoryIcon\n\t\t\t\tif (!finalIcon || finalIcon.trim() === '') {\n\t\t\t\t\t// 使用默认图标\n\t\t\t\t\tfinalIcon = type === 'expense' ? '📦' : '💎'\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// 生成新的分类ID\n\t\t\t\tconst allCategories = [...expenseCategories, ...incomeCategories]\n\t\t\t\tconst maxId = allCategories.length > 0 ? Math.max(...allCategories.map(cat => cat.id || 0)) : 0\n\t\t\t\tconst newId = maxId + 1\n\t\t\t\t\n\t\t\t\t// 创建新分类对象\n\t\t\t\tconst newCategory = {\n\t\t\t\t\tid: newId,\n\t\t\t\t\tname: categoryName,\n\t\t\t\t\ticon: finalIcon,\n\t\t\t\t\tisNewCategory: true // 临时标记，用于识别新创建的分类\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tconsole.log('创建的新分类:', newCategory)\n\t\t\t\t\n\t\t\t\t// 添加到对应的分类列表\n\t\t\t\tif (type === 'expense') {\n\t\t\t\t\texpenseCategories.push(newCategory)\n\t\t\t\t\tuni.setStorageSync('expenseCategories', expenseCategories)\n\t\t\t\t} else {\n\t\t\t\t\tincomeCategories.push(newCategory)\n\t\t\t\t\tuni.setStorageSync('incomeCategories', incomeCategories)\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tconsole.log('新分类已保存到存储')\n\t\t\t\treturn newCategory\n\t\t\t},\n\t\t\t\n\t\t\tcreateSampleData() {\n\t\t\t\tconsole.log('=== 开始创建示例数据 ===')\n\t\t\t\tconst existingRecords = uni.getStorageSync('records') || []\n\t\t\t\tconsole.log('当前已有记录数:', existingRecords.length)\n\t\t\t\t\n\t\t\t\t// 创建一些示例数据\n\t\t\t\tconst sampleData = [\n\t\t\t\t\t{\n\t\t\t\t\t\tid: Date.now().toString() + '_sample1',\n\t\t\t\t\t\ttype: 'expense',\n\t\t\t\t\t\tamount: '35.80',\n\t\t\t\t\t\tcategoryId: 1,\n\t\t\t\t\t\tcategoryName: '餐饮',\n\t\t\t\t\t\tcategoryIcon: '🍽️',\n\t\t\t\t\t\tnote: '午餐 - 示例数据',\n\t\t\t\t\t\ttime: new Date(Date.now() - 1 * 24 * 60 * 60 * 1000).toISOString()\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tid: Date.now().toString() + '_sample2',\n\t\t\t\t\t\ttype: 'expense',\n\t\t\t\t\t\tamount: '12.00',\n\t\t\t\t\t\tcategoryId: 2,\n\t\t\t\t\t\tcategoryName: '交通',\n\t\t\t\t\t\tcategoryIcon: '🚗',\n\t\t\t\t\t\tnote: '地铁费 - 示例数据',\n\t\t\t\t\t\ttime: new Date(Date.now() - 2 * 24 * 60 * 60 * 1000).toISOString()\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tid: Date.now().toString() + '_sample3',\n\t\t\t\t\t\ttype: 'expense',\n\t\t\t\t\t\tamount: '199.00',\n\t\t\t\t\t\tcategoryId: 3,\n\t\t\t\t\t\tcategoryName: '购物',\n\t\t\t\t\t\tcategoryIcon: '🛍️',\n\t\t\t\t\t\tnote: '买衣服 - 示例数据',\n\t\t\t\t\t\ttime: new Date(Date.now() - 3 * 24 * 60 * 60 * 1000).toISOString()\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tid: Date.now().toString() + '_sample4',\n\t\t\t\t\t\ttype: 'income',\n\t\t\t\t\t\tamount: '3000.00',\n\t\t\t\t\t\tcategoryId: 11,\n\t\t\t\t\t\tcategoryName: '工资',\n\t\t\t\t\t\tcategoryIcon: '💰',\n\t\t\t\t\t\tnote: '部分工资 - 示例数据',\n\t\t\t\t\t\ttime: new Date(Date.now() - 5 * 24 * 60 * 60 * 1000).toISOString()\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tid: Date.now().toString() + '_sample5',\n\t\t\t\t\t\ttype: 'expense',\n\t\t\t\t\t\tamount: '88.50',\n\t\t\t\t\t\tcategoryId: 4,\n\t\t\t\t\t\tcategoryName: '娱乐',\n\t\t\t\t\t\tcategoryIcon: '🎬',\n\t\t\t\t\t\tnote: '电影票 - 示例数据',\n\t\t\t\t\t\ttime: new Date(Date.now() - 7 * 24 * 60 * 60 * 1000).toISOString()\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tid: Date.now().toString() + '_sample6',\n\t\t\t\t\t\ttype: 'income',\n\t\t\t\t\t\tamount: '200.00',\n\t\t\t\t\t\tcategoryId: 15,\n\t\t\t\t\t\tcategoryName: '红包',\n\t\t\t\t\t\tcategoryIcon: '🧧',\n\t\t\t\t\t\tnote: '生日红包 - 示例数据',\n\t\t\t\t\t\ttime: new Date(Date.now() - 10 * 24 * 60 * 60 * 1000).toISOString()\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t\t\n\t\t\t\tconsole.log('创建的示例数据:', sampleData)\n\t\t\t\t\n\t\t\t\t// 合并数据\n\t\t\t\tconst allRecords = [...existingRecords, ...sampleData]\n\t\t\t\tconsole.log('合并后总记录数:', allRecords.length)\n\t\t\t\t\n\t\t\t\tuni.setStorageSync('records', allRecords)\n\t\t\t\tconsole.log('示例数据保存成功')\n\t\t\t\t\n\t\t\t\tuni.showToast({\n\t\t\t\t\ttitle: `成功导入${sampleData.length}条示例数据`,\n\t\t\t\t\ticon: 'success',\n\t\t\t\t\tduration: 2000\n\t\t\t\t})\n\t\t\t\tconsole.log('=== 示例数据创建流程完成 ===')\n\t\t\t},\n\t\t\t\n\t\t\texportData() {\n\t\t\t\tconst records = uni.getStorageSync('records') || []\n\t\t\t\tif (records.length === 0) {\n\t\t\t\t\tuni.showToast({\n\t\t\t\t\t\ttitle: '暂无数据可导出',\n\t\t\t\t\t\ticon: 'none'\n\t\t\t\t\t})\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// 获取分类数据\n\t\t\t\tconst expenseCategories = uni.getStorageSync('expenseCategories') || this.defaultExpenseCategories\n\t\t\t\tconst incomeCategories = uni.getStorageSync('incomeCategories') || this.defaultIncomeCategories\n\t\t\t\t\n\t\t\t\t// 格式化数据为CSV格式，包含分类图标信息\n\t\t\t\tlet csvContent = '时间,类型,分类名,分类图标,金额,备注\\n'\n\t\t\t\trecords.forEach(record => {\n\t\t\t\t\tconst time = new Date(record.time).toLocaleString('zh-CN')\n\t\t\t\t\tconst type = record.type === 'expense' ? '支出' : '收入'\n\t\t\t\t\tconst categoryName = record.categoryName\n\t\t\t\t\tconst categoryIcon = record.categoryIcon || '📦' // 默认图标\n\t\t\t\t\tconst amount = record.amount\n\t\t\t\t\tconst note = record.note || ''\n\t\t\t\t\tcsvContent += `\"${time}\",\"${type}\",\"${categoryName}\",\"${categoryIcon}\",\"${amount}\",\"${note}\"\\n`\n\t\t\t\t})\n\t\t\t\t\n\t\t\t\t// 检查平台支持\n\t\t\t\t// #ifdef APP-PLUS\n\t\t\t\tif (typeof plus === 'undefined') {\n\t\t\t\t\tuni.showToast({\n\t\t\t\t\t\ttitle: '当前环境不支持文件系统访问',\n\t\t\t\t\t\ticon: 'none'\n\t\t\t\t\t})\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// 显示选择导出方式\n\t\t\t\tuni.showActionSheet({\n\t\t\t\t\titemList: ['保存为文件', '复制到剪贴板'],\n\t\t\t\t\tsuccess: (res) => {\n\t\t\t\t\t\tconst now = new Date()\n\t\t\t\t\t\tconst dateStr = now.toISOString().slice(0, 10).replace(/-/g, '')\n\t\t\t\t\t\tconst fileName = `记账数据_${dateStr}.csv`\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (res.tapIndex === 0) {\n\t\t\t\t\t\t\tthis.showFileSaveOptions(csvContent, records.length, fileName)\n\t\t\t\t\t\t} else if (res.tapIndex === 1) {\n\t\t\t\t\t\t\tthis.exportToClipboard(csvContent, records.length)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t// #endif\n\t\t\t\t\n\t\t\t\t// #ifndef APP-PLUS\n\t\t\t\tuni.showActionSheet({\n\t\t\t\t\titemList: ['复制到剪切板'],\n\t\t\t\t\tsuccess: (res) => {\n\t\t\t\t\t\tif (res.tapIndex === 0) {\n\t\t\t\t\t\t\tthis.exportToClipboard(csvContent, records.length)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t// #endif\n\t\t\t},\n\t\t\t\n\t\t\t// 显示文件保存选项\n\t\t\tshowFileSaveOptions(csvContent, recordCount, fileName) {\n\t\t\t\tuni.showActionSheet({\n\t\t\t\t\titemList: ['保存到公共存储', '保存到下载目录', '保存到应用文档', '自定义路径'],\n\t\t\t\t\tsuccess: (res) => {\n\t\t\t\t\t\tif (res.tapIndex === 0) {\n\t\t\t\t\t\t\tthis.saveToDCIM(csvContent, recordCount, fileName)\n\t\t\t\t\t\t} else if (res.tapIndex === 1) {\n\t\t\t\t\t\t\tthis.saveToDownloads(csvContent, recordCount, fileName)\n\t\t\t\t\t\t} else if (res.tapIndex === 2) {\n\t\t\t\t\t\t\tthis.saveToPublicDocuments(csvContent, recordCount, fileName)\n\t\t\t\t\t\t} else if (res.tapIndex === 3) {\n\t\t\t\t\t\t\tthis.saveToCustomLocation(csvContent, recordCount, fileName)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t},\n\t\t\t\n\t\t\tsaveToFile(csvContent, recordCount) {\n\t\t\t\t// 生成文件名（包含当前日期）\n\t\t\t\tconst now = new Date()\n\t\t\t\tconst dateStr = now.toISOString().slice(0, 10).replace(/-/g, '')\n\t\t\t\tconst fileName = `记账数据_${dateStr}.csv`\n\t\t\t\t\n\t\t\t\t// #ifdef H5\n\t\t\t\t// H5平台直接下载\n\t\t\t\tthis.downloadFileH5(csvContent, fileName, recordCount)\n\t\t\t\t// #endif\n\t\t\t\t\n\t\t\t\t// #ifdef APP-PLUS\n\t\t\t\t// App平台选择保存位置\n\t\t\t\tthis.selectSaveLocationApp(csvContent, recordCount, fileName)\n\t\t\t\t// #endif\n\t\t\t\t\n\t\t\t\t// #ifdef MP-WEIXIN\n\t\t\t\t// 微信小程序保存到相册或分享\n\t\t\t\tthis.saveFileWx(csvContent, recordCount, fileName)\n\t\t\t\t// #endif\n\t\t\t\t\n\t\t\t\t// #ifdef MP && !MP-WEIXIN\n\t\t\t\t// 其他小程序平台\n\t\t\t\tthis.fallbackExport(csvContent, recordCount)\n\t\t\t\t// #endif\n\t\t\t\t\n\t\t\t\t// #ifndef H5 || APP-PLUS || MP\n\t\t\t\t// 其他平台降级到复制\n\t\t\t\tthis.fallbackExport(csvContent, recordCount)\n\t\t\t\t// #endif\n\t\t\t},\n\t\t\t\n\t\t\tselectSaveLocationApp(csvContent, recordCount, fileName) {\n\t\t\t\t// App平台选择保存位置\n\t\t\t\tif (typeof plus !== 'undefined') {\n\t\t\t\t\tuni.showActionSheet({\n\t\t\t\t\t\titemList: ['保存到下载目录', '保存到公共存储', '保存到应用文档', '选择自定义目录'],\n\t\t\t\t\t\tsuccess: (res) => {\n\t\t\t\t\t\t\tif (res.tapIndex === 0) {\n\t\t\t\t\t\t\t\tthis.saveToDownloads(csvContent, recordCount, fileName)\n\t\t\t\t\t\t\t} else if (res.tapIndex === 1) {\n\t\t\t\t\t\t\t\tthis.saveToDCIM(csvContent, recordCount, fileName)\n\t\t\t\t\t\t\t} else if (res.tapIndex === 2) {\n\t\t\t\t\t\t\t\tthis.saveToPublicDocuments(csvContent, recordCount, fileName)\n\t\t\t\t\t\t\t} else if (res.tapIndex === 3) {\n\t\t\t\t\t\t\t\tthis.saveToCustomLocation(csvContent, recordCount, fileName)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t} else {\n\t\t\t\t\tthis.fallbackExport(csvContent, recordCount)\n\t\t\t\t}\n\t\t\t},\n\t\t\t\n\t\t\tsaveToDownloads(csvContent, recordCount, fileName) {\n\t\t\t\tconsole.log('=== 开始保存到下载目录 ===')\n\t\t\t\tconsole.log('文件名:', fileName)\n\t\t\t\tconsole.log('记录数量:', recordCount)\n\t\t\t\tconsole.log('CSV内容长度:', csvContent.length)\n\t\t\t\tconsole.log('CSV内容预览:', csvContent.substring(0, 200))\n\t\t\t\t\n\t\t\t\tplus.io.requestFileSystem(plus.io.PUBLIC_DOWNLOADS, (fs) => {\n\t\t\t\t\tconsole.log('获取下载目录文件系统成功')\n\t\t\t\t\tfs.root.getFile(fileName, {create: true}, (fileEntry) => {\n\t\t\t\t\t\tconsole.log('创建文件成功:', fileEntry.fullPath)\n\t\t\t\t\t\tfileEntry.createWriter((writer) => {\n\t\t\t\t\t\t\tconsole.log('创建写入器成功')\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\twriter.onwrite = (e) => {\n\t\t\t\t\t\t\t\tconsole.log('文件写入完成事件:', e)\n\t\t\t\t\t\t\t\tconsole.log('写入器位置:', writer.position)\n\t\t\t\t\t\t\t\tconsole.log('写入器长度:', writer.length)\n\t\t\t\t\t\t\t\tuni.showModal({\n\t\t\t\t\t\t\t\t\ttitle: '导出完成',\n\t\t\t\t\t\t\t\t\tcontent: `文件已成功保存！\\n\\n位置：下载目录/${fileName}\\n记录数：${recordCount} 条\\n文件大小：${writer.length} 字节\\n\\n您可以通过文件管理器在下载文件夹中找到该文件。`,\n\t\t\t\t\t\t\t\t\tshowCancel: false,\n\t\t\t\t\t\t\t\t\tconfirmText: '我知道了'\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\twriter.onerror = (err) => {\n\t\t\t\t\t\t\t\tconsole.error('写入失败:', err)\n\t\t\t\t\t\t\t\tuni.showToast({\n\t\t\t\t\t\t\t\t\ttitle: '文件写入失败',\n\t\t\t\t\t\t\t\t\ticon: 'error'\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\twriter.onwriteend = () => {\n\t\t\t\t\t\t\t\tconsole.log('写入结束，最终文件大小:', writer.length)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t// 创建带BOM的UTF-8 CSV内容\n\t\t\t\t\t\t\tconst bom = '\\ufeff'\n\t\t\t\t\t\t\tconst fullContent = bom + csvContent\n\t\t\t\t\t\t\tconsole.log('完整内容长度(含BOM):', fullContent.length)\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t// 写入数据\n\t\t\t\t\t\t\tconsole.log('开始写入数据...')\n\t\t\t\t\t\t\twriter.write(fullContent)\n\t\t\t\t\t\t}, (err) => {\n\t\t\t\t\t\t\tconsole.error('创建写入器失败:', err)\n\t\t\t\t\t\t\tuni.showToast({\n\t\t\t\t\t\t\t\ttitle: '创建写入器失败',\n\t\t\t\t\t\t\t\ticon: 'error'\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t})\n\t\t\t\t\t}, (err) => {\n\t\t\t\t\t\tconsole.error('创建文件失败:', err)\n\t\t\t\t\t\tuni.showToast({\n\t\t\t\t\t\t\ttitle: '创建文件失败',\n\t\t\t\t\t\t\ticon: 'error'\n\t\t\t\t\t\t})\n\t\t\t\t\t})\n\t\t\t\t}, (err) => {\n\t\t\t\t\tconsole.error('获取下载目录失败:', err)\n\t\t\t\t\tuni.showToast({\n\t\t\t\t\t\ttitle: '获取下载目录失败',\n\t\t\t\t\t\ticon: 'error'\n\t\t\t\t\t})\n\t\t\t\t})\n\t\t\t},\n\t\t\t\n\t\t\tsaveToDocuments(csvContent, recordCount, fileName) {\n\t\t\t\tconsole.log('=== 开始保存到文档目录 ===')\n\t\t\t\tconsole.log('文件名:', fileName)\n\t\t\t\tconsole.log('记录数量:', recordCount)\n\t\t\t\tconsole.log('CSV内容长度:', csvContent.length)\n\t\t\t\tconsole.log('CSV内容预览:', csvContent.substring(0, 200))\n\t\t\t\t\n\t\t\t\tplus.io.requestFileSystem(plus.io.PRIVATE_DOC, (fs) => {\n\t\t\t\t\tconsole.log('获取文档目录文件系统成功')\n\t\t\t\t\tfs.root.getFile(fileName, {create: true}, (fileEntry) => {\n\t\t\t\t\t\tconsole.log('创建文件成功:', fileEntry.fullPath)\n\t\t\t\t\t\tfileEntry.createWriter((writer) => {\n\t\t\t\t\t\t\tconsole.log('创建写入器成功')\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\twriter.onwrite = (e) => {\n\t\t\t\t\t\t\t\tconsole.log('文件写入完成事件:', e)\n\t\t\t\t\t\t\t\tconsole.log('写入器位置:', writer.position)\n\t\t\t\t\t\t\t\tconsole.log('写入器长度:', writer.length)\n\t\t\t\t\t\t\t\tuni.showModal({\n\t\t\t\t\t\t\t\t\ttitle: '导出成功',\n\t\t\t\t\t\t\t\t\tcontent: `文件已保存到应用文档目录：\\n${fileName}\\n\\n共${recordCount}条记录\\n文件大小：${writer.length}字节`,\n\t\t\t\t\t\t\t\t\tshowCancel: false,\n\t\t\t\t\t\t\t\t\tconfirmText: '知道了'\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\twriter.onerror = (err) => {\n\t\t\t\t\t\t\t\tconsole.error('写入失败:', err)\n\t\t\t\t\t\t\t\tuni.showToast({\n\t\t\t\t\t\t\t\t\ttitle: '文件写入失败',\n\t\t\t\t\t\t\t\t\ticon: 'error'\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\twriter.onwriteend = () => {\n\t\t\t\t\t\t\t\tconsole.log('写入结束，最终文件大小:', writer.length)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t// 创建带BOM的UTF-8 CSV内容\n\t\t\t\t\t\t\tconst bom = '\\ufeff'\n\t\t\t\t\t\t\tconst fullContent = bom + csvContent\n\t\t\t\t\t\t\tconsole.log('完整内容长度(含BOM):', fullContent.length)\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t// 写入数据\n\t\t\t\t\t\t\tconsole.log('开始写入数据...')\n\t\t\t\t\t\t\twriter.write(fullContent)\n\t\t\t\t\t\t}, (err) => {\n\t\t\t\t\t\t\tconsole.error('创建写入器失败:', err)\n\t\t\t\t\t\t\tuni.showToast({\n\t\t\t\t\t\t\t\ttitle: '创建写入器失败',\n\t\t\t\t\t\t\t\ticon: 'error'\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t})\n\t\t\t\t\t}, (err) => {\n\t\t\t\t\t\tconsole.error('创建文件失败:', err)\n\t\t\t\t\t\tuni.showToast({\n\t\t\t\t\t\t\ttitle: '创建文件失败',\n\t\t\t\t\t\t\ticon: 'error'\n\t\t\t\t\t\t})\n\t\t\t\t\t})\n\t\t\t\t}, (err) => {\n\t\t\t\t\tconsole.error('获取文档目录失败:', err)\n\t\t\t\t\tuni.showToast({\n\t\t\t\t\t\ttitle: '获取文档目录失败',\n\t\t\t\t\t\ticon: 'error'\n\t\t\t\t\t})\n\t\t\t\t})\n\t\t\t},\n\t\t\t\n\t\t\tsaveToCustomLocation(csvContent, recordCount, fileName) {\n\t\t\t\tuni.showModal({\n\t\t\t\t\ttitle: '自定义保存路径',\n\t\t\t\t\tcontent: '请输入保存路径（不包含文件名）：',\n\t\t\t\t\teditable: true,\n\t\t\t\t\tplaceholderText: '/storage/emulated/0/Documents',\n\t\t\t\t\tsuccess: (res) => {\n\t\t\t\t\t\tif (res.confirm && res.content && res.content.trim()) {\n\t\t\t\t\t\t\tconst customPath = res.content.trim()\n\t\t\t\t\t\t\tthis.saveToCustomPath(csvContent, recordCount, fileName, customPath)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t},\n\t\t\t\n\t\t\tsaveToCustomPath(csvContent, recordCount, fileName, customPath) {\n\t\t\t\tconsole.log('=== 开始保存到自定义路径 ===')\n\t\t\t\tconsole.log('自定义路径:', customPath)\n\t\t\t\tconsole.log('文件名:', fileName)\n\t\t\t\tconsole.log('记录数量:', recordCount)\n\t\t\t\tconsole.log('CSV内容长度:', csvContent.length)\n\t\t\t\tconsole.log('CSV内容预览:', csvContent.substring(0, 200))\n\t\t\t\t\n\t\t\t\tplus.io.resolveLocalFileSystemURL(customPath, (dirEntry) => {\n\t\t\t\t\tconsole.log('解析自定义路径成功:', dirEntry.fullPath)\n\t\t\t\t\tdirEntry.getFile(fileName, {create: true}, (fileEntry) => {\n\t\t\t\t\t\tconsole.log('创建文件成功:', fileEntry.fullPath)\n\t\t\t\t\t\tfileEntry.createWriter((writer) => {\n\t\t\t\t\t\t\tconsole.log('创建写入器成功')\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\twriter.onwrite = (e) => {\n\t\t\t\t\t\t\t\tconsole.log('文件写入完成事件:', e)\n\t\t\t\t\t\t\t\tconsole.log('写入器位置:', writer.position)\n\t\t\t\t\t\t\t\tconsole.log('写入器长度:', writer.length)\n\t\t\t\t\t\t\t\tuni.showModal({\n\t\t\t\t\t\t\t\t\ttitle: '导出成功',\n\t\t\t\t\t\t\t\t\tcontent: `文件已保存到：\\n${customPath}/${fileName}\\n\\n共${recordCount}条记录\\n文件大小：${writer.length}字节`,\n\t\t\t\t\t\t\t\t\tshowCancel: false,\n\t\t\t\t\t\t\t\t\tconfirmText: '知道了'\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\twriter.onerror = (err) => {\n\t\t\t\t\t\t\t\tconsole.error('写入失败:', err)\n\t\t\t\t\t\t\t\tuni.showToast({\n\t\t\t\t\t\t\t\t\ttitle: '文件写入失败',\n\t\t\t\t\t\t\t\t\ticon: 'error'\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\twriter.onwriteend = () => {\n\t\t\t\t\t\t\t\tconsole.log('写入结束，最终文件大小:', writer.length)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t// 创建带BOM的UTF-8 CSV内容\n\t\t\t\t\t\t\tconst bom = '\\ufeff'\n\t\t\t\t\t\t\tconst fullContent = bom + csvContent\n\t\t\t\t\t\t\tconsole.log('完整内容长度(含BOM):', fullContent.length)\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t// 写入数据\n\t\t\t\t\t\t\tconsole.log('开始写入数据...')\n\t\t\t\t\t\t\twriter.write(fullContent)\n\t\t\t\t\t\t}, (err) => {\n\t\t\t\t\t\t\tconsole.error('创建写入器失败:', err)\n\t\t\t\t\t\t\tuni.showToast({\n\t\t\t\t\t\t\t\ttitle: '创建写入器失败',\n\t\t\t\t\t\t\t\ticon: 'error'\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t})\n\t\t\t\t\t}, (err) => {\n\t\t\t\t\t\tconsole.error('创建文件失败:', err)\n\t\t\t\t\t\tuni.showToast({\n\t\t\t\t\t\t\ttitle: '保存失败，请检查路径权限',\n\t\t\t\t\t\t\ticon: 'none'\n\t\t\t\t\t\t})\n\t\t\t\t\t})\n\t\t\t\t}, (err) => {\n\t\t\t\t\tconsole.error('路径不存在:', err)\n\t\t\t\t\tuni.showToast({\n\t\t\t\t\t\ttitle: '路径不存在或无权限',\n\t\t\t\t\t\ticon: 'none'\n\t\t\t\t\t})\n\t\t\t\t})\n\t\t\t},\n\t\t\t\n\t\t\tsaveFileWx(csvContent, recordCount, fileName) {\n\t\t\t\t// 微信小程序保存文件\n\t\t\t\tconst fs = wx.getFileSystemManager()\n\t\t\t\tconst filePath = `${wx.env.USER_DATA_PATH}/${fileName}`\n\t\t\t\t\n\t\t\t\tfs.writeFile({\n\t\t\t\t\tfilePath: filePath,\n\t\t\t\t\tdata: csvContent,\n\t\t\t\t\tencoding: 'utf8',\n\t\t\t\t\tsuccess: () => {\n\t\t\t\t\t\tuni.showActionSheet({\n\t\t\t\t\t\t\titemList: ['分享文件', '保存到相册', '显示路径'],\n\t\t\t\t\t\t\tsuccess: (res) => {\n\t\t\t\t\t\t\t\tif (res.tapIndex === 0) {\n\t\t\t\t\t\t\t\t\tthis.shareFileWx(filePath, fileName, recordCount)\n\t\t\t\t\t\t\t\t} else if (res.tapIndex === 1) {\n\t\t\t\t\t\t\t\t\tthis.saveToPhotosWx(csvContent, fileName, recordCount)\n\t\t\t\t\t\t\t\t} else if (res.tapIndex === 2) {\n\t\t\t\t\t\t\t\t\tuni.showModal({\n\t\t\t\t\t\t\t\t\t\ttitle: '导出成功',\n\t\t\t\t\t\t\t\t\t\tcontent: `文件已保存：\\n${filePath}\\n\\n共${recordCount}条记录`,\n\t\t\t\t\t\t\t\t\t\tshowCancel: false,\n\t\t\t\t\t\t\t\t\t\tconfirmText: '知道了'\n\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t},\n\t\t\t\t\tfail: (err) => {\n\t\t\t\t\t\tconsole.error('保存失败:', err)\n\t\t\t\t\t\tthis.fallbackExport(csvContent, recordCount)\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t},\n\t\t\t\n\t\t\tshareFileWx(filePath, fileName, recordCount) {\n\t\t\t\twx.shareFileMessage({\n\t\t\t\t\tfilePath: filePath,\n\t\t\t\t\tfileName: fileName,\n\t\t\t\t\tsuccess: () => {\n\t\t\t\t\t\tuni.showToast({\n\t\t\t\t\t\t\ttitle: '分享成功',\n\t\t\t\t\t\t\ticon: 'success'\n\t\t\t\t\t\t})\n\t\t\t\t\t},\n\t\t\t\t\tfail: (err) => {\n\t\t\t\t\t\tconsole.error('分享失败:', err)\n\t\t\t\t\t\tuni.showModal({\n\t\t\t\t\t\t\ttitle: '导出成功',\n\t\t\t\t\t\t\tcontent: `文件已保存，但分享失败\\n路径：${filePath}\\n\\n共${recordCount}条记录`,\n\t\t\t\t\t\t\tshowCancel: false,\n\t\t\t\t\t\t\tconfirmText: '知道了'\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t},\n\t\t\t\n\t\t\tsaveToPhotosWx(csvContent, fileName, recordCount) {\n\t\t\t\t// 将CSV内容转换为图片保存到相册（作为备选方案）\n\t\t\t\tuni.showModal({\n\t\t\t\t\ttitle: '提示',\n\t\t\t\t\tcontent: '小程序无法直接保存CSV文件到相册，建议使用分享功能或复制到剪贴板',\n\t\t\t\t\tshowCancel: true,\n\t\t\t\t\tconfirmText: '复制内容',\n\t\t\t\t\tsuccess: (res) => {\n\t\t\t\t\t\tif (res.confirm) {\n\t\t\t\t\t\t\tthis.fallbackExport(csvContent, recordCount)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t},\n\t\t\t\n\t\t\tdownloadDataFile(csvContent, recordCount) {\n\t\t\t\t// 生成文件名（包含当前日期）\n\t\t\t\tconst now = new Date()\n\t\t\t\tconst dateStr = now.toISOString().slice(0, 10).replace(/-/g, '')\n\t\t\t\tconst fileName = `记账数据_${dateStr}.csv`\n\t\t\t\t\n\t\t\t\t// #ifdef H5\n\t\t\t\t// H5平台使用blob下载\n\t\t\t\tthis.downloadFileH5(csvContent, fileName, recordCount)\n\t\t\t\t// #endif\n\t\t\t\t\n\t\t\t\t// #ifdef APP-PLUS\n\t\t\t\t// App平台使用plus.io\n\t\t\t\tthis.saveDataToFileApp(csvContent, recordCount, fileName)\n\t\t\t\t// #endif\n\t\t\t\t\n\t\t\t\t// #ifdef MP\n\t\t\t\t// 小程序平台处理\n\t\t\t\tthis.saveDataToFileMp(csvContent, recordCount, fileName)\n\t\t\t\t// #endif\n\t\t\t\t\n\t\t\t\t// #ifndef H5 || APP-PLUS || MP\n\t\t\t\t// 其他平台降级到复制\n\t\t\t\tthis.fallbackExport(csvContent, recordCount)\n\t\t\t\t// #endif\n\t\t\t},\n\t\t\t\n\t\t\tdownloadFileH5(csvContent, fileName, recordCount) {\n\t\t\t\ttry {\n\t\t\t\t\t// 创建Blob对象\n\t\t\t\t\tconst blob = new Blob(['\\ufeff' + csvContent], { \n\t\t\t\t\t\ttype: 'text/csv;charset=utf-8' \n\t\t\t\t\t})\n\t\t\t\t\t\n\t\t\t\t\t// 创建下载链接\n\t\t\t\t\tconst url = window.URL.createObjectURL(blob)\n\t\t\t\t\tconst link = document.createElement('a')\n\t\t\t\t\tlink.href = url\n\t\t\t\t\tlink.download = fileName\n\t\t\t\t\tlink.style.display = 'none'\n\t\t\t\t\t\n\t\t\t\t\t// 触发下载\n\t\t\t\t\tdocument.body.appendChild(link)\n\t\t\t\t\tlink.click()\n\t\t\t\t\t\n\t\t\t\t\t// 清理\n\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\tdocument.body.removeChild(link)\n\t\t\t\t\t\twindow.URL.revokeObjectURL(url)\n\t\t\t\t\t}, 100)\n\t\t\t\t\t\n\t\t\t\t\tuni.showToast({\n\t\t\t\t\t\ttitle: `成功导出${recordCount}条记录`,\n\t\t\t\t\t\ticon: 'success'\n\t\t\t\t\t})\n\t\t\t\t} catch (error) {\n\t\t\t\t\tconsole.error('下载失败:', error)\n\t\t\t\t\t// 降级到复制\n\t\t\t\t\tuni.setClipboardData({\n\t\t\t\t\t\tdata: csvContent,\n\t\t\t\t\t\tsuccess: () => {\n\t\t\t\t\t\t\tuni.showToast({\n\t\t\t\t\t\t\t\ttitle: '下载失败，已复制到剪贴板',\n\t\t\t\t\t\t\t\ticon: 'success'\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t},\n\t\t\t\n\t\t\tsaveDataToFile(csvContent, recordCount, fileName) {\n\t\t\t\ttry {\n\t\t\t\t\t// 获取文件系统管理器\n\t\t\t\t\tconst fs = uni.getFileSystemManager()\n\t\t\t\t\t\n\t\t\t\t\t// 写入临时文件\n\t\t\t\t\tconst tempPath = `${uni.env.USER_DATA_PATH}/${fileName}`\n\t\t\t\t\t\n\t\t\t\t\tfs.writeFileSync(tempPath, csvContent, 'utf8')\n\t\t\t\t\t\n\t\t\t\t\t// 保存成功后的操作选择\n\t\t\t\t\tuni.showActionSheet({\n\t\t\t\t\t\titemList: ['分享文件', '显示文件位置'],\n\t\t\t\t\t\tsuccess: (res) => {\n\t\t\t\t\t\t\tif (res.tapIndex === 0) {\n\t\t\t\t\t\t\t\t// 分享文件\n\t\t\t\t\t\t\t\tthis.shareFile(tempPath, fileName, recordCount)\n\t\t\t\t\t\t\t} else if (res.tapIndex === 1) {\n\t\t\t\t\t\t\t\t// 显示文件位置\n\t\t\t\t\t\t\t\tuni.showModal({\n\t\t\t\t\t\t\t\t\ttitle: '导出成功',\n\t\t\t\t\t\t\t\t\tcontent: `文件已保存至：\\n${tempPath}\\n\\n共${recordCount}条记录`,\n\t\t\t\t\t\t\t\t\tshowCancel: false,\n\t\t\t\t\t\t\t\t\tconfirmText: '知道了'\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t} catch (error) {\n\t\t\t\t\tconsole.error('文件写入失败:', error)\n\t\t\t\t\t// 降级到复制\n\t\t\t\t\tuni.setClipboardData({\n\t\t\t\t\t\tdata: csvContent,\n\t\t\t\t\t\tsuccess: () => {\n\t\t\t\t\t\t\tuni.showToast({\n\t\t\t\t\t\t\t\ttitle: '文件保存失败，已复制到剪贴板',\n\t\t\t\t\t\t\t\ticon: 'success'\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t},\n\t\t\t\n\t\t\tsaveDataToFileApp(csvContent, recordCount, fileName) {\n\t\t\t\t// App平台使用plus.io\n\t\t\t\tif (typeof plus !== 'undefined') {\n\t\t\t\t\tplus.io.requestFileSystem(plus.io.PUBLIC_DOWNLOADS, (fs) => {\n\t\t\t\t\t\tfs.root.getFile(fileName, {create: true}, (fileEntry) => {\n\t\t\t\t\t\t\tfileEntry.createWriter((writer) => {\n\t\t\t\t\t\t\t\twriter.onwrite = () => {\n\t\t\t\t\t\t\t\t\tuni.showModal({\n\t\t\t\t\t\t\t\t\t\ttitle: '导出成功',\n\t\t\t\t\t\t\t\t\t\tcontent: `文件已保存到下载目录：\\n${fileName}\\n\\n共${recordCount}条记录`,\n\t\t\t\t\t\t\t\t\t\tshowCancel: false,\n\t\t\t\t\t\t\t\t\t\tconfirmText: '知道了'\n\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\twriter.onerror = (err) => {\n\t\t\t\t\t\t\t\t\tconsole.error('写入失败:', err)\n\t\t\t\t\t\t\t\t\tthis.fallbackExport(csvContent, recordCount)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\twriter.write(new Blob(['\\ufeff' + csvContent], {type: 'text/csv'}))\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t}, (err) => {\n\t\t\t\t\t\t\tconsole.error('创建文件失败:', err)\n\t\t\t\t\t\t\tthis.fallbackExport(csvContent, recordCount)\n\t\t\t\t\t\t})\n\t\t\t\t\t}, (err) => {\n\t\t\t\t\t\tconsole.error('获取文件系统失败:', err)\n\t\t\t\t\t\tthis.fallbackExport(csvContent, recordCount)\n\t\t\t\t\t})\n\t\t\t\t} else {\n\t\t\t\t\tthis.fallbackExport(csvContent, recordCount)\n\t\t\t\t}\n\t\t\t},\n\t\t\t\n\t\t\tsaveDataToFileMp(csvContent, recordCount, fileName) {\n\t\t\t\t// 小程序平台只能复制到剪贴板\n\t\t\t\tthis.fallbackExport(csvContent, recordCount)\n\t\t\t},\n\t\t\t\n\t\t\tfallbackExport(csvContent, recordCount) {\n\t\t\t\t// 降级到复制剪贴板\n\t\t\t\tuni.setClipboardData({\n\t\t\t\t\tdata: csvContent,\n\t\t\t\t\tsuccess: () => {\n\t\t\t\t\t\tuni.showModal({\n\t\t\t\t\t\t\ttitle: '导出完成',\n\t\t\t\t\t\t\tcontent: `数据已复制到剪贴板（共 ${recordCount} 条记录）\\n\\n由于平台限制，无法直接保存文件。您可以将数据粘贴到任意文本编辑器中保存为CSV文件。`,\n\t\t\t\t\t\t\tshowCancel: false,\n\t\t\t\t\t\t\tconfirmText: '我知道了'\n\t\t\t\t\t\t})\n\t\t\t\t\t},\n\t\t\t\t\tfail: () => {\n\t\t\t\t\t\tuni.showToast({\n\t\t\t\t\t\t\ttitle: '导出失败，请重试',\n\t\t\t\t\t\t\ticon: 'none'\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t},\n\t\t\t\n\t\t\tshareFile(filePath, fileName, recordCount) {\n\t\t\t\t// 使用系统分享功能\n\t\t\t\tif (typeof plus !== 'undefined' && plus.share) {\n\t\t\t\t\t// App平台分享\n\t\t\t\t\tplus.share.sendWithSystem({\n\t\t\t\t\t\ttype: 'file',\n\t\t\t\t\t\tpath: filePath,\n\t\t\t\t\t\tsuccess: () => {\n\t\t\t\t\t\t\tuni.showToast({\n\t\t\t\t\t\t\t\ttitle: '导出成功',\n\t\t\t\t\t\t\t\ticon: 'success'\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t},\n\t\t\t\t\t\tfail: (err) => {\n\t\t\t\t\t\t\tconsole.error('分享失败:', err)\n\t\t\t\t\t\t\t// 降级到显示文件路径\n\t\t\t\t\t\t\tuni.showModal({\n\t\t\t\t\t\t\t\ttitle: '导出成功',\n\t\t\t\t\t\t\t\tcontent: `文件已保存至：\\n${filePath}\\n\\n共${recordCount}条记录`,\n\t\t\t\t\t\t\t\tshowCancel: false,\n\t\t\t\t\t\t\t\tconfirmText: '知道了'\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t} else {\n\t\t\t\t\t// 其他平台降级处理\n\t\t\t\t\tuni.showModal({\n\t\t\t\t\t\ttitle: '导出成功',\n\t\t\t\t\t\tcontent: `文件已保存至：\\n${filePath}\\n\\n共${recordCount}条记录`,\n\t\t\t\t\t\tshowCancel: false,\n\t\t\t\t\t\tconfirmText: '知道了'\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t},\n\t\t\t\n\t\t\t// 保存到外部公共存储（兼容Android 10+）\n\t\t\tsaveToDCIM(csvContent, recordCount, fileName) {\n\t\t\t\tconsole.log('=== 开始保存到外部公共存储 ===')\n\t\t\t\tconsole.log('文件名:', fileName)\n\t\t\t\tconsole.log('记录数量:', recordCount)\n\t\t\t\t\n\t\t\t\t// 首先检查存储权限\n\t\t\t\tthis.checkStoragePermission().then(() => {\n\t\t\t\t\t// 直接使用 Android 原生 API 操作真正的公共目录\n\t\t\t\t\ttry {\n\t\t\t\t\t\tconst Environment = plus.android.importClass('android.os.Environment')\n\t\t\t\t\t\tconst File = plus.android.importClass('java.io.File')\n\t\t\t\t\t\tconst FileOutputStream = plus.android.importClass('java.io.FileOutputStream')\n\t\t\t\t\t\tconst OutputStreamWriter = plus.android.importClass('java.io.OutputStreamWriter')\n\t\t\t\t\t\t\n\t\t\t\t\t\t// 检查外部存储是否可用\n\t\t\t\t\t\tconst state = Environment.getExternalStorageState()\n\t\t\t\t\t\tif (state !== Environment.MEDIA_MOUNTED) {\n\t\t\t\t\t\t\tthrow new Error('外部存储不可用')\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\t// 获取公共下载目录 - 这是真正的公共目录\n\t\t\t\t\t\tlet publicDownloadsDir = Environment.getExternalStoragePublicDirectory(Environment.DIRECTORY_DOWNLOADS)\n\t\t\t\t\t\t\n\t\t\t\t\t\t// 检查是否成功获取下载目录\n\t\t\t\t\t\tif (publicDownloadsDir === null || publicDownloadsDir === undefined) {\n\t\t\t\t\t\t\t// 尝试备用方案：手动构建下载目录路径\n\t\t\t\t\t\t\tconst externalStorageDir = Environment.getExternalStorageDirectory()\n\t\t\t\t\t\t\tif (externalStorageDir !== null) {\n\t\t\t\t\t\t\t\tpublicDownloadsDir = new File(externalStorageDir, 'Download')\n\t\t\t\t\t\t\t\tconsole.log('使用备用下载目录路径:', publicDownloadsDir.getAbsolutePath())\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthrow new Error('无法获取任何外部存储目录，设备可能不支持')\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconsole.log('公共下载目录:', publicDownloadsDir.getAbsolutePath())\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\t// 检查目录是否存在和可写\n\t\t\t\t\t\tif (!publicDownloadsDir.exists()) {\n\t\t\t\t\t\t\t// 尝试创建下载目录\n\t\t\t\t\t\t\tconst created = publicDownloadsDir.mkdirs()\n\t\t\t\t\t\t\tif (!created) {\n\t\t\t\t\t\t\t\tthrow new Error('下载目录不存在且无法创建')\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (!publicDownloadsDir.canWrite()) {\n\t\t\t\t\t\t\tthrow new Error('下载目录不可写，请检查权限')\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\t// 创建 AccountData 子目录\n\t\t\t\t\t\tconst accountDataDir = new File(publicDownloadsDir, 'AccountData')\n\t\t\t\t\t\tif (!accountDataDir.exists()) {\n\t\t\t\t\t\t\tconst created = accountDataDir.mkdirs()\n\t\t\t\t\t\t\tconsole.log('创建AccountData目录结果:', created)\n\t\t\t\t\t\t\tif (!created) {\n\t\t\t\t\t\t\t\tthrow new Error('无法创建AccountData目录')\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\t// 创建文件\n\t\t\t\t\t\tconst csvFile = new File(accountDataDir, fileName)\n\t\t\t\t\t\tconst absolutePath = csvFile.getAbsolutePath()\n\t\t\t\t\t\tconsole.log('目标文件完整路径:', absolutePath)\n\t\t\t\t\t\t\n\t\t\t\t\t\t// 检查文件是否可以创建\n\t\t\t\t\t\tif (csvFile.exists()) {\n\t\t\t\t\t\t\tcsvFile.delete() // 删除已存在的文件\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\t// 写入文件内容\n\t\t\t\t\t\tconst fos = new FileOutputStream(csvFile)\n\t\t\t\t\t\tconst writer = new OutputStreamWriter(fos, 'UTF-8')\n\t\t\t\t\t\t\n\t\t\t\t\t\t// 添加 BOM 用于正确的 UTF-8 编码\n\t\t\t\t\t\tconst bom = '\\ufeff'\n\t\t\t\t\t\tconst fullContent = bom + csvContent\n\t\t\t\t\t\t\n\t\t\t\t\t\twriter.write(fullContent)\n\t\t\t\t\t\twriter.flush()\n\t\t\t\t\t\twriter.close()\n\t\t\t\t\t\tfos.close()\n\t\t\t\t\t\t\n\t\t\t\t\t\t// 获取文件大小\n\t\t\t\t\t\tconst fileSize = csvFile.length()\n\t\t\t\t\t\t\n\t\t\t\t\t\tconsole.log('文件写入完成，大小:', fileSize)\n\t\t\t\t\t\tuni.showModal({\n\t\t\t\t\t\t\ttitle: '导出成功',\n\t\t\t\t\t\t\tcontent: `文件已保存到真正的公共下载目录：\\n\\n${absolutePath}\\n\\n共${recordCount}条记录\\n文件大小：${fileSize}字节\\n\\n现在可以通过任何文件管理器在\"下载\"文件夹的\"AccountData\"子目录中找到该文件`,\n\t\t\t\t\t\t\tshowCancel: false,\n\t\t\t\t\t\t\tconfirmText: '知道了'\n\t\t\t\t\t\t})\n\t\t\t\t\t\t\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\tconsole.error('原生文件操作失败:', error)\n\t\t\t\t\t\tuni.showModal({\n\t\t\t\t\t\t\ttitle: '保存失败',\n\t\t\t\t\t\t\tcontent: `无法保存到公共目录：${error.message}\\n\\n将尝试其他方式保存`,\n\t\t\t\t\t\t\tshowCancel: true,\n\t\t\t\t\t\t\tconfirmText: '尝试其他方式',\n\t\t\t\t\t\t\tcancelText: '取消',\n\t\t\t\t\t\t\tsuccess: (res) => {\n\t\t\t\t\t\t\t\tif (res.confirm) {\n\t\t\t\t\t\t\t\t\t// 降级处理\n\t\t\t\t\t\t\t\t\tthis.fallbackToPublicDownloads(csvContent, recordCount, fileName)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t}).catch((err) => {\n\t\t\t\t\tconsole.error('存储权限检查失败:', err)\n\t\t\t\t\tuni.showModal({\n\t\t\t\t\t\ttitle: '权限不足',\n\t\t\t\t\t\tcontent: '需要存储权限才能保存到公共目录。请在应用设置中授予存储权限。',\n\t\t\t\t\t\tshowCancel: true,\n\t\t\t\t\t\tconfirmText: '去设置',\n\t\t\t\t\t\tcancelText: '取消',\n\t\t\t\t\t\tsuccess: (res) => {\n\t\t\t\t\t\t\tif (res.confirm) {\n\t\t\t\t\t\t\t\t// 打开应用设置页面\n\t\t\t\t\t\t\t\tconst Intent = plus.android.importClass('android.content.Intent')\n\t\t\t\t\t\t\t\tconst Settings = plus.android.importClass('android.provider.Settings')\n\t\t\t\t\t\t\t\tconst Uri = plus.android.importClass('android.net.Uri')\n\t\t\t\t\t\t\t\tconst main = plus.android.runtimeMainActivity()\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tconst intent = new Intent(Settings.ACTION_APPLICATION_DETAILS_SETTINGS)\n\t\t\t\t\t\t\t\tconst uri = Uri.fromParts('package', main.getPackageName(), null)\n\t\t\t\t\t\t\t\tintent.setData(uri)\n\t\t\t\t\t\t\t\tmain.startActivity(intent)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t})\n\t\t\t},\n\t\t\t\n\t\t\t// 检查存储权限\n\t\t\tcheckStoragePermission() {\n\t\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\t\tconst Context = plus.android.importClass('android.content.Context')\n\t\t\t\t\tconst PackageManager = plus.android.importClass('android.content.pm.PackageManager')\n\t\t\t\t\tconst Manifest = plus.android.importClass('android.Manifest')\n\t\t\t\t\tconst main = plus.android.runtimeMainActivity()\n\t\t\t\t\t\n\t\t\t\t\t// 检查写入外部存储权限\n\t\t\t\t\tconst writePermission = main.checkSelfPermission(Manifest.permission.WRITE_EXTERNAL_STORAGE)\n\t\t\t\t\tconst readPermission = main.checkSelfPermission(Manifest.permission.READ_EXTERNAL_STORAGE)\n\t\t\t\t\t\n\t\t\t\t\tif (writePermission === PackageManager.PERMISSION_GRANTED && \n\t\t\t\t\t\treadPermission === PackageManager.PERMISSION_GRANTED) {\n\t\t\t\t\t\tconsole.log('存储权限已授予')\n\t\t\t\t\t\tresolve()\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconsole.log('存储权限未授予，尝试请求权限')\n\t\t\t\t\t\t// 请求权限\n\t\t\t\t\t\tconst ActivityCompat = plus.android.importClass('androidx.core.app.ActivityCompat')\n\t\t\t\t\t\tActivityCompat.requestPermissions(main, [\n\t\t\t\t\t\t\tManifest.permission.WRITE_EXTERNAL_STORAGE,\n\t\t\t\t\t\t\tManifest.permission.READ_EXTERNAL_STORAGE\n\t\t\t\t\t\t], 1001)\n\t\t\t\t\t\t\n\t\t\t\t\t\t// 等待用户授权结果\n\t\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\t\tconst newWritePermission = main.checkSelfPermission(Manifest.permission.WRITE_EXTERNAL_STORAGE)\n\t\t\t\t\t\t\tconst newReadPermission = main.checkSelfPermission(Manifest.permission.READ_EXTERNAL_STORAGE)\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif (newWritePermission === PackageManager.PERMISSION_GRANTED && \n\t\t\t\t\t\t\t\tnewReadPermission === PackageManager.PERMISSION_GRANTED) {\n\t\t\t\t\t\t\t\tresolve()\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\treject(new Error('用户未授予存储权限'))\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}, 2000)\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t},\n\t\t\t\n\t\t\t// 创建公共目录\n\t\t\tcreatePublicDirectory(targetPath, fileName, csvContent, recordCount) {\n\t\t\t\tconsole.log('开始创建公共目录:', targetPath)\n\t\t\t\t\n\t\t\t\t// 使用 Android 原生文件操作来创建真正的公共目录\n\t\t\t\ttry {\n\t\t\t\t\tconst Environment = plus.android.importClass('android.os.Environment')\n\t\t\t\t\tconst File = plus.android.importClass('java.io.File')\n\t\t\t\t\tconst FileOutputStream = plus.android.importClass('java.io.FileOutputStream')\n\t\t\t\t\tconst OutputStreamWriter = plus.android.importClass('java.io.OutputStreamWriter')\n\t\t\t\t\t\n\t\t\t\t\t// 获取公共下载目录\n\t\t\t\t\tlet publicDownloadsDir = Environment.getExternalStoragePublicDirectory(Environment.DIRECTORY_DOWNLOADS)\n\t\t\t\t\t\n\t\t\t\t\t// 检查是否成功获取下载目录\n\t\t\t\t\tif (publicDownloadsDir === null || publicDownloadsDir === undefined) {\n\t\t\t\t\t\t// 尝试备用方案：手动构建下载目录路径\n\t\t\t\t\t\tconst externalStorageDir = Environment.getExternalStorageDirectory()\n\t\t\t\t\t\tif (externalStorageDir !== null) {\n\t\t\t\t\t\t\tpublicDownloadsDir = new File(externalStorageDir, 'Download')\n\t\t\t\t\t\t\tconsole.log('使用备用下载目录路径:', publicDownloadsDir.getAbsolutePath())\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthrow new Error('无法获取任何外部存储目录')\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconsole.log('公共下载目录:', publicDownloadsDir.getAbsolutePath())\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t// 创建 AccountData 子目录\n\t\t\t\t\tconst accountDataDir = new File(publicDownloadsDir, 'AccountData')\n\t\t\t\t\tif (!accountDataDir.exists()) {\n\t\t\t\t\t\tconst created = accountDataDir.mkdirs()\n\t\t\t\t\t\tconsole.log('创建AccountData目录:', created)\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t// 创建文件\n\t\t\t\t\tconst csvFile = new File(accountDataDir, fileName)\n\t\t\t\t\tconsole.log('目标文件路径:', csvFile.getAbsolutePath())\n\t\t\t\t\t\n\t\t\t\t\t// 写入文件内容\n\t\t\t\t\tconst fos = new FileOutputStream(csvFile)\n\t\t\t\t\tconst writer = new OutputStreamWriter(fos, 'UTF-8')\n\t\t\t\t\t\n\t\t\t\t\t// 添加 BOM 用于正确的 UTF-8 编码\n\t\t\t\t\tconst bom = '\\ufeff'\n\t\t\t\t\tconst fullContent = bom + csvContent\n\t\t\t\t\t\n\t\t\t\t\twriter.write(fullContent)\n\t\t\t\t\twriter.flush()\n\t\t\t\t\twriter.close()\n\t\t\t\t\tfos.close()\n\t\t\t\t\t\n\t\t\t\t\tconsole.log('文件写入完成')\n\t\t\t\t\tuni.showModal({\n\t\t\t\t\t\ttitle: '导出成功',\n\t\t\t\t\t\tcontent: `文件已保存到真正的公共下载目录：\\n${csvFile.getAbsolutePath()}\\n\\n共${recordCount}条记录\\n\\n可通过任何文件管理器在\"下载\"文件夹的\"AccountData\"子目录中找到该文件`,\n\t\t\t\t\t\tshowCancel: false,\n\t\t\t\t\t\tconfirmText: '知道了'\n\t\t\t\t\t})\n\t\t\t\t\t\n\t\t\t\t} catch (error) {\n\t\t\t\t\tconsole.error('原生文件操作失败:', error)\n\t\t\t\t\t// 降级处理\n\t\t\t\t\tthis.fallbackToPublicDownloads(csvContent, recordCount, fileName)\n\t\t\t\t}\n\t\t\t},\n\t\t\t\n\t\t\t// 降级到 plus.io.PUBLIC_DOWNLOADS\n\t\t\tfallbackToPublicDownloads(csvContent, recordCount, fileName) {\n\t\t\t\tconsole.log('降级使用 plus.io.PUBLIC_DOWNLOADS')\n\t\t\t\t\n\t\t\t\t// 使用plus.io.PUBLIC_DOWNLOADS，这是Android 10+推荐的公共目录\n\t\t\t\tplus.io.requestFileSystem(plus.io.PUBLIC_DOWNLOADS, (fs) => {\n\t\t\t\t\tconsole.log('获取公共下载目录文件系统成功')\n\t\t\t\t\t\n\t\t\t\t\t// 在下载目录创建AccountData子目录\n\t\t\t\t\tfs.root.getDirectory('AccountData', {create: true}, (accountDataEntry) => {\n\t\t\t\t\t\tconsole.log('创建AccountData目录成功:', accountDataEntry.fullPath)\n\t\t\t\t\t\t\n\t\t\t\t\t\taccountDataEntry.getFile(fileName, {create: true}, (fileEntry) => {\n\t\t\t\t\t\t\tconsole.log('创建文件成功:', fileEntry.fullPath)\n\t\t\t\t\t\t\tfileEntry.createWriter((writer) => {\n\t\t\t\t\t\t\t\tconsole.log('创建写入器成功')\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\twriter.onwrite = (e) => {\n\t\t\t\t\t\t\t\t\tconsole.log('文件写入完成')\n\t\t\t\t\t\t\t\t\tuni.showModal({\n\t\t\t\t\t\t\t\t\t\ttitle: '导出成功',\n\t\t\t\t\t\t\t\t\t\tcontent: `文件已保存到：\\n${fileEntry.fullPath}\\n\\n共${recordCount}条记录\\n文件大小：${writer.length}字节\\n\\n请通过文件管理器查看，路径可能在：\\n• /storage/emulated/0/Download/AccountData/\\n• 或应用私有目录中`,\n\t\t\t\t\t\t\t\t\t\tshowCancel: false,\n\t\t\t\t\t\t\t\t\t\tconfirmText: '知道了'\n\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\twriter.onerror = (err) => {\n\t\t\t\t\t\t\t\t\tconsole.error('写入失败:', err)\n\t\t\t\t\t\t\t\t\tuni.showToast({\n\t\t\t\t\t\t\t\t\t\ttitle: '文件写入失败',\n\t\t\t\t\t\t\t\t\t\ticon: 'error'\n\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t// 创建带BOM的UTF-8 CSV内容\n\t\t\t\t\t\t\t\tconst bom = '\\ufeff'\n\t\t\t\t\t\t\t\tconst fullContent = bom + csvContent\n\t\t\t\t\t\t\t\tconsole.log('开始写入数据...')\n\t\t\t\t\t\t\t\twriter.write(fullContent)\n\t\t\t\t\t\t\t}, (err) => {\n\t\t\t\t\t\t\t\tconsole.error('创建写入器失败:', err)\n\t\t\t\t\t\t\t\tuni.showToast({\n\t\t\t\t\t\t\t\t\ttitle: '创建写入器失败',\n\t\t\t\t\t\t\t\t\ticon: 'error'\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t}, (err) => {\n\t\t\t\t\t\t\tconsole.error('创建文件失败:', err)\n\t\t\t\t\t\t\tuni.showToast({\n\t\t\t\t\t\t\t\ttitle: '创建文件失败',\n\t\t\t\t\t\t\t\ticon: 'error'\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t})\n\t\t\t\t\t}, (err) => {\n\t\t\t\t\t\tconsole.error('创建AccountData目录失败:', err)\n\t\t\t\t\t\tuni.showToast({\n\t\t\t\t\t\t\ttitle: '创建目录失败',\n\t\t\t\t\t\t\ticon: 'error'\n\t\t\t\t\t\t})\n\t\t\t\t\t})\n\t\t\t\t}, (err) => {\n\t\t\t\t\tconsole.error('获取公共存储失败:', err)\n\t\t\t\t\tuni.showToast({\n\t\t\t\t\t\ttitle: '获取公共存储失败',\n\t\t\t\t\t\ticon: 'error'\n\t\t\t\t\t})\n\t\t\t\t})\n\t\t\t},\n\t\t\t\n\t\t\t// 写入文件到指定的目录条目\n\t\t\twriteFileToEntry(dirEntry, fileName, csvContent, recordCount, targetPath) {\n\t\t\t\tdirEntry.getFile(fileName, {create: true}, (fileEntry) => {\n\t\t\t\t\tconsole.log('创建文件成功:', fileEntry.fullPath)\n\t\t\t\t\tfileEntry.createWriter((writer) => {\n\t\t\t\t\t\tconsole.log('创建写入器成功')\n\t\t\t\t\t\t\n\t\t\t\t\t\twriter.onwrite = (e) => {\n\t\t\t\t\t\t\tconsole.log('文件写入完成')\n\t\t\t\t\t\t\tuni.showModal({\n\t\t\t\t\t\t\t\ttitle: '导出成功',\n\t\t\t\t\t\t\t\tcontent: `文件已保存到真实公共目录：\\n${targetPath}${fileName}\\n\\n共${recordCount}条记录\\n文件大小：${writer.length}字节\\n\\n可通过文件管理器的\"下载\"目录 > \"AccountData\"文件夹查看`,\n\t\t\t\t\t\t\t\tshowCancel: false,\n\t\t\t\t\t\t\t\tconfirmText: '知道了'\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\twriter.onerror = (err) => {\n\t\t\t\t\t\t\tconsole.error('写入失败:', err)\n\t\t\t\t\t\t\tuni.showToast({\n\t\t\t\t\t\t\t\ttitle: '文件写入失败',\n\t\t\t\t\t\t\t\ticon: 'error'\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\t// 创建带BOM的UTF-8 CSV内容\n\t\t\t\t\t\tconst bom = '\\ufeff'\n\t\t\t\t\t\tconst fullContent = bom + csvContent\n\t\t\t\t\t\tconsole.log('开始写入数据...')\n\t\t\t\t\t\twriter.write(fullContent)\n\t\t\t\t\t}, (err) => {\n\t\t\t\t\t\tconsole.error('创建写入器失败:', err)\n\t\t\t\t\t\tuni.showToast({\n\t\t\t\t\t\t\ttitle: '创建写入器失败',\n\t\t\t\t\t\t\ticon: 'error'\n\t\t\t\t\t\t})\n\t\t\t\t\t})\n\t\t\t\t}, (err) => {\n\t\t\t\t\tconsole.error('创建文件失败:', err)\n\t\t\t\t\tuni.showToast({\n\t\t\t\t\t\ttitle: '创建文件失败',\n\t\t\t\t\t\ticon: 'error'\n\t\t\t\t\t})\n\t\t\t\t})\n\t\t\t},\n\t\t\t\n\t\t\t// 保存到应用外部存储目录（兼容Android 10+）\n\t\t\tsaveToPublicDocuments(csvContent, recordCount, fileName) {\n\t\t\t\tconsole.log('=== 开始保存到应用外部存储 ===')\n\t\t\t\tconsole.log('文件名:', fileName)\n\t\t\t\tconsole.log('记录数量:', recordCount)\n\t\t\t\t\n\t\t\t\t// 使用应用的外部存储目录，这在Android 10+中是允许的\n\t\t\t\tplus.io.requestFileSystem(plus.io.PRIVATE_WWW, (fs) => {\n\t\t\t\t\tconsole.log('获取应用存储成功，尝试访问外部目录')\n\t\t\t\t\t\n\t\t\t\t\t// 获取应用的外部文件目录\n\t\t\t\t\tconst externalPath = plus.io.convertLocalFileSystemURL(\"_documents/\")\n\t\t\t\t\tconsole.log('外部路径:', externalPath)\n\t\t\t\t\t\n\t\t\t\t\tplus.io.resolveLocalFileSystemURL(externalPath, (entry) => {\n\t\t\t\t\t\tconsole.log('解析外部路径成功:', entry.fullPath)\n\t\t\t\t\t\t\n\t\t\t\t\t\tentry.getFile(fileName, {create: true}, (fileEntry) => {\n\t\t\t\t\t\t\tconsole.log('创建文件成功:', fileEntry.fullPath)\n\t\t\t\t\t\t\tfileEntry.createWriter((writer) => {\n\t\t\t\t\t\t\t\tconsole.log('创建写入器成功')\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\twriter.onwrite = (e) => {\n\t\t\t\t\t\t\t\t\tconsole.log('文件写入完成')\n\t\t\t\t\t\t\t\t\tuni.showModal({\n\t\t\t\t\t\t\t\t\t\ttitle: '导出成功',\n\t\t\t\t\t\t\t\t\t\tcontent: `文件已保存到应用文档目录：\\n${fileName}\\n\\n共${recordCount}条记录\\n文件大小：${writer.length}字节\\n\\n可通过文件管理器的应用文档目录访问`,\n\t\t\t\t\t\t\t\t\t\tshowCancel: false,\n\t\t\t\t\t\t\t\t\t\tconfirmText: '知道了'\n\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\twriter.onerror = (err) => {\n\t\t\t\t\t\t\t\t\tconsole.error('写入失败:', err)\n\t\t\t\t\t\t\t\t\tuni.showToast({\n\t\t\t\t\t\t\t\t\t\ttitle: '文件写入失败',\n\t\t\t\t\t\t\t\t\t\ticon: 'error'\n\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t// 创建带BOM的UTF-8 CSV内容\n\t\t\t\t\t\t\t\tconst bom = '\\ufeff'\n\t\t\t\t\t\t\t\tconst fullContent = bom + csvContent\n\t\t\t\t\t\t\t\tconsole.log('开始写入数据...')\n\t\t\t\t\t\t\t\twriter.write(fullContent)\n\t\t\t\t\t\t\t}, (err) => {\n\t\t\t\t\t\t\t\tconsole.error('创建写入器失败:', err)\n\t\t\t\t\t\t\t\t// 如果外部存储失败，回退到私有文档目录\n\t\t\t\t\t\t\t\tthis.saveToDocuments(csvContent, recordCount, fileName)\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t}, (err) => {\n\t\t\t\t\t\t\tconsole.error('创建文件失败:', err)\n\t\t\t\t\t\t\t// 回退到私有文档目录\n\t\t\t\t\t\t\tthis.saveToDocuments(csvContent, recordCount, fileName)\n\t\t\t\t\t\t})\n\t\t\t\t\t}, (err) => {\n\t\t\t\t\t\tconsole.error('解析外部路径失败:', err)\n\t\t\t\t\t\t// 回退到私有文档目录\n\t\t\t\t\t\tthis.saveToDocuments(csvContent, recordCount, fileName)\n\t\t\t\t\t})\n\t\t\t\t}, (err) => {\n\t\t\t\t\tconsole.error('获取应用存储失败:', err)\n\t\t\t\t\t// 回退到私有文档目录\n\t\t\t\t\tthis.saveToDocuments(csvContent, recordCount, fileName)\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t}\n</script>\n\n<style>\n\t.container {\n\t\tbackground-color: #f5f5f5;\n\t\tmin-height: 100vh;\n\t\tpadding: 0 0 40rpx 0;\n\t}\n\t\n\t/* 用户信息区域 */\n\t.user-info {\n\t\tbackground: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n\t\tpadding: 40rpx 30rpx 60rpx;\n\t\tposition: relative;\n\t\tborder-radius: 0 0 40rpx 40rpx;\n\t}\n\t\n\t.avatar-section {\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\talign-items: center;\n\t\tcolor: white;\n\t}\n\t\n\t.avatar {\n\t\twidth: 120rpx;\n\t\theight: 120rpx;\n\t\tborder-radius: 60rpx;\n\t\tborder: 4rpx solid rgba(255, 255, 255, 0.3);\n\t\tmargin-bottom: 20rpx;\n\t}\n\t\n\t.username {\n\t\tfont-size: 36rpx;\n\t\tfont-weight: bold;\n\t\tmargin-bottom: 10rpx;\n\t}\n\t\n\t.user-desc {\n\t\tfont-size: 28rpx;\n\t\topacity: 0.8;\n\t}\n\t\n\t/* 数据管理区域 */\n\t.data-management {\n\t\tbackground: white;\n\t\tmargin: 30rpx 30rpx 40rpx;\n\t\tborder-radius: 20rpx;\n\t\toverflow: hidden;\n\t\tbox-shadow: 0 2rpx 20rpx rgba(0, 0, 0, 0.08);\n\t}\n\t\n\t.management-title {\n\t\tdisplay: block;\n\t\tfont-size: 32rpx;\n\t\tfont-weight: bold;\n\t\tcolor: #333;\n\t\tpadding: 30rpx 30rpx 20rpx;\n\t\tborder-bottom: 1rpx solid #f0f0f0;\n\t}\n\t\n\t.management-item {\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tjustify-content: space-between;\n\t\tpadding: 30rpx;\n\t\tborder-bottom: 1rpx solid #f8f8f8;\n\t\ttransition: background-color 0.2s;\n\t}\n\t\n\t.management-item:last-child {\n\t\tborder-bottom: none;\n\t}\n\t\n\t.management-item:active {\n\t\tbackground-color: #f8f8f8;\n\t}\n\t\n\t.management-left {\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t}\n\t\n\t.management-icon {\n\t\tfont-size: 36rpx;\n\t\tmargin-right: 20rpx;\n\t\twidth: 50rpx;\n\t\ttext-align: center;\n\t}\n\t\n\t.management-text {\n\t\tfont-size: 30rpx;\n\t\tcolor: #333;\n\t}\n\t\n\t.management-arrow {\n\t\tfont-size: 28rpx;\n\t\tcolor: #999;\n\t}\n\t\n\t/* 特殊项目样式 */\n\t.ai-chat-item .management-icon {\n\t\tbackground: linear-gradient(45deg, #FF6B6B, #FF8E53);\n\t\tborder-radius: 50%;\n\t\tcolor: white;\n\t\tline-height: 1;\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tjustify-content: center;\n\t\twidth: 50rpx;\n\t\theight: 50rpx;\n\t}\n\t\n\t.ai-config-item .management-icon {\n\t\tbackground: linear-gradient(45deg, #4ECDC4, #44A08D);\n\t\tborder-radius: 50%;\n\t\tcolor: white;\n\t\tline-height: 1;\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tjustify-content: center;\n\t\twidth: 50rpx;\n\t\theight: 50rpx;\n\t}\n\t\n\t.danger-item .management-text {\n\t\tcolor: #ff4d4f;\n\t}\n\t\n\t.danger-item .management-icon {\n\t\tcolor: #ff4d4f;\n\t}\n\t\n\t/* 应用信息区域 */\n\t.app-info {\n\t\tbackground: white;\n\t\tmargin: 0 30rpx 40rpx;\n\t\tborder-radius: 20rpx;\n\t\toverflow: hidden;\n\t\tbox-shadow: 0 2rpx 20rpx rgba(0, 0, 0, 0.08);\n\t}\n\t\n\t.info-title {\n\t\tdisplay: block;\n\t\tfont-size: 32rpx;\n\t\tfont-weight: bold;\n\t\tcolor: #333;\n\t\tpadding: 30rpx 30rpx 20rpx;\n\t\tborder-bottom: 1rpx solid #f0f0f0;\n\t}\n\t\n\t.info-item {\n\t\tdisplay: flex;\n\t\tjustify-content: space-between;\n\t\talign-items: center;\n\t\tpadding: 25rpx 30rpx;\n\t\tborder-bottom: 1rpx solid #f8f8f8;\n\t}\n\t\n\t.info-item:last-child {\n\t\tborder-bottom: none;\n\t}\n\t\n\t.info-label {\n\t\tfont-size: 28rpx;\n\t\tcolor: #666;\n\t}\n\t\n\t.info-value {\n\t\tfont-size: 28rpx;\n\t\tcolor: #333;\n\t\tfont-weight: 500;\n\t}\n\t\n\t/* 响应式适配 */\n\t@media (max-width: 750rpx) {\n\t\t.container {\n\t\t\tpadding: 0;\n\t\t}\n\t\t\n\t\t.data-management,\n\t\t.app-info {\n\t\t\tmargin-left: 20rpx;\n\t\t\tmargin-right: 20rpx;\n\t\t}\n\t}\n</style>\n","import MiniProgramPage from 'D:/simple-account-v1.0.4/pages/profile/profile.vue'\nwx.createPage(MiniProgramPage)"],"names":["uni","wx"],"mappings":"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"}