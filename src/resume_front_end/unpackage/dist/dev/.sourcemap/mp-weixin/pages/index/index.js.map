{"version":3,"file":"index.js","sources":["pages/index/index.vue","../Edgedownload/HBuilderX/plugins/uniapp-cli-vite/uniPage:/cGFnZXMvaW5kZXgvaW5kZXgudnVl"],"sourcesContent":["<template>\n\t<scroll-view \n\t\tclass=\"container\" \n\t\tscroll-y=\"true\" \n\t\t@scrolltolower=\"loadMore\"\n\t\tlower-threshold=\"100\">\n\t\t<!-- 顶部统计卡片 -->\n\t\t<view class=\"summary-card\">\n\t\t\t<view class=\"card-decoration\"></view>\n\t\t\t\n\t\t\t<!-- 时间范围显示 -->\n\t\t\t<view class=\"time-range-header\" @click=\"toggleTimeFilter\">\n\t\t\t\t<text class=\"time-range-text\">{{getCurrentTimeRangeText()}}</text>\n\t\t\t\t<view class=\"time-range-icon\">📅</view>\n\t\t\t</view>\n\t\t\t\n\t\t\t<!-- 主要信息区域 -->\n\t\t\t<view class=\"main-info-section\">\n\t\t\t\t<view class=\"left-info\">\n\t\t\t\t\t<view class=\"expense-section\">\n\t\t\t\t\t\t<text class=\"expense-label\">支出</text>\n\t\t\t\t\t\t<view class=\"expense-icon\">⊖</view>\n\t\t\t\t\t</view>\n\t\t\t\t\t<text class=\"main-amount\">¥{{monthExpense}}</text>\n\t\t\t\t\t<view class=\"sub-amounts\">\n\t\t\t\t\t\t<view class=\"amount-item\">\n\t\t\t\t\t\t\t<text class=\"amount-label\">收入</text>\n\t\t\t\t\t\t\t<text class=\"amount-value\">¥{{monthIncome}}</text>\n\t\t\t\t\t\t</view>\n\t\t\t\t\t\t<view class=\"amount-item\">\n\t\t\t\t\t\t\t<text class=\"amount-label\">结余</text>\n\t\t\t\t\t\t\t<text class=\"amount-value\" :class=\"monthBalance >= 0 ? 'positive' : 'negative'\">¥{{monthBalance}}</text>\n\t\t\t\t\t\t</view>\n\t\t\t\t\t</view>\n\t\t\t\t</view>\n\t\t\t\t\n\t\t\t\t<view class=\"right-info\">\n\t\t\t\t\t<view class=\"chat-bubble\">\n\t\t\t\t\t\t<text class=\"chat-text\">来和我聊天记账吧~</text>\n\t\t\t\t\t\t<view class=\"bubble-tail\"></view>\n\t\t\t\t\t</view>\n\t\t\t\t\t<view class=\"avatar-container\" @click=\"goToChat\">\n\t\t\t\t\t\t<view class=\"avatar\">\n\t\t\t\t\t\t\t<text class=\"avatar-emoji\">🤖</text>\n\t\t\t\t\t\t</view>\n\t\t\t\t\t</view>\n\t\t\t\t</view>\n\t\t\t</view>\n\t\t\t\n\t\t\t<!-- 预算进度区域 -->\n\t\t\t<view class=\"budget-section\">\n\t\t\t\t\t<view class=\"progress-container\">\n\t\t\t\t\t\t<view class=\"progress-circle\">\n\t\t\t\t\t\t\t<view class=\"progress-ring\" \n\t\t\t\t\t\t\t\t:style=\"{background: `conic-gradient(#4A90E2 0deg, #4A90E2 ${calculateBudgetInfo.progress * 3.6}deg, rgba(255,255,255,0.2) ${calculateBudgetInfo.progress * 3.6}deg, rgba(255,255,255,0.2) 360deg)`}\">\n\t\t\t\t\t\t\t\t<view class=\"progress-inner\">\n\t\t\t\t\t\t\t\t\t<text class=\"progress-text\">{{ getBudgetProgressDisplayText() }}</text>\n\t\t\t\t\t\t\t\t</view>\n\t\t\t\t\t\t\t</view>\n\t\t\t\t\t\t</view>\n\t\t\t\t\t</view>\t\t\t\t<view class=\"budget-details\">\n\t\t\t\t\t<view class=\"budget-item\">\n\t\t\t\t\t\t<text class=\"budget-label\">总预算</text>\n\t\t\t\t\t\t<text class=\"budget-value\">¥{{calculateBudgetInfo.totalBudget}}</text>\n\t\t\t\t\t\t<text class=\"budget-source\">来自{{categoryBudgets.length}}个分类预算</text>\n\t\t\t\t\t</view>\n\t\t\t\t\t<view class=\"budget-item\">\n\t\t\t\t\t\t<text class=\"budget-label\">已使用预算</text>\n\t\t\t\t\t\t<text class=\"budget-value\">¥{{calculateBudgetInfo.usedAmount.toFixed(2)}}</text>\n\t\t\t\t\t</view>\n\t\t\t\t\t<view class=\"budget-item\">\n\t\t\t\t\t\t<text class=\"budget-label\">剩余预算</text>\n\t\t\t\t\t\t<text class=\"budget-value positive\">¥{{calculateBudgetInfo.remainingAmount.toFixed(2)}}</text>\n\t\t\t\t\t</view>\n\t\t\t\t</view>\n\t\t\t</view>\n\t\t\t\n\t\t\t<!-- 其他统计信息 -->\n\t\t\t<view class=\"other-stats\">\n\t\t\t\t<view class=\"stat-item\">\n\t\t\t\t\t<text class=\"stat-label\">今日支出</text>\n\t\t\t\t\t<text class=\"stat-value expense\">¥{{todayExpense}}</text>\n\t\t\t\t</view>\n\t\t\t\t<view class=\"stat-item\">\n\t\t\t\t\t<text class=\"stat-label\">总记录数</text>\n\t\t\t\t\t<text class=\"stat-value\">{{totalRecords}}条</text>\n\t\t\t\t</view>\n\t\t\t\t<view class=\"stat-item\">\n\t\t\t\t\t<text class=\"stat-label\">平均日支出</text>\n\t\t\t\t\t<text class=\"stat-value expense\">¥{{avgDailyExpense}}</text>\n\t\t\t\t</view>\n\t\t\t</view>\n\t\t</view>\n\t\t\n\t\t<!-- 快捷添加按钮 -->\n\t\t<view class=\"quick-add\">\n\t\t\t<button class=\"add-btn\" @click=\"goToAdd\" type=\"primary\">记一笔</button>\n\t\t</view>\n\t\t\n\t\t<!-- 账单列表 -->\n\t\t<view class=\"record-list\">\n\t\t\t<view class=\"record-header\">\n\t\t\t\t<text class=\"record-title\">账目记录</text>\n\t\t\t</view>\n\t\t\t\n\t\t\t<!-- 筛选器 -->\n\t\t\t<view class=\"filter-section\">\n\t\t\t\t<view class=\"filter-row\">\n\t\t\t\t\t<!-- 时间筛选 -->\n\t\t\t\t\t<view class=\"filter-item\">\n\t\t\t\t\t\t<text class=\"filter-label\">时间：</text>\n\t\t\t\t\t\t<picker mode=\"selector\" :range=\"timeOptions\" :value=\"selectedTimeIndex\" @change=\"onTimeChange\">\n\t\t\t\t\t\t\t<view class=\"picker-text\">{{timeOptions[selectedTimeIndex]}}</view>\n\t\t\t\t\t\t</picker>\n\t\t\t\t\t</view>\n\t\t\t\t\t\n\t\t\t\t\t<!-- 类别筛选 -->\n\t\t\t\t\t<view class=\"filter-item\">\n\t\t\t\t\t\t<text class=\"filter-label\">类别：</text>\n\t\t\t\t\t\t<picker mode=\"selector\" :range=\"typeOptions\" :value=\"selectedTypeIndex\" @change=\"onTypeChange\">\n\t\t\t\t\t\t\t<view class=\"picker-text\">{{typeOptions[selectedTypeIndex]}}</view>\n\t\t\t\t\t\t</picker>\n\t\t\t\t\t</view>\n\t\t\t\t</view>\n\t\t\t\t\n\t\t\t\t<!-- 自定义时间范围 -->\n\t\t\t\t<view class=\"filter-row\" v-if=\"selectedTimeIndex === 5\">\n\t\t\t\t\t<view class=\"filter-item\">\n\t\t\t\t\t\t<text class=\"filter-label\">开始：</text>\n\t\t\t\t\t\t<picker mode=\"date\" :value=\"customStartDate\" @change=\"onStartDateChange\">\n\t\t\t\t\t\t\t<view class=\"picker-text\">{{customStartDate || '选择开始日期'}}</view>\n\t\t\t\t\t\t</picker>\n\t\t\t\t\t</view>\n\t\t\t\t\t<view class=\"filter-item\">\n\t\t\t\t\t\t<text class=\"filter-label\">结束：</text>\n\t\t\t\t\t\t<picker mode=\"date\" :value=\"customEndDate\" @change=\"onEndDateChange\">\n\t\t\t\t\t\t\t<view class=\"picker-text\">{{customEndDate || '选择结束日期'}}</view>\n\t\t\t\t\t\t</picker>\n\t\t\t\t\t</view>\n\t\t\t\t</view>\n\t\t\t\t\n\t\t\t\t<!-- 分类筛选 -->\n\t\t\t\t<view class=\"filter-row\" v-if=\"selectedTypeIndex > 0\">\n\t\t\t\t\t<view class=\"filter-item full-width\">\n\t\t\t\t\t\t<text class=\"filter-label\">分类：</text>\n\t\t\t\t\t\t<picker mode=\"selector\" :range=\"categoryOptions\" :value=\"selectedCategoryIndex\" @change=\"onCategoryChange\">\n\t\t\t\t\t\t\t<view class=\"picker-text\">{{categoryOptions[selectedCategoryIndex]}}</view>\n\t\t\t\t\t\t</picker>\n\t\t\t\t\t</view>\n\t\t\t\t</view>\n\t\t\t</view>\n\t\t\t\n\t\t\t<view v-if=\"groupedRecords.length === 0\" class=\"empty-state\">\n\t\t\t\t<text class=\"empty-text\">还没有记录，快去记一笔吧！</text>\n\t\t\t</view>\n\t\t\t\n\t\t\t<!-- 按日期分组显示记录 -->\n\t\t\t<view v-for=\"(group, groupIndex) in groupedRecords\" :key=\"group.date\" class=\"record-group\">\n\t\t\t\t<!-- 日期分组标题 -->\n\t\t\t\t<view class=\"date-group-header\">\n\t\t\t\t\t<view class=\"date-info\">\n\t\t\t\t\t\t<text class=\"date-text\">{{group.dateText}}</text>\n\t\t\t\t\t\t<text class=\"date-weekday\">{{group.weekday}}</text>\n\t\t\t\t\t</view>\n\t\t\t\t\t<view class=\"date-summary\">\n\t\t\t\t\t\t<text class=\"date-expense\" v-if=\"group.totalExpense > 0\">支出 ¥{{group.totalExpense}}</text>\n\t\t\t\t\t\t<text class=\"date-income\" v-if=\"group.totalIncome > 0\">收入 ¥{{group.totalIncome}}</text>\n\t\t\t\t\t</view>\n\t\t\t\t</view>\n\t\t\t\t\n\t\t\t\t<!-- 该日期下的记录 -->\n\t\t\t\t<view v-for=\"record in group.records\" :key=\"record.id\" class=\"record-wrapper\">\n\t\t\t\t\t<view class=\"record-item\" \n\t\t\t\t\t\t@click=\"showRecordDetail(record)\"\n\t\t\t\t\t\t@touchstart=\"onTouchStart($event, record.id)\"\n\t\t\t\t\t\t@touchmove=\"onTouchMove($event, record.id)\"\n\t\t\t\t\t\t@touchend=\"onTouchEnd($event, record.id)\"\n\t\t\t\t\t\t:style=\"{transform: `translateX(${getTranslateX(record.id)}px)`}\">\n\t\t\t\t\t\t<view class=\"record-left\">\n\t\t\t\t\t\t\t<view class=\"record-category\">\n\t\t\t\t\t\t\t\t<text class=\"category-icon\">{{record.categoryIcon}}</text>\n\t\t\t\t\t\t\t\t<text class=\"category-name\">{{record.categoryName}}</text>\n\t\t\t\t\t\t\t</view>\n\t\t\t\t\t\t\t<text class=\"record-note\" v-if=\"record.note\">{{record.note}}</text>\n\t\t\t\t\t\t</view>\n\t\t\t\t\t\t<view class=\"record-right\">\n\t\t\t\t\t\t\t<text class=\"record-amount\" :class=\"record.type\">\n\t\t\t\t\t\t\t\t{{record.type === 'expense' ? '-' : '+'}}¥{{record.amount}}\n\t\t\t\t\t\t\t</text>\n\t\t\t\t\t\t\t<text class=\"record-time\">{{formatTimeOnly(record.time)}}</text>\n\t\t\t\t\t\t</view>\n\t\t\t\t\t</view>\n\t\t\t\t\t<view class=\"action-buttons\">\n\t\t\t\t\t\t<view class=\"edit-btn\" @click=\"editRecord(record)\">\n\t\t\t\t\t\t\t<text class=\"edit-text\">编辑</text>\n\t\t\t\t\t\t</view>\n\t\t\t\t\t\t<view class=\"delete-btn\" @click=\"deleteRecord(record)\">\n\t\t\t\t\t\t\t<text class=\"delete-text\">删除</text>\n\t\t\t\t\t\t</view>\n\t\t\t\t\t</view>\n\t\t\t\t</view>\n\t\t\t</view>\n\t\t\t\n\t\t\t<!-- 加载状态提示 -->\n\t\t\t<view v-if=\"hasMore && groupedRecords.length > 0 && isLoading\" class=\"loading-indicator\">\n\t\t\t\t<text class=\"loading-text\">加载中...</text>\n\t\t\t</view>\n\t\t\t\n\t\t\t<!-- 没有更多数据提示 -->\n\t\t\t<view v-if=\"!hasMore && groupedRecords.length > 0\" class=\"no-more\">\n\t\t\t\t<text class=\"no-more-text\">已显示全部记录</text>\n\t\t\t</view>\n\t\t</view>\n\t</scroll-view>\n</template>\n\n<script>\n\texport default {\n\t\tdata() {\n\t\t\treturn {\n\t\t\t\trecords: [],\n\t\t\t\tallRecords: [], // 存储所有记录\n\t\t\t\tgroupedRecords: [], // 按日期分组的记录\n\t\t\t\tmonthExpense: 0,\n\t\t\t\tmonthIncome: 0,\n\t\t\t\tmonthBalance: 0,\n\t\t\t\ttodayExpense: 0,\n\t\t\t\ttotalRecords: 0,\n\t\t\t\tavgDailyExpense: 0,\n\t\t\t\t// 预算相关 - 与预算管理页面保持一致\n\t\t\t\tcategoryBudgets: [], // 分类预算列表\n\t\t\t\tcurrentMonthRecords: [], // 当前月份的记录\n\t\t\t\t// 时间单位定义\n\t\t\t\ttimeUnits: [\n\t\t\t\t\t{ key: 'day', name: '日', factor: 30 }, // 日预算 × 30 = 月预算\n\t\t\t\t\t{ key: 'month', name: '月', factor: 1 }, // 月预算 × 1 = 月预算\n\t\t\t\t\t{ key: 'quarter', name: '季', factor: 1/3 }, // 季预算 × 1/3 = 月预算\n\t\t\t\t\t{ key: 'year', name: '年', factor: 1/12 } // 年预算 × 1/12 = 月预算\n\t\t\t\t],\n\t\t\t\tmonthNames: ['1月', '2月', '3月', '4月', '5月', '6月', '7月', '8月', '9月', '10月', '11月', '12月'],\n\t\t\t\ttouchData: {}, // 存储每个item的触摸数据\n\t\t\t\t// 分页相关\n\t\t\t\tcurrentPage: 1,\n\t\t\t\tpageSize: 20,\n\t\t\t\thasMore: true,\n\t\t\t\tisLoading: false,\n\t\t\t\t// 筛选相关\n\t\t\t\ttimeOptions: ['全部时间', '今天', '本周', '本月', '本年', '自定义范围'],\n\t\t\t\tselectedTimeIndex: 3, // 默认选择本月\n\t\t\t\tcustomStartDate: '',\n\t\t\t\tcustomEndDate: '',\n\t\t\t\ttypeOptions: ['全部类型', '支出', '收入'],\n\t\t\t\tselectedTypeIndex: 0,\n\t\t\t\tcategoryOptions: ['全部分类'],\n\t\t\t\tselectedCategoryIndex: 0,\n\t\t\t\t// 所有分类数据（从本地存储加载）\n\t\t\t\texpenseCategories: [],\n\t\t\t\tincomeCategories: [],\n\t\t\t\t// 金额计算工具函数，解决浮点数精度问题\n\t\t\t\tmoneyCalculator: {\n\t\t\t\t\t// 金额加法\n\t\t\t\t\tadd(a, b) {\n\t\t\t\t\t\tconst factor = 100\n\t\t\t\t\t\treturn Math.round((parseFloat(a) * factor + parseFloat(b) * factor)) / factor\n\t\t\t\t\t},\n\t\t\t\t\t\n\t\t\t\t\t// 金额减法\n\t\t\t\t\tsubtract(a, b) {\n\t\t\t\t\t\tconst factor = 100\n\t\t\t\t\t\treturn Math.round((parseFloat(a) * factor - parseFloat(b) * factor)) / factor\n\t\t\t\t\t},\n\t\t\t\t\t\n\t\t\t\t\t// 金额乘法\n\t\t\t\t\tmultiply(a, b) {\n\t\t\t\t\t\tconst factor = 100\n\t\t\t\t\t\treturn Math.round(parseFloat(a) * parseFloat(b) * factor) / factor\n\t\t\t\t\t},\n\t\t\t\t\t\n\t\t\t\t\t// 金额除法\n\t\t\t\t\tdivide(a, b) {\n\t\t\t\t\t\tif (parseFloat(b) === 0) return 0\n\t\t\t\t\t\tconst factor = 100\n\t\t\t\t\t\treturn Math.round((parseFloat(a) / parseFloat(b)) * factor) / factor\n\t\t\t\t\t},\n\t\t\t\t\t\n\t\t\t\t\t// 格式化金额，保留两位小数\n\t\t\t\t\tformat(amount) {\n\t\t\t\t\t\treturn parseFloat(amount).toFixed(2)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\n\t\tcomputed: {\n\t\t\t// 总预算 - 直接计算各分类预算的总和（与预算管理页面保持一致）\n\t\t\ttotalBudget() {\n\t\t\t\treturn this.categoryBudgets.reduce((sum, budget) => {\n\t\t\t\t\t// 直接累加预算金额，不进行时间单位转换\n\t\t\t\t\treturn sum + (budget.budgetAmount || 0)\n\t\t\t\t}, 0)\n\t\t\t},\n\t\t\t\n\t\t\t// 已使用金额 - 统一使用分类预算的计算方式\n\t\t\tusedAmount() {\n\t\t\t\t// 直接使用各分类预算的已使用金额总和\n\t\t\t\t// 这样确保首页和预算管理页面的计算方式完全一致\n\t\t\t\tconst total = this.categoryBudgets.reduce((sum, budget) => {\n\t\t\t\t\treturn sum + (budget.spentAmount || 0)\n\t\t\t\t}, 0)\n\t\t\t\tconsole.log('首页计算已使用金额(统一方式):', total)\n\t\t\t\treturn total\n\t\t\t},\n\t\t\t\n\t\t\t// 剩余金额 - 与预算管理页面保持一致\n\t\t\tremainingAmount() {\n\t\t\t\treturn this.totalBudget - this.usedAmount\n\t\t\t},\n\t\t\t\n\t\t\t// 使用进度百分比 - 与预算管理页面保持一致\n\t\t\tprogressPercentage() {\n\t\t\t\tif (this.totalBudget === 0) return 0\n\t\t\t\treturn Math.min((this.usedAmount / this.totalBudget) * 100, 100)\n\t\t\t},\n\t\t\t\n\t\t\t// 计算预算信息（始终基于本月数据，不受筛选条件影响）\n\t\t\tcalculateBudgetInfo() {\n\t\t\t\t// 计算本月剩余天数\n\t\t\t\tconst now = new Date()\n\t\t\t\tconst year = now.getFullYear()\n\t\t\t\tconst month = now.getMonth()\n\t\t\t\tconst lastDay = new Date(year, month + 1, 0).getDate()\n\t\t\t\tconst currentDay = now.getDate()\n\t\t\t\tconst remainingDays = lastDay - currentDay + 1\n\t\t\t\t\n\t\t\t\t// 计算日均可花费\n\t\t\t\tconst dailyAverage = remainingDays > 0 ? this.remainingAmount / remainingDays : 0\n\t\t\t\t\n\t\t\t\treturn {\n\t\t\t\t\ttotalBudget: this.totalBudget,\n\t\t\t\t\tusedAmount: this.usedAmount,\n\t\t\t\t\tremainingAmount: this.remainingAmount,\n\t\t\t\t\tprogress: this.progressPercentage,\n\t\t\t\t\tremainingDays,\n\t\t\t\t\tdailyAverage: Math.max(dailyAverage, 0)\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\n\t\tonLoad() {\n\t\t\tthis.loadData()\n\t\t},\n\t\tonShow() {\n\t\t\tthis.loadData()\n\t\t},\n\t\tmethods: {\n\t\t\t// 获取预算进度显示文本\n\t\t\tgetBudgetProgressDisplayText() {\n\t\t\t\tconst progress = this.calculateBudgetInfo.progress\n\t\t\t\tif (progress >= 100) {\n\t\t\t\t\treturn '已用完'\n\t\t\t\t} else {\n\t\t\t\t\treturn Math.round(progress) + '%'\n\t\t\t\t}\n\t\t\t},\n\t\t\t\n\t\t\tloadData() {\n\t\t\t\t// 从本地存储加载数据\n\t\t\t\tconst records = uni.getStorageSync('records') || []\n\t\t\t\tthis.allRecords = records.sort((a, b) => new Date(b.time) - new Date(a.time))\n\t\t\t\t\n\t\t\t\t// 加载预算数据 - 与预算管理页面保持一致\n\t\t\t\tthis.loadBudgetData()\n\t\t\t\t\n\t\t\t\t// 加载当前月份的记录 - 与预算管理页面保持一致\n\t\t\t\tthis.loadCurrentMonthRecords()\n\t\t\t\t\n\t\t\t\t// 计算各分类的支出 - 与预算管理页面保持一致\n\t\t\t\tthis.calculateCategorySpending()\n\t\t\t\t\n\t\t\t\t// 加载分类数据\n\t\t\t\tthis.loadCategories()\n\t\t\t\t\n\t\t\t\t// 默认筛选本月数据\n\t\t\t\tthis.selectedTimeIndex = 3 // 本月\n\t\t\t\t\n\t\t\t\tthis.updateCategoryOptions()\n\t\t\t\tthis.filterRecords()\n\t\t\t\tthis.calculateMonthSummary()\n\t\t\t},\n\t\t\t\n\t\t\t// 加载预算数据 - 与预算管理页面保持一致\n\t\t\tloadBudgetData() {\n\t\t\t\tconst savedCategoryBudgets = uni.getStorageSync('categoryBudgets')\n\t\t\t\t\n\t\t\t\tif (savedCategoryBudgets && Array.isArray(savedCategoryBudgets)) {\n\t\t\t\t\tthis.categoryBudgets = savedCategoryBudgets\n\t\t\t\t}\n\t\t\t},\n\t\t\t\n\t\t\t// 加载当前月份的记录 - 与预算管理页面保持一致\n\t\t\tloadCurrentMonthRecords() {\n\t\t\t\tconst allRecords = uni.getStorageSync('records') || []\n\t\t\t\t\n\t\t\t\tconst currentDate = new Date()\n\t\t\t\tconst currentYear = currentDate.getFullYear()\n\t\t\t\tconst currentMonth = currentDate.getMonth()\n\t\t\t\t\n\t\t\t\tthis.currentMonthRecords = allRecords.filter(record => {\n\t\t\t\t\tconst recordDate = new Date(record.time)\n\t\t\t\t\treturn recordDate.getFullYear() === currentYear && recordDate.getMonth() === currentMonth\n\t\t\t\t})\n\t\t\t},\n\t\t\t\n\t\t\t// 加载分类数据\n\t\t\tloadCategories() {\n\t\t\t\t// 默认分类数据\n\t\t\t\tconst defaultExpenseCategories = [\n\t\t\t\t\t{id: 1, name: '餐饮', icon: '🍽️'},\n\t\t\t\t\t{id: 2, name: '交通', icon: '🚗'},\n\t\t\t\t\t{id: 3, name: '购物', icon: '🛍️'},\n\t\t\t\t\t{id: 4, name: '娱乐', icon: '🎬'},\n\t\t\t\t\t{id: 5, name: '住房', icon: '🏠'},\n\t\t\t\t\t{id: 6, name: '医疗', icon: '💊'},\n\t\t\t\t\t{id: 7, name: '教育', icon: '📚'},\n\t\t\t\t\t{id: 8, name: '通讯', icon: '📱'},\n\t\t\t\t\t{id: 9, name: '服装', icon: '👕'},\n\t\t\t\t\t{id: 10, name: '其他', icon: '📦'}\n\t\t\t\t]\n\t\t\t\t\n\t\t\t\tconst defaultIncomeCategories = [\n\t\t\t\t\t{id: 11, name: '工资', icon: '💰'},\n\t\t\t\t\t{id: 12, name: '奖金', icon: '🎁'},\n\t\t\t\t\t{id: 13, name: '投资', icon: '📈'},\n\t\t\t\t\t{id: 14, name: '兼职', icon: '💼'},\n\t\t\t\t\t{id: 15, name: '红包', icon: '🧧'},\n\t\t\t\t\t{id: 16, name: '退款', icon: '↩️'},\n\t\t\t\t\t{id: 17, name: '其他', icon: '💎'}\n\t\t\t\t]\n\t\t\t\t\n\t\t\t\t// 从本地存储加载，如果没有则使用默认数据\n\t\t\t\tlet expenseCategories = uni.getStorageSync('expenseCategories')\n\t\t\t\tlet incomeCategories = uni.getStorageSync('incomeCategories')\n\t\t\t\t\n\t\t\t\tif (!expenseCategories || expenseCategories.length === 0) {\n\t\t\t\t\texpenseCategories = defaultExpenseCategories\n\t\t\t\t\tuni.setStorageSync('expenseCategories', expenseCategories)\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (!incomeCategories || incomeCategories.length === 0) {\n\t\t\t\t\tincomeCategories = defaultIncomeCategories\n\t\t\t\t\tuni.setStorageSync('incomeCategories', incomeCategories)\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tthis.expenseCategories = expenseCategories\n\t\t\t\tthis.incomeCategories = incomeCategories\n\t\t\t},\n\t\t\t\n\t\t\t// 更新分类选项\n\t\t\tupdateCategoryOptions() {\n\t\t\t\tlet categories = ['全部分类']\n\t\t\t\t\n\t\t\t\tif (this.selectedTypeIndex === 1) {\n\t\t\t\t\t// 支出类型，显示支出分类\n\t\t\t\t\tcategories = categories.concat(this.expenseCategories.map(cat => cat.name))\n\t\t\t\t} else if (this.selectedTypeIndex === 2) {\n\t\t\t\t\t// 收入类型，显示收入分类\n\t\t\t\t\tcategories = categories.concat(this.incomeCategories.map(cat => cat.name))\n\t\t\t\t} else {\n\t\t\t\t\t// 全部类型，显示所有分类\n\t\t\t\t\tcategories = categories.concat(this.expenseCategories.map(cat => cat.name))\n\t\t\t\t\tcategories = categories.concat(this.incomeCategories.map(cat => cat.name))\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tthis.categoryOptions = categories\n\t\t\t\t// 如果当前选择的分类不在新的选项中，重置为\"全部分类\"\n\t\t\t\tif (this.selectedCategoryIndex >= this.categoryOptions.length) {\n\t\t\t\t\tthis.selectedCategoryIndex = 0\n\t\t\t\t}\n\t\t\t},\n\t\t\t\n\t\t\t// 筛选记录\n\t\t\tfilterRecords() {\n\t\t\t\tlet filteredRecords = this.allRecords\n\t\t\t\t\n\t\t\t\t// 时间筛选\n\t\t\t\tif (this.selectedTimeIndex > 0) {\n\t\t\t\t\tfilteredRecords = this.filterByTime(filteredRecords)\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// 类型筛选\n\t\t\t\tif (this.selectedTypeIndex > 0) {\n\t\t\t\t\tconst type = this.selectedTypeIndex === 1 ? 'expense' : 'income'\n\t\t\t\t\tfilteredRecords = filteredRecords.filter(record => record.type === type)\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// 分类筛选\n\t\t\t\tif (this.selectedCategoryIndex > 0) {\n\t\t\t\t\tconst categoryName = this.categoryOptions[this.selectedCategoryIndex]\n\t\t\t\t\tfilteredRecords = filteredRecords.filter(record => record.categoryName === categoryName)\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tthis.records = filteredRecords\n\t\t\t\t\n\t\t\t\t// 重置分页状态\n\t\t\t\tthis.currentPage = 1\n\t\t\t\tthis.hasMore = true\n\t\t\t\t\n\t\t\t\t// 按日期分组并分页显示\n\t\t\t\tthis.groupRecordsByDate()\n\t\t\t\t\n\t\t\t\t// 重新计算统计数据（包括预算数据）\n\t\t\t\tthis.calculateMonthSummary()\n\t\t\t},\n\t\t\t\n\t\t\t// 按时间筛选\n\t\t\tfilterByTime(records) {\n\t\t\t\tconst now = new Date()\n\t\t\t\tconst today = new Date(now.getFullYear(), now.getMonth(), now.getDate())\n\t\t\t\t\n\t\t\t\treturn records.filter(record => {\n\t\t\t\t\tconst recordDate = new Date(record.time)\n\t\t\t\t\tconst recordDay = new Date(recordDate.getFullYear(), recordDate.getMonth(), recordDate.getDate())\n\t\t\t\t\t\n\t\t\t\t\tswitch(this.selectedTimeIndex) {\n\t\t\t\t\t\tcase 1: // 今天\n\t\t\t\t\t\t\treturn recordDay.getTime() === today.getTime()\n\t\t\t\t\t\tcase 2: // 本周\n\t\t\t\t\t\t\tconst weekStart = new Date(today)\n\t\t\t\t\t\t\tweekStart.setDate(today.getDate() - today.getDay())\n\t\t\t\t\t\t\treturn recordDate >= weekStart\n\t\t\t\t\t\tcase 3: // 本月\n\t\t\t\t\t\t\treturn recordDate.getFullYear() === now.getFullYear() && \n\t\t\t\t\t\t\t\t   recordDate.getMonth() === now.getMonth()\n\t\t\t\t\t\tcase 4: // 本年\n\t\t\t\t\t\t\treturn recordDate.getFullYear() === now.getFullYear()\n\t\t\t\t\t\tcase 5: // 自定义范围\n\t\t\t\t\t\t\tif (!this.customStartDate || !this.customEndDate) {\n\t\t\t\t\t\t\t\treturn true // 如果没有设置日期范围，显示所有记录\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tconst startDate = new Date(this.customStartDate)\n\t\t\t\t\t\t\tconst endDate = new Date(this.customEndDate + ' 23:59:59') // 包含结束日期的全天\n\t\t\t\t\t\t\treturn recordDate >= startDate && recordDate <= endDate\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\treturn true\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t},\n\t\t\t\n\t\t\t// 时间筛选变化\n\t\t\tonTimeChange(e) {\n\t\t\t\tthis.selectedTimeIndex = e.detail.value\n\t\t\t\t// 如果切换到非自定义范围，清空自定义日期\n\t\t\t\tif (this.selectedTimeIndex !== 5) {\n\t\t\t\t\tthis.customStartDate = ''\n\t\t\t\t\tthis.customEndDate = ''\n\t\t\t\t} else {\n\t\t\t\t\t// 如果选择自定义范围，弹出日期选择器\n\t\t\t\t\tthis.showCustomDatePicker()\n\t\t\t\t}\n\t\t\t\tthis.filterRecords()\n\t\t\t},\n\t\t\t\n\t\t\t// 显示自定义日期选择器\n\t\t\tshowCustomDatePicker() {\n\t\t\t\t// 先选择开始日期\n\t\t\t\tuni.showModal({\n\t\t\t\t\ttitle: '选择时间范围',\n\t\t\t\t\tcontent: '请先选择开始日期，然后选择结束日期',\n\t\t\t\t\tshowCancel: false,\n\t\t\t\t\tsuccess: () => {\n\t\t\t\t\t\t// 可以在这里添加日期选择逻辑，或者让用户在筛选区域手动选择\n\t\t\t\t\t\t// 由于uni-app的限制，这里主要是提示用户\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t},\n\t\t\t\n\t\t\t// 按日期分组记录\n\t\t\tgroupRecordsByDate() {\n\t\t\t\tconst groupedMap = new Map()\n\t\t\t\t\n\t\t\t\t// 获取当前页应该显示的记录\n\t\t\t\tconst totalRecords = this.records\n\t\t\t\tconst startIndex = 0\n\t\t\t\tconst endIndex = this.currentPage * this.pageSize\n\t\t\t\tconst displayRecords = totalRecords.slice(startIndex, endIndex)\n\t\t\t\t\n\t\t\t\t// 检查是否还有更多数据\n\t\t\t\tthis.hasMore = endIndex < totalRecords.length\n\t\t\t\t\n\t\t\t\t// 按日期分组\n\t\t\t\tdisplayRecords.forEach(record => {\n\t\t\t\t\tconst date = new Date(record.time)\n\t\t\t\t\tconst dateKey = `${date.getFullYear()}-${String(date.getMonth() + 1).padStart(2, '0')}-${String(date.getDate()).padStart(2, '0')}`\n\t\t\t\t\t\n\t\t\t\t\tif (!groupedMap.has(dateKey)) {\n\t\t\t\t\t\tgroupedMap.set(dateKey, {\n\t\t\t\t\t\t\tdate: dateKey,\n\t\t\t\t\t\t\tdateText: this.formatDateText(date),\n\t\t\t\t\t\t\tweekday: this.getWeekday(date),\n\t\t\t\t\t\t\trecords: [],\n\t\t\t\t\t\t\ttotalExpense: 0,\n\t\t\t\t\t\t\ttotalIncome: 0\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tconst group = groupedMap.get(dateKey)\n\t\t\t\t\tgroup.records.push(record)\n\t\t\t\t\t\n\t\t\t\t\tif (record.type === 'expense') {\n\t\t\t\t\t\tgroup.totalExpense = this.moneyCalculator.add(group.totalExpense, parseFloat(record.amount))\n\t\t\t\t\t} else {\n\t\t\t\t\t\tgroup.totalIncome = this.moneyCalculator.add(group.totalIncome, parseFloat(record.amount))\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t\n\t\t\t\t// 转换为数组并按日期倒序排列\n\t\t\t\tthis.groupedRecords = Array.from(groupedMap.values()).map(group => ({\n\t\t\t\t\t...group,\n\t\t\t\t\ttotalExpense: this.moneyCalculator.format(group.totalExpense),\n\t\t\t\t\ttotalIncome: this.moneyCalculator.format(group.totalIncome)\n\t\t\t\t})).sort((a, b) => new Date(b.date) - new Date(a.date))\n\t\t\t},\n\t\t\t\n\t\t\t// 格式化日期显示文本\n\t\t\tformatDateText(date) {\n\t\t\t\tconst now = new Date()\n\t\t\t\tconst today = new Date(now.getFullYear(), now.getMonth(), now.getDate())\n\t\t\t\tconst yesterday = new Date(today.getTime() - 24 * 60 * 60 * 1000)\n\t\t\t\tconst recordDate = new Date(date.getFullYear(), date.getMonth(), date.getDate())\n\t\t\t\t\n\t\t\t\tif (recordDate.getTime() === today.getTime()) {\n\t\t\t\t\treturn '今天'\n\t\t\t\t} else if (recordDate.getTime() === yesterday.getTime()) {\n\t\t\t\t\treturn '昨天'\n\t\t\t\t} else if (now.getFullYear() === date.getFullYear()) {\n\t\t\t\t\treturn `${date.getMonth() + 1}月${date.getDate()}日`\n\t\t\t\t} else {\n\t\t\t\t\treturn `${date.getFullYear()}年${date.getMonth() + 1}月${date.getDate()}日`\n\t\t\t\t}\n\t\t\t},\n\t\t\t\n\t\t\t// 获取星期几\n\t\t\tgetWeekday(date) {\n\t\t\t\tconst weekdays = ['周日', '周一', '周二', '周三', '周四', '周五', '周六']\n\t\t\t\treturn weekdays[date.getDay()]\n\t\t\t},\n\t\t\t\n\t\t\t// 加载更多数据（滚动到底部自动触发）\n\t\t\tloadMore() {\n\t\t\t\tif (this.isLoading || !this.hasMore) return\n\t\t\t\t\n\t\t\t\tthis.isLoading = true\n\t\t\t\t\n\t\t\t\t// 模拟网络延迟，实际项目中这里是网络请求\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tthis.currentPage++\n\t\t\t\t\tthis.groupRecordsByDate()\n\t\t\t\t\tthis.isLoading = false\n\t\t\t\t}, 800) // 增加一点延迟，让用户看到加载状态\n\t\t\t},\n\t\t\t\n\t\t\t// 只格式化时间部分（不包括日期）\n\t\t\tformatTimeOnly(timeStr) {\n\t\t\t\tconst date = new Date(timeStr)\n\t\t\t\treturn `${date.getHours().toString().padStart(2, '0')}:${date.getMinutes().toString().padStart(2, '0')}`\n\t\t\t},\n\t\t\t\n\t\t\t// 开始日期选择\n\t\t\tonStartDateChange(e) {\n\t\t\t\tthis.customStartDate = e.detail.value\n\t\t\t\t// 如果结束日期早于开始日期，自动调整结束日期\n\t\t\t\tif (this.customEndDate && this.customEndDate < this.customStartDate) {\n\t\t\t\t\tthis.customEndDate = this.customStartDate\n\t\t\t\t}\n\t\t\t\tthis.filterRecords()\n\t\t\t},\n\t\t\t\n\t\t\t// 结束日期选择\n\t\t\tonEndDateChange(e) {\n\t\t\t\tthis.customEndDate = e.detail.value\n\t\t\t\t// 如果结束日期早于开始日期，自动调整开始日期\n\t\t\t\tif (this.customStartDate && this.customEndDate < this.customStartDate) {\n\t\t\t\t\tthis.customStartDate = this.customEndDate\n\t\t\t\t}\n\t\t\t\tthis.filterRecords()\n\t\t\t},\n\t\t\t\n\t\t\t// 类型筛选变化\n\t\t\tonTypeChange(e) {\n\t\t\t\tthis.selectedTypeIndex = e.detail.value\n\t\t\t\tthis.selectedCategoryIndex = 0 // 重置分类选择\n\t\t\t\tthis.updateCategoryOptions()\n\t\t\t\tthis.filterRecords()\n\t\t\t},\n\t\t\t\n\t\t\t// 分类筛选变化\n\t\t\tonCategoryChange(e) {\n\t\t\t\tthis.selectedCategoryIndex = e.detail.value\n\t\t\t\tthis.filterRecords()\n\t\t\t},\n\t\t\t\n\t\t\tcalculateMonthSummary() {\n\t\t\t\t// 根据筛选条件获取记录\n\t\t\t\tlet filteredRecords = this.allRecords\n\t\t\t\t\n\t\t\t\t// 应用时间筛选\n\t\t\t\tif (this.selectedTimeIndex > 0) {\n\t\t\t\t\tfilteredRecords = this.filterByTime(filteredRecords)\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// 应用类型筛选\n\t\t\t\tif (this.selectedTypeIndex > 0) {\n\t\t\t\t\tconst type = this.selectedTypeIndex === 1 ? 'expense' : 'income'\n\t\t\t\t\tfilteredRecords = filteredRecords.filter(record => record.type === type)\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// 应用分类筛选\n\t\t\t\tif (this.selectedCategoryIndex > 0) {\n\t\t\t\t\tconst categoryName = this.categoryOptions[this.selectedCategoryIndex]\n\t\t\t\t\tfilteredRecords = filteredRecords.filter(record => record.categoryName === categoryName)\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tlet filteredExpense = 0\n\t\t\t\tlet filteredIncome = 0\n\t\t\t\tlet todayExpense = 0\n\t\t\t\tlet expenseDays = new Set() // 记录有支出的天数\n\t\t\t\t\n\t\t\t\t// 计算筛选后的统计数据\n\t\t\t\tfilteredRecords.forEach(record => {\n\t\t\t\t\tconst recordDate = new Date(record.time)\n\t\t\t\t\tconst recordDay = new Date(recordDate.getFullYear(), recordDate.getMonth(), recordDate.getDate())\n\t\t\t\t\t\n\t\t\t\t\tif (record.type === 'expense') {\n\t\t\t\t\t\tfilteredExpense = this.moneyCalculator.add(filteredExpense, parseFloat(record.amount))\n\t\t\t\t\t\texpenseDays.add(recordDay.getTime()) // 使用时间戳确保唯一性\n\t\t\t\t\t} else {\n\t\t\t\t\t\tfilteredIncome = this.moneyCalculator.add(filteredIncome, parseFloat(record.amount))\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t\n\t\t\t\t// 计算今日支出（基于原始数据，不受筛选影响）\n\t\t\t\tconst now = new Date()\n\t\t\t\tconst today = new Date(now.getFullYear(), now.getMonth(), now.getDate())\n\t\t\t\tthis.allRecords.forEach(record => {\n\t\t\t\t\tconst recordDate = new Date(record.time)\n\t\t\t\t\tconst recordDay = new Date(recordDate.getFullYear(), recordDate.getMonth(), recordDate.getDate())\n\t\t\t\t\tif (recordDay.getTime() === today.getTime() && record.type === 'expense') {\n\t\t\t\t\t\ttodayExpense = this.moneyCalculator.add(todayExpense, parseFloat(record.amount))\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t\n\t\t\t\tthis.monthExpense = this.moneyCalculator.format(filteredExpense)\n\t\t\t\tthis.monthIncome = this.moneyCalculator.format(filteredIncome)\n\t\t\t\tthis.monthBalance = this.moneyCalculator.format(this.moneyCalculator.subtract(filteredIncome, filteredExpense))\n\t\t\t\tthis.todayExpense = this.moneyCalculator.format(todayExpense)\n\t\t\t\tthis.totalRecords = filteredRecords.length\n\t\t\t\t\n\t\t\t\t// 计算平均日支出（基于筛选后的数据）\n\t\t\t\tconst expenseDaysCount = expenseDays.size\n\t\t\t\tthis.avgDailyExpense = expenseDaysCount > 0 ? \n\t\t\t\t\tthis.moneyCalculator.format(this.moneyCalculator.divide(filteredExpense, expenseDaysCount)) : '0.00'\n\t\t\t\t\n\t\t\t\t// 预算进度区域不受筛选条件影响，始终使用本月数据\n\t\t\t\t// 重新加载本月记录并计算预算数据\n\t\t\t\tthis.loadCurrentMonthRecords()\n\t\t\t\tthis.calculateCategorySpending()\n\t\t},\n\t\t\n\t\t\t\n\t\t\t// 获取当前时间范围文本（根据筛选条件）\n\t\t\tgetCurrentTimeRangeText() {\n\t\t\t\tswitch(this.selectedTimeIndex) {\n\t\t\t\t\tcase 0: // 全部时间\n\t\t\t\t\t\treturn this.getCurrentMonthRange()\n\t\t\t\t\tcase 1: // 今天\n\t\t\t\t\t\tconst today = new Date()\n\t\t\t\t\t\treturn this.formatSingleDate(today)\n\t\t\t\t\tcase 2: // 本周\n\t\t\t\t\t\treturn this.getCurrentWeekRange()\n\t\t\t\t\tcase 3: // 本月\n\t\t\t\t\t\treturn this.getCurrentMonthRange()\n\t\t\t\t\tcase 4: // 本年\n\t\t\t\t\t\treturn this.getCurrentYearRange()\n\t\t\t\t\tcase 5: // 自定义范围\n\t\t\t\t\t\tif (this.customStartDate && this.customEndDate) {\n\t\t\t\t\t\t\treturn this.formatCustomRange()\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn '请选择时间范围'\n\t\t\t\t\t\t}\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn this.getCurrentMonthRange()\n\t\t\t\t}\n\t\t\t},\n\t\t\t\n\t\t\t// 获取当前月份范围\n\t\t\tgetCurrentMonthRange() {\n\t\t\t\tconst now = new Date()\n\t\t\t\tconst year = now.getFullYear()\n\t\t\t\tconst month = now.getMonth()\n\t\t\t\t\n\t\t\t\tconst firstDay = new Date(year, month, 1)\n\t\t\t\tconst lastDay = new Date(year, month + 1, 0)\n\t\t\t\t\n\t\t\t\tconst formatDate = (date) => {\n\t\t\t\t\tconst y = date.getFullYear()\n\t\t\t\t\tconst m = String(date.getMonth() + 1).padStart(2, '0')\n\t\t\t\t\tconst d = String(date.getDate()).padStart(2, '0')\n\t\t\t\t\treturn `${y}年${m}月${d}日`\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\treturn `${formatDate(firstDay)}-${formatDate(lastDay)}`\n\t\t\t},\n\t\t\t\n\t\t\t// 获取本周范围\n\t\t\tgetCurrentWeekRange() {\n\t\t\t\tconst now = new Date()\n\t\t\t\tconst today = new Date(now.getFullYear(), now.getMonth(), now.getDate())\n\t\t\t\tconst weekStart = new Date(today)\n\t\t\t\tweekStart.setDate(today.getDate() - today.getDay())\n\t\t\t\tconst weekEnd = new Date(weekStart)\n\t\t\t\tweekEnd.setDate(weekStart.getDate() + 6)\n\t\t\t\t\n\t\t\t\tconst formatDate = (date) => {\n\t\t\t\t\tconst y = date.getFullYear()\n\t\t\t\t\tconst m = String(date.getMonth() + 1).padStart(2, '0')\n\t\t\t\t\tconst d = String(date.getDate()).padStart(2, '0')\n\t\t\t\t\treturn `${y}年${m}月${d}日`\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\treturn `${formatDate(weekStart)}-${formatDate(weekEnd)}`\n\t\t\t},\n\t\t\t\n\t\t\t// 获取本年范围\n\t\t\tgetCurrentYearRange() {\n\t\t\t\tconst now = new Date()\n\t\t\t\tconst year = now.getFullYear()\n\t\t\t\treturn `${year}年全年`\n\t\t\t},\n\t\t\t\n\t\t\t// 格式化单个日期\n\t\t\tformatSingleDate(date) {\n\t\t\t\tconst y = date.getFullYear()\n\t\t\t\tconst m = String(date.getMonth() + 1).padStart(2, '0')\n\t\t\t\tconst d = String(date.getDate()).padStart(2, '0')\n\t\t\t\treturn `${y}年${m}月${d}日 (今天)`\n\t\t\t},\n\t\t\t\n\t\t\t// 格式化自定义范围\n\t\t\tformatCustomRange() {\n\t\t\t\tconst startDate = new Date(this.customStartDate)\n\t\t\t\tconst endDate = new Date(this.customEndDate)\n\t\t\t\t\n\t\t\t\tconst formatDate = (date) => {\n\t\t\t\t\tconst y = date.getFullYear()\n\t\t\t\t\tconst m = String(date.getMonth() + 1).padStart(2, '0')\n\t\t\t\t\tconst d = String(date.getDate()).padStart(2, '0')\n\t\t\t\t\treturn `${y}年${m}月${d}日`\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (this.customStartDate === this.customEndDate) {\n\t\t\t\t\treturn formatDate(startDate)\n\t\t\t\t} else {\n\t\t\t\t\treturn `${formatDate(startDate)}-${formatDate(endDate)}`\n\t\t\t\t}\n\t\t\t},\n\t\t\t\n\t\t\t// 切换时间筛选器\n\t\t\ttoggleTimeFilter() {\n\t\t\t\t// 创建一个动作表，让用户选择时间范围\n\t\t\t\tuni.showActionSheet({\n\t\t\t\t\titemList: this.timeOptions,\n\t\t\t\t\tsuccess: (res) => {\n\t\t\t\t\t\tif (res.tapIndex !== this.selectedTimeIndex) {\n\t\t\t\t\t\t\tthis.selectedTimeIndex = res.tapIndex\n\t\t\t\t\t\t\tthis.onTimeChange({ detail: { value: res.tapIndex } })\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t},\n\t\t\t\n\t\t\tgoToAdd() {\n\t\t\t\tuni.navigateTo({\n\t\t\t\t\turl: '/pages/add/add'\n\t\t\t\t})\n\t\t\t},\n\t\t\t\n\t\t\tgoToChat() {\n\t\t\t\tuni.switchTab({\n\t\t\t\t\turl: '/pages/chat/chat'\n\t\t\t\t})\n\t\t\t},\n\t\t\t\n\t\t\tshowRecordDetail(record) {\n\t\t\t\tuni.showModal({\n\t\t\t\t\ttitle: '记录详情',\n\t\t\t\t\tcontent: `分类：${record.categoryName}\\n金额：${record.type === 'expense' ? '-' : '+'}¥${record.amount}\\n备注：${record.note || '无'}\\n时间：${this.formatTime(record.time)}`,\n\t\t\t\t\tshowCancel: false\n\t\t\t\t})\n\t\t\t},\n\t\t\t\n\t\t\tformatTime(timeStr) {\n\t\t\t\tconst date = new Date(timeStr)\n\t\t\t\tconst now = new Date()\n\t\t\t\tconst today = new Date(now.getFullYear(), now.getMonth(), now.getDate())\n\t\t\t\tconst yesterday = new Date(today.getTime() - 24 * 60 * 60 * 1000)\n\t\t\t\tconst recordDate = new Date(date.getFullYear(), date.getMonth(), date.getDate())\n\t\t\t\t\n\t\t\t\tif (recordDate.getTime() === today.getTime()) {\n\t\t\t\t\treturn `今天 ${date.getHours().toString().padStart(2, '0')}:${date.getMinutes().toString().padStart(2, '0')}`\n\t\t\t\t} else if (recordDate.getTime() === yesterday.getTime()) {\n\t\t\t\t\treturn `昨天 ${date.getHours().toString().padStart(2, '0')}:${date.getMinutes().toString().padStart(2, '0')}`\n\t\t\t\t} else {\n\t\t\t\t\treturn `${date.getMonth() + 1}-${date.getDate()} ${date.getHours().toString().padStart(2, '0')}:${date.getMinutes().toString().padStart(2, '0')}`\n\t\t\t\t}\n\t\t\t},\n\t\t\t\n\t\t\t// 触摸开始\n\t\t\tonTouchStart(e, id) {\n\t\t\t\tthis.touchData[id] = {\n\t\t\t\t\tstartX: e.touches[0].clientX,\n\t\t\t\t\tstartY: e.touches[0].clientY,\n\t\t\t\t\ttranslateX: this.touchData[id] ? this.touchData[id].translateX || 0 : 0\n\t\t\t\t}\n\t\t\t},\n\t\t\t\n\t\t\t// 触摸移动\n\t\t\tonTouchMove(e, id) {\n\t\t\t\tif (!this.touchData[id]) return\n\t\t\t\t\n\t\t\t\tconst touch = e.touches[0]\n\t\t\t\tconst deltaX = touch.clientX - this.touchData[id].startX\n\t\t\t\tconst deltaY = touch.clientY - this.touchData[id].startY\n\t\t\t\t\n\t\t\t\t// 如果垂直滑动距离大于水平滑动距离，则不处理（让页面正常滚动）\n\t\t\t\tif (Math.abs(deltaY) > Math.abs(deltaX)) {\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// 阻止默认滚动\n\t\t\t\te.preventDefault()\n\t\t\t\t\n\t\t\t\tlet newTranslateX = this.touchData[id].translateX + deltaX\n\t\t\t\t\n\t\t\t\t// 限制滑动范围：向左滑动最多露出编辑和删除按钮（-160px），向右滑动不能超过原位置（0px）\n\t\t\t\tif (newTranslateX > 0) {\n\t\t\t\t\tnewTranslateX = 0\n\t\t\t\t} else if (newTranslateX < -160) {\n\t\t\t\t\tnewTranslateX = -160\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tthis.$set(this.touchData, id, {\n\t\t\t\t\t...this.touchData[id],\n\t\t\t\t\ttranslateX: newTranslateX\n\t\t\t\t})\n\t\t\t},\n\t\t\t\n\t\t\t// 触摸结束\n\t\t\tonTouchEnd(e, id) {\n\t\t\t\tif (!this.touchData[id]) return\n\t\t\t\t\n\t\t\t\tconst translateX = this.touchData[id].translateX\n\t\t\t\t\n\t\t\t\t// 根据滑动距离决定最终位置\n\t\t\t\tif (translateX < -80) {\n\t\t\t\t\t// 滑动距离超过一半，显示编辑和删除按钮\n\t\t\t\t\tthis.$set(this.touchData, id, {\n\t\t\t\t\t\t...this.touchData[id],\n\t\t\t\t\t\ttranslateX: -160\n\t\t\t\t\t})\n\t\t\t\t} else {\n\t\t\t\t\t// 滑动距离不够，回到原位置\n\t\t\t\t\tthis.$set(this.touchData, id, {\n\t\t\t\t\t\t...this.touchData[id],\n\t\t\t\t\t\ttranslateX: 0\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t},\n\t\t\t\n\t\t\t// 获取translateX值\n\t\t\tgetTranslateX(id) {\n\t\t\t\treturn this.touchData[id] ? this.touchData[id].translateX || 0 : 0\n\t\t\t},\n\t\t\t\n\t\t\t// 编辑记录\n\t\t\teditRecord(record) {\n\t\t\t\t// 收回滑动状态\n\t\t\t\tthis.$set(this.touchData, record.id, { translateX: 0 })\n\t\t\t\t\n\t\t\t\t// 跳转到添加页面，传递记录ID进行编辑\n\t\t\t\tuni.navigateTo({\n\t\t\t\t\turl: `/pages/add/add?editId=${record.id}`\n\t\t\t\t})\n\t\t\t},\n\t\t\t\n\t\t\t// 删除记录\n\t\t\tdeleteRecord(record) {\n\t\t\t\tuni.showModal({\n\t\t\t\t\ttitle: '确认删除',\n\t\t\t\t\tcontent: `确定要删除这条记录吗？\\n${record.categoryName} ${record.type === 'expense' ? '-' : '+'}¥${record.amount}`,\n\t\t\t\t\tsuccess: (res) => {\n\t\t\t\t\t\tif (res.confirm) {\n\t\t\t\t\t\t\t// 从存储中删除\n\t\t\t\t\t\t\tlet records = uni.getStorageSync('records') || []\n\t\t\t\t\t\t\trecords = records.filter(item => item.id !== record.id)\n\t\t\t\t\t\t\tuni.setStorageSync('records', records)\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t// 重置该项的滑动状态\n\t\t\t\t\t\t\tthis.$set(this.touchData, record.id, { translateX: 0 })\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t// 重新加载数据\n\t\t\t\t\t\t\tthis.loadData()\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tuni.showToast({\n\t\t\t\t\t\t\t\ttitle: '删除成功',\n\t\t\t\t\t\t\t\ticon: 'success',\n\t\t\t\t\t\t\t\tduration: 1500\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// 取消删除，收回删除按钮\n\t\t\t\t\t\t\tthis.$set(this.touchData, record.id, { translateX: 0 })\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t},\n\t\t\t\n\t\t\t// ============= 预算相关方法 (与budget-manage.vue保持一致) =============\n\t\t\t\n\t\t\t// 将不同时间单位的预算转换为月预算\n\t\t\tconvertToMonthlyBudget(amount, timeUnit) {\n\t\t\t\tconst unit = this.timeUnits.find(u => u.key === timeUnit) || this.timeUnits.find(u => u.key === 'month')\n\t\t\t\treturn amount * unit.factor\n\t\t\t},\n\t\t\t\n\t\t\t// 获取用于比较当期支出的预算基准\n\t\t\tgetBudgetBaseline(amount, timeUnit) {\n\t\t\t\tswitch(timeUnit) {\n\t\t\t\t\tcase 'day':\n\t\t\t\t\t\t// 日预算：当月天数 × 日预算\n\t\t\t\t\t\tconst currentDate = new Date()\n\t\t\t\t\t\tconst daysInMonth = new Date(currentDate.getFullYear(), currentDate.getMonth() + 1, 0).getDate()\n\t\t\t\t\t\treturn amount * daysInMonth\n\t\t\t\t\tcase 'month':\n\t\t\t\t\t\t// 月预算：直接使用\n\t\t\t\t\t\treturn amount\n\t\t\t\t\tcase 'quarter':\n\t\t\t\t\t\t// 季预算：直接使用原始金额\n\t\t\t\t\t\treturn amount\n\t\t\t\t\tcase 'year':\n\t\t\t\t\t\t// 年预算：直接使用原始金额\n\t\t\t\t\t\treturn amount\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn amount\n\t\t\t\t}\n\t\t\t},\n\t\t\t\n\t\t\t// 计算各分类的支出 - 与预算管理页面保持一致\n\t\t\tcalculateCategorySpending() {\n\t\t\t\tconsole.log('首页开始计算分类支出，预算分类数量:', this.categoryBudgets.length)\n\t\t\t\t\n\t\t\t\t// 为每个预算分类计算相应时间范围的支出\n\t\t\t\tthis.categoryBudgets.forEach(budget => {\n\t\t\t\t\t// 确保有时间单位，默认为月\n\t\t\t\t\tif (!budget.timeUnit) {\n\t\t\t\t\t\tbudget.timeUnit = 'month'\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tlet categorySpending = 0\n\t\t\t\t\t\n\t\t\t\t\t// 根据新的计算规则计算已使用金额\n\t\t\t\t\tif (budget.timeUnit === 'month') {\n\t\t\t\t\t\t// 月度分类：单月支出\n\t\t\t\t\t\tconst timeRangeRecords = this.getRecordsByTimeUnit(budget.timeUnit)\n\t\t\t\t\t\tcategorySpending = this.calculateCategorySpendingFromRecords(timeRangeRecords, budget)\n\t\t\t\t\t} else if (budget.timeUnit === 'quarter') {\n\t\t\t\t\t\t// 季度分类：从开始月份算起这个季度的整个支出\n\t\t\t\t\t\tconst timeRangeRecords = this.getRecordsByTimeUnit(budget.timeUnit, budget.quarterStartMonth)\n\t\t\t\t\t\tcategorySpending = this.calculateCategorySpendingFromRecords(timeRangeRecords, budget)\n\t\t\t\t\t} else if (budget.timeUnit === 'year') {\n\t\t\t\t\t\t// 年度分类：这一年的年度支出(1月1日开始)\n\t\t\t\t\t\tconst timeRangeRecords = this.getRecordsByTimeUnit(budget.timeUnit)\n\t\t\t\t\t\tcategorySpending = this.calculateCategorySpendingFromRecords(timeRangeRecords, budget)\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// 其他类型（如日）\n\t\t\t\t\t\tconst timeRangeRecords = this.getRecordsByTimeUnit(budget.timeUnit)\n\t\t\t\t\t\tcategorySpending = this.calculateCategorySpendingFromRecords(timeRangeRecords, budget)\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tconst timeUnitName = this.getTimeUnitName(budget.timeUnit)\n\t\t\t\t\tconst timeRangeDesc = this.getTimeRangeDesc(budget.timeUnit, budget.quarterStartMonth)\n\t\t\t\t\tconsole.log(`首页分类 ${budget.categoryName} ${timeRangeDesc} ${timeUnitName}支出:`, categorySpending)\n\t\t\t\t\tbudget.spentAmount = categorySpending\n\t\t\t\t})\n\t\t\t\t\n\t\t\t\t// 保存更新后的数据 - 与预算管理页面保持一致\n\t\t\t\tthis.saveCategoryBudgets()\n\t\t\t},\n\t\t\t\n\t\t\t// 根据时间单位获取相应时间范围的记录 - 与预算管理页面保持一致\n\t\t\tgetRecordsByTimeUnit(timeUnit, quarterStartMonth = null) {\n\t\t\t\tconst allRecords = uni.getStorageSync('records') || []\n\t\t\t\tconst currentDate = new Date()\n\t\t\t\tconst currentYear = currentDate.getFullYear()\n\t\t\t\tconst currentMonth = currentDate.getMonth() + 1 // 1-12\n\t\t\t\t\n\t\t\t\tswitch(timeUnit) {\n\t\t\t\t\tcase 'day':\n\t\t\t\t\t\t// 日预算：本月所有记录（日累计）\n\t\t\t\t\t\treturn this.currentMonthRecords\n\t\t\t\t\t\n\t\t\t\t\tcase 'month':\n\t\t\t\t\t\t// 月分类：从每个月1号开始计算支出\n\t\t\t\t\t\treturn allRecords.filter(record => {\n\t\t\t\t\t\t\tconst recordDate = new Date(record.time)\n\t\t\t\t\t\t\tconst recordYear = recordDate.getFullYear()\n\t\t\t\t\t\t\tconst recordMonth = recordDate.getMonth() + 1\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t// 只统计当前年月的记录\n\t\t\t\t\t\t\treturn recordYear === currentYear && recordMonth === currentMonth\n\t\t\t\t\t\t})\n\t\t\t\t\t\n\t\t\t\t\tcase 'quarter':\n\t\t\t\t\t\t// 季分类：连续季度计算，从开始月份开始每3个月为一个季度\n\t\t\t\t\t\tif (!quarterStartMonth) {\n\t\t\t\t\t\t\t// 如果没有指定开始月份，使用当前月份作为开始月份\n\t\t\t\t\t\t\tquarterStartMonth = currentMonth\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\t// 计算当前月份属于第几个季度（从开始月份算起）\n\t\t\t\t\t\tlet quarterNumber = 0\n\t\t\t\t\t\tif (currentMonth >= quarterStartMonth) {\n\t\t\t\t\t\t\t// 同一年内\n\t\t\t\t\t\t\tquarterNumber = Math.floor((currentMonth - quarterStartMonth) / 3)\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// 跨年情况\n\t\t\t\t\t\t\tquarterNumber = Math.floor((12 - quarterStartMonth + currentMonth) / 3)\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\t// 计算当前季度对应的3个月\n\t\t\t\t\t\tconst currentQuarterStartMonth = (quarterStartMonth + quarterNumber * 3 - 1) % 12 + 1\n\t\t\t\t\t\tconst month1 = currentQuarterStartMonth\n\t\t\t\t\t\tconst month2 = currentQuarterStartMonth + 1 > 12 ? currentQuarterStartMonth + 1 - 12 : currentQuarterStartMonth + 1\n\t\t\t\t\t\tconst month3 = currentQuarterStartMonth + 2 > 12 ? currentQuarterStartMonth + 2 - 12 : currentQuarterStartMonth + 2\n\t\t\t\t\t\t\n\t\t\t\t\t\tconsole.log(`首页季度计算: 开始月份${quarterStartMonth}, 当前月份${currentMonth}, 第${quarterNumber + 1}季度(${month1}-${month2}-${month3})`)\n\t\t\t\t\t\t\n\t\t\t\t\t\treturn allRecords.filter(record => {\n\t\t\t\t\t\t\tconst recordDate = new Date(record.time)\n\t\t\t\t\t\t\tconst recordYear = recordDate.getFullYear()\n\t\t\t\t\t\t\tconst recordMonth = recordDate.getMonth() + 1\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t// 计算记录属于第几个季度\n\t\t\t\t\t\t\tlet recordQuarterNumber = 0\n\t\t\t\t\t\t\tif (recordMonth >= quarterStartMonth) {\n\t\t\t\t\t\t\t\t// 同一年内\n\t\t\t\t\t\t\t\trecordQuarterNumber = Math.floor((recordMonth - quarterStartMonth) / 3)\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t// 跨年情况\n\t\t\t\t\t\t\t\trecordQuarterNumber = Math.floor((12 - quarterStartMonth + recordMonth) / 3)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t// 只统计当前季度的记录\n\t\t\t\t\t\t\tconst isCurrentQuarter = recordQuarterNumber === quarterNumber\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t// 处理跨年的情况\n\t\t\t\t\t\t\tlet isInQuarterRange = false\n\t\t\t\t\t\t\tif (currentQuarterStartMonth <= 10) {\n\t\t\t\t\t\t\t\t// 不跨年的季度 (如1-3月, 4-6月等)\n\t\t\t\t\t\t\t\tisInQuarterRange = recordYear === currentYear && \n\t\t\t\t\t\t\t\t\t\t\t\t   (recordMonth === month1 || recordMonth === month2 || recordMonth === month3)\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t// 跨年的季度 (如11-1月, 12-2月)\n\t\t\t\t\t\t\t\tisInQuarterRange = ((recordYear === currentYear && recordMonth >= currentQuarterStartMonth) ||\n\t\t\t\t\t\t\t\t\t\t\t\t    (recordYear === currentYear + 1 && recordMonth <= month3))\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\treturn isCurrentQuarter && isInQuarterRange\n\t\t\t\t\t\t})\n\t\t\t\t\t\n\t\t\t\t\tcase 'year':\n\t\t\t\t\t\t// 年分类：从1月1日开始计算\n\t\t\t\t\t\treturn allRecords.filter(record => {\n\t\t\t\t\t\t\tconst recordDate = new Date(record.time)\n\t\t\t\t\t\t\tconst recordYear = recordDate.getFullYear()\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t// 只统计当前年度的记录\n\t\t\t\t\t\t\treturn recordYear === currentYear\n\t\t\t\t\t\t})\n\t\t\t\t\t\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn this.currentMonthRecords\n\t\t\t\t}\n\t\t\t},\n\t\t\t\n\t\t\t// 从记录中计算特定分类的支出 - 与预算管理页面保持一致\n\t\t\tcalculateCategorySpendingFromRecords(records, budget) {\n\t\t\t\treturn records\n\t\t\t\t\t.filter(record => {\n\t\t\t\t\t\tconst isExpense = record.type === 'expense'\n\t\t\t\t\t\tconst isSameCategory = record.categoryId == budget.categoryId || record.categoryName === budget.categoryName\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (isExpense && isSameCategory) {\n\t\t\t\t\t\t\tconsole.log(`首页匹配到${this.getTimeUnitName(budget.timeUnit)}支出记录:`, {\n\t\t\t\t\t\t\t\tamount: record.amount,\n\t\t\t\t\t\t\t\tcategory: record.categoryName,\n\t\t\t\t\t\t\t\tdate: record.time,\n\t\t\t\t\t\t\t\ttimeUnit: budget.timeUnit\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\treturn isExpense && isSameCategory\n\t\t\t\t\t})\n\t\t\t\t\t.reduce((sum, record) => {\n\t\t\t\t\t\tconst amount = parseFloat(record.amount) || 0\n\t\t\t\t\t\treturn sum + amount\n\t\t\t\t\t}, 0)\n\t\t\t},\n\t\t\t\n\t\t\t// 获取时间范围描述（用于调试）- 与预算管理页面保持一致\n\t\t\tgetTimeRangeDesc(timeUnit, quarterStartMonth = null) {\n\t\t\t\tconst currentDate = new Date()\n\t\t\t\tconst currentYear = currentDate.getFullYear()\n\t\t\t\tconst currentMonth = currentDate.getMonth() + 1\n\t\t\t\t\n\t\t\t\tswitch(timeUnit) {\n\t\t\t\t\tcase 'day':\n\t\t\t\t\tcase 'month':\n\t\t\t\t\t\treturn `${currentYear}年${currentMonth}月`\n\t\t\t\t\tcase 'quarter':\n\t\t\t\t\t   if (quarterStartMonth) {\n\t\t\t\t\t\t   const m1 = this.monthNames[quarterStartMonth-1]\n\t\t\t\t\t\t   const m2 = this.monthNames[(quarterStartMonth) % 12]\n\t\t\t\t\t\t   const m3 = this.monthNames[(quarterStartMonth + 1) % 12]\n\t\t\t\t\t\t   return `${currentYear}年自定义季度(${m1}-${m2}-${m3})`\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconst quarter = Math.floor((currentMonth - 1) / 3) + 1\n\t\t\t\t\t\tconst quarterStart = (quarter - 1) * 3 + 1\n\t\t\t\t\t\tconst quarterEnd = quarter * 3\n\t\t\t\t\t\treturn `${currentYear}年第${quarter}季度(${quarterStart}-${quarterEnd}月)`\n\t\t\t\t\t}\n\t\t\t\t\tcase 'year':\n\t\t\t\t\t\treturn `${currentYear}年`\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn `${currentYear}年${currentMonth}月`\n\t\t\t\t}\n\t\t\t},\n\t\t\t\n\t\t\t// 获取时间单位名称\n\t\t\tgetTimeUnitName(timeUnit) {\n\t\t\t\tconst unit = this.timeUnits.find(u => u.key === timeUnit)\n\t\t\t\treturn unit ? unit.name : '月'\n\t\t\t},\n\t\t\t\n\t\t\t// 保存分类预算数据 - 与预算管理页面保持一致\n\t\t\tsaveCategoryBudgets() {\n\t\t\t\tuni.setStorageSync('categoryBudgets', this.categoryBudgets)\n\t\t\t},\n\t\t\t\n\t\t\t\n\t\t\t// 获取预算进度文本\n\t\t\tgetBudgetProgressText(spent, budget, timeUnit = 'month') {\n\t\t\t\tconst budgetBaseline = this.getBudgetBaseline(budget, timeUnit)\n\t\t\t\tif (budgetBaseline === 0) return '0%'\n\t\t\t\t\n\t\t\t\tconst percentage = (spent / budgetBaseline) * 100\n\t\t\t\t\n\t\t\t\tif (percentage >= 100) {\n\t\t\t\t\treturn '已用完'\n\t\t\t\t} else {\n\t\t\t\t\treturn percentage.toFixed(1) + '%'\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n</script>\n\n<style>\n\t/* 全局防止水平溢出 */\n\t* {\n\t\tmax-width: 100%;\n\t\tbox-sizing: border-box;\n\t}\n\t\n\t.container {\n\t\tpadding: 20rpx;\n\t\tbackground-color: #F5F5F5;\n\t\theight: 100vh;\n\t\tmax-width: 100vw;\n\t\toverflow-x: hidden;\n\t}\n\t\n\t.summary-card {\n\t\tbackground: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n\t\tborder-radius: 20rpx;\n\t\tpadding: 30rpx;\n\t\tmargin-bottom: 30rpx;\n\t\tposition: relative;\n\t\toverflow: hidden;\n\t\tbox-shadow: 0 10rpx 30rpx rgba(102, 126, 234, 0.3);\n\t\twidth: 100%;\n\t\tmax-width: 100%;\n\t}\n\t\n\t/* 时间范围头部 */\n\t.time-range-header {\n\t\tdisplay: flex;\n\t\tjustify-content: space-between;\n\t\talign-items: center;\n\t\tmargin-bottom: 25rpx;\n\t\tbackground: rgba(255, 255, 255, 0.15);\n\t\tpadding: 15rpx 20rpx;\n\t\tborder-radius: 25rpx;\n\t\tbackdrop-filter: blur(10rpx);\n\t\ttransition: all 0.3s ease;\n\t\tcursor: pointer;\n\t}\n\t\n\t.time-range-header:active {\n\t\ttransform: scale(0.98);\n\t\tbackground: rgba(255, 255, 255, 0.2);\n\t}\n\t\n\t.time-range-text {\n\t\tcolor: white;\n\t\tfont-size: 24rpx;\n\t\tfont-weight: 500;\n\t\ttext-shadow: 0 1rpx 2rpx rgba(0,0,0,0.1);\n\t}\n\t\n\t.time-range-icon {\n\t\twidth: 30rpx;\n\t\theight: 30rpx;\n\t\tborder-radius: 50%;\n\t\tbackground: rgba(255, 255, 255, 0.2);\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tjustify-content: center;\n\t\tcolor: white;\n\t\tfont-size: 16rpx;\n\t\ttransition: all 0.3s ease;\n\t}\n\t\n\t.time-range-header:active .time-range-icon {\n\t\tbackground: rgba(255, 255, 255, 0.3);\n\t\ttransform: scale(1.1);\n\t}\n\t\n\t/* 主要信息区域 */\n\t.main-info-section {\n\t\tdisplay: flex;\n\t\tjustify-content: space-between;\n\t\talign-items: flex-start;\n\t\tmargin-bottom: 30rpx;\n\t}\n\t\n\t.left-info {\n\t\tflex: 1;\n\t\tmargin-right: 20rpx;\n\t}\n\t\n\t.expense-section {\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tmargin-bottom: 10rpx;\n\t}\n\t\n\t.expense-label {\n\t\tcolor: #FFB3B3;\n\t\tfont-size: 28rpx;\n\t\tmargin-right: 10rpx;\n\t}\n\t\n\t.expense-icon {\n\t\twidth: 35rpx;\n\t\theight: 35rpx;\n\t\tbackground: #FF6B6B;\n\t\tborder-radius: 50%;\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tjustify-content: center;\n\t\tcolor: white;\n\t\tfont-size: 20rpx;\n\t\tfont-weight: bold;\n\t}\n\t\n\t.main-amount {\n\t\tcolor: white;\n\t\tfont-size: 48rpx;\n\t\tfont-weight: bold;\n\t\tmargin-bottom: 20rpx;\n\t\ttext-shadow: 0 2rpx 4rpx rgba(0,0,0,0.2);\n\t}\n\t\n\t.sub-amounts {\n\t\tdisplay: flex;\n\t\tgap: 30rpx;\n\t}\n\t\n\t.amount-item {\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t}\n\t\n\t.amount-label {\n\t\tcolor: rgba(255, 255, 255, 0.7);\n\t\tfont-size: 22rpx;\n\t\tmargin-bottom: 5rpx;\n\t}\n\t\n\t.amount-value {\n\t\tcolor: white;\n\t\tfont-size: 26rpx;\n\t\tfont-weight: 500;\n\t}\n\t\n\t.amount-value.positive {\n\t\tcolor: #B3FFD9;\n\t}\n\t\n\t.amount-value.negative {\n\t\tcolor: #FFB3B3;\n\t}\n\t\n\t/* 右侧聊天区域 */\n\t.right-info {\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\talign-items: center;\n\t\tposition: relative;\n\t}\n\t\n\t.chat-bubble {\n\t\tbackground: rgba(255, 255, 255, 0.9);\n\t\tpadding: 15rpx 20rpx;\n\t\tborder-radius: 20rpx;\n\t\tmargin-bottom: 15rpx;\n\t\tposition: relative;\n\t\tbox-shadow: 0 4rpx 15rpx rgba(0,0,0,0.1);\n\t\tmax-width: 200rpx;\n\t}\n\t\n\t.chat-text {\n\t\tcolor: #333;\n\t\tfont-size: 22rpx;\n\t\tline-height: 1.4;\n\t}\n\t\n\t.bubble-tail {\n\t\tposition: absolute;\n\t\tbottom: -8rpx;\n\t\tleft: 50%;\n\t\ttransform: translateX(-50%);\n\t\twidth: 0;\n\t\theight: 0;\n\t\tborder-left: 10rpx solid transparent;\n\t\tborder-right: 10rpx solid transparent;\n\t\tborder-top: 10rpx solid rgba(255, 255, 255, 0.9);\n\t}\n\t\n\t.avatar-container {\n\t\tposition: relative;\n\t}\n\t\n\t.avatar {\n\t\twidth: 80rpx;\n\t\theight: 80rpx;\n\t\tborder-radius: 50%;\n\t\tbackground: linear-gradient(45deg, #FFD93D, #FF6B6B);\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tjustify-content: center;\n\t\tbox-shadow: 0 6rpx 20rpx rgba(255, 107, 107, 0.3);\n\t\tborder: 4rpx solid rgba(255, 255, 255, 0.3);\n\t\ttransition: all 0.3s ease;\n\t}\n\t\n\t.avatar:active {\n\t\ttransform: scale(0.95);\n\t}\n\t\n\t.avatar-emoji {\n\t\tfont-size: 35rpx;\n\t}\n\t\n\t/* 预算进度区域 */\n\t.budget-section {\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tmargin-bottom: 25rpx;\n\t\tbackground: rgba(255, 255, 255, 0.1);\n\t\tpadding: 25rpx;\n\t\tborder-radius: 20rpx;\n\t\tbackdrop-filter: blur(10rpx);\n\t}\n\t\n\t.progress-container {\n\t\tmargin-right: 30rpx;\n\t}\n\t\n\t.progress-circle {\n\t\twidth: 120rpx;\n\t\theight: 120rpx;\n\t\tposition: relative;\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tjustify-content: center;\n\t}\n\t\n\t.progress-ring {\n\t\twidth: 100%;\n\t\theight: 100%;\n\t\tborder-radius: 50%;\n\t\tpadding: 8rpx;\n\t\tbox-sizing: border-box;\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tjustify-content: center;\n\t}\n\t\n\t.progress-inner {\n\t\twidth: 80rpx;\n\t\theight: 80rpx;\n\t\tborder-radius: 50%;\n\t\tbackground: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tjustify-content: center;\n\t\tbox-shadow: 0 2rpx 8rpx rgba(0,0,0,0.2);\n\t}\n\t\n\t.progress-text {\n\t\tcolor: white;\n\t\tfont-size: 22rpx;\n\t\tfont-weight: bold;\n\t\ttext-shadow: 0 1rpx 2rpx rgba(0,0,0,0.3);\n\t}\n\t\n\t.budget-details {\n\t\tflex: 1;\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\tgap: 12rpx;\n\t}\n\t\n\t.budget-item {\n\t\tdisplay: flex;\n\t\tjustify-content: space-between;\n\t\talign-items: center;\n\t}\n\t\n\t.budget-label {\n\t\tcolor: rgba(255, 255, 255, 0.8);\n\t\tfont-size: 24rpx;\n\t}\n\t\n\t.budget-value {\n\t\tcolor: white;\n\t\tfont-size: 26rpx;\n\t\tfont-weight: 500;\n\t}\n\t\n\t.budget-value.positive {\n\t\tcolor: #B3FFD9;\n\t}\n\t\n\t.budget-source {\n\t\tfont-size: 18rpx;\n\t\tcolor: rgba(255, 255, 255, 0.6);\n\t\tmargin-top: 3rpx;\n\t\tdisplay: block;\n\t}\n\t\n\t/* 其他统计信息 */\n\t.other-stats {\n\t\tdisplay: flex;\n\t\tjustify-content: space-between;\n\t\tbackground: rgba(255, 255, 255, 0.08);\n\t\tpadding: 20rpx;\n\t\tborder-radius: 15rpx;\n\t\tbackdrop-filter: blur(10rpx);\n\t}\n\t\n\t.stat-item {\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\talign-items: center;\n\t\tflex: 1;\n\t}\n\t\n\t.stat-label {\n\t\tcolor: rgba(255, 255, 255, 0.7);\n\t\tfont-size: 22rpx;\n\t\tmargin-bottom: 8rpx;\n\t}\n\t\n\t.stat-value {\n\t\tcolor: white;\n\t\tfont-size: 26rpx;\n\t\tfont-weight: 500;\n\t}\n\t\n\t.stat-value.expense {\n\t\tcolor: #FFB3B3;\n\t}\n\t\n\t.card-decoration {\n\t\tposition: absolute;\n\t\ttop: -100rpx;\n\t\tright: -100rpx;\n\t\twidth: 200rpx;\n\t\theight: 200rpx;\n\t\tbackground: rgba(255, 255, 255, 0.1);\n\t\tborder-radius: 50%;\n\t\tz-index: 0;\n\t}\n\t\n\t.card-decoration::before {\n\t\tcontent: '';\n\t\tposition: absolute;\n\t\ttop: 50rpx;\n\t\tleft: 50rpx;\n\t\twidth: 80rpx;\n\t\theight: 80rpx;\n\t\tbackground: rgba(255, 255, 255, 0.05);\n\t\tborder-radius: 50%;\n\t}\n\t\n\t.quick-add {\n\t\tmargin-bottom: 30rpx;\n\t\twidth: 100%;\n\t\tbox-sizing: border-box;\n\t}\n\t\n\t.add-btn {\n\t\tborder-radius: 50rpx;\n\t\tfont-size: 32rpx;\n\t\tbackground: linear-gradient(45deg, #FF6B6B, #FF8E53);\n\t\tborder: none;\n\t\tbox-shadow: 0 8rpx 25rpx rgba(255, 107, 107, 0.3);\n\t\ttransition: all 0.3s ease;\n\t\twidth: 100%;\n\t\tbox-sizing: border-box;\n\t}\n\t\n\t.add-btn:active {\n\t\ttransform: translateY(2rpx);\n\t\tbox-shadow: 0 4rpx 15rpx rgba(255, 107, 107, 0.4);\n\t}\n\t\n\t.record-list {\n\t\tbackground-color: white;\n\t\tborder-radius: 20rpx;\n\t\toverflow: hidden;\n\t\tbox-shadow: 0 4rpx 20rpx rgba(0,0,0,0.05);\n\t\twidth: 100%;\n\t\tmax-width: 100%;\n\t\tbox-sizing: border-box;\n\t}\n\t\n\t.record-header {\n\t\tpadding: 30rpx;\n\t\tborder-bottom: 1px solid #F0F0F0;\n\t}\n\t\n\t.record-title {\n\t\tfont-size: 32rpx;\n\t\tfont-weight: bold;\n\t\tcolor: #333;\n\t}\n\t\n\t/* 筛选器样式 */\n\t.filter-section {\n\t\tpadding: 20rpx 30rpx;\n\t\tbackground-color: #F8F9FA;\n\t\tborder-bottom: 1px solid #F0F0F0;\n\t\tbox-sizing: border-box;\n\t\twidth: 100%;\n\t}\n\t\n\t.filter-row {\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tmargin-bottom: 20rpx;\n\t\twidth: 100%;\n\t\tbox-sizing: border-box;\n\t\tflex-wrap: wrap;\n\t\tgap: 10rpx;\n\t}\n\t\n\t.filter-row:last-child {\n\t\tmargin-bottom: 0;\n\t}\n\t\n\t.filter-item {\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tflex: 1;\n\t\tmin-width: 140rpx;\n\t\tmargin-right: 20rpx;\n\t\tbox-sizing: border-box;\n\t}\n\t\n\t.filter-item:last-child {\n\t\tmargin-right: 0;\n\t}\n\t\n\t.filter-item.full-width {\n\t\tflex: none;\n\t\twidth: 100%;\n\t\tmargin-right: 0;\n\t\tmin-width: auto;\n\t}\n\t\n\t.filter-label {\n\t\tfont-size: 26rpx;\n\t\tcolor: #666;\n\t\tmargin-right: 10rpx;\n\t\twhite-space: nowrap;\n\t}\n\t\n\t.picker-text {\n\t\tflex: 1;\n\t\tmin-width: 0;\n\t\tpadding: 12rpx 20rpx;\n\t\tbackground-color: white;\n\t\tborder: 1px solid #E5E5E5;\n\t\tborder-radius: 8rpx;\n\t\tfont-size: 26rpx;\n\t\tcolor: #333;\n\t\ttext-align: center;\n\t\tmin-width: 100rpx;\n\t\ttransition: all 0.2s ease;\n\t\tbox-shadow: 0 2rpx 8rpx rgba(0,0,0,0.05);\n\t\tbox-sizing: border-box;\n\t\twhite-space: nowrap;\n\t\toverflow: hidden;\n\t\ttext-overflow: ellipsis;\n\t}\n\t\n\t.picker-text:active {\n\t\tborder-color: #667eea;\n\t\tbackground-color: #F8F9FF;\n\t\ttransform: scale(0.98);\n\t}\n\t\n\t.empty-state {\n\t\tpadding: 100rpx 30rpx;\n\t\ttext-align: center;\n\t}\n\t\n\t.empty-text {\n\t\tcolor: #999;\n\t\tfont-size: 28rpx;\n\t}\n\t\n\t/* 日期分组样式 */\n\t.record-group {\n\t\tmargin-bottom: 20rpx;\n\t\twidth: 100%;\n\t\tbox-sizing: border-box;\n\t}\n\t\n\t.date-group-header {\n\t\tdisplay: flex;\n\t\tjustify-content: space-between;\n\t\talign-items: center;\n\t\tpadding: 20rpx 30rpx 15rpx;\n\t\tbackground: linear-gradient(135deg, #F8F9FA 0%, #E9ECEF 100%);\n\t\tborder-top: 1px solid #E5E5E5;\n\t\tposition: sticky;\n\t\ttop: 0;\n\t\tz-index: 10;\n\t\twidth: 100%;\n\t\tbox-sizing: border-box;\n\t}\n\t\n\t.date-info {\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tflex: 1;\n\t\tmin-width: 0;\n\t}\n\t\n\t.date-text {\n\t\tfont-size: 28rpx;\n\t\tfont-weight: bold;\n\t\tcolor: #333;\n\t\tmargin-right: 15rpx;\n\t}\n\t\n\t.date-weekday {\n\t\tfont-size: 24rpx;\n\t\tcolor: #666;\n\t\tbackground: rgba(102, 126, 234, 0.1);\n\t\tpadding: 4rpx 12rpx;\n\t\tborder-radius: 12rpx;\n\t\tborder: 1px solid rgba(102, 126, 234, 0.2);\n\t}\n\t\n\t.date-summary {\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tgap: 15rpx;\n\t\tflex-wrap: wrap;\n\t\tjustify-content: flex-end;\n\t}\n\t\n\t.date-expense {\n\t\tfont-size: 24rpx;\n\t\tcolor: #FF6B6B;\n\t\tbackground: rgba(255, 107, 107, 0.1);\n\t\tpadding: 6rpx 12rpx;\n\t\tborder-radius: 12rpx;\n\t\tfont-weight: 500;\n\t}\n\t\n\t.date-income {\n\t\tfont-size: 24rpx;\n\t\tcolor: #4ECDC4;\n\t\tbackground: rgba(78, 205, 196, 0.1);\n\t\tpadding: 6rpx 12rpx;\n\t\tborder-radius: 12rpx;\n\t\tfont-weight: 500;\n\t}\n\t\n\t/* 加载指示器样式 */\n\t.loading-indicator {\n\t\tpadding: 40rpx;\n\t\ttext-align: center;\n\t\tbackground-color: white;\n\t\tborder-top: 1px solid #F0F0F0;\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tjustify-content: center;\n\t\tgap: 20rpx;\n\t}\n\t\n\t.loading-text {\n\t\tcolor: #667eea;\n\t\tfont-size: 28rpx;\n\t\tfont-weight: 500;\n\t}\n\t\n\t.loading-indicator::before {\n\t\tcontent: '';\n\t\twidth: 20rpx;\n\t\theight: 20rpx;\n\t\tborder: 2rpx solid #E5E5E5;\n\t\tborder-top-color: #667eea;\n\t\tborder-radius: 50%;\n\t\tanimation: spin 1s linear infinite;\n\t}\n\t\n\t@keyframes spin {\n\t\tto {\n\t\t\ttransform: rotate(360deg);\n\t\t}\n\t}\n\t\n\t.no-more {\n\t\tpadding: 30rpx;\n\t\ttext-align: center;\n\t\tbackground-color: white;\n\t\tborder-top: 1px solid #F0F0F0;\n\t}\n\t\n\t.no-more-text {\n\t\tcolor: #999;\n\t\tfont-size: 24rpx;\n\t}\n\t\n\t.record-left {\n\t\tflex: 1;\n\t\tmin-width: 0;\n\t\toverflow: hidden;\n\t}\n\t\n\t.record-category {\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tmargin-bottom: 10rpx;\n\t}\n\t\n\t.category-icon {\n\t\tfont-size: 36rpx;\n\t\tmargin-right: 15rpx;\n\t\tfilter: drop-shadow(0 2rpx 4rpx rgba(0,0,0,0.1));\n\t\tdisplay: inline-block;\n\t\ttransform: translateZ(0);\n\t\ttransition: transform 0.2s ease;\n\t}\n\t\n\t.category-name {\n\t\tfont-size: 30rpx;\n\t\tcolor: #333;\n\t\tfont-weight: 600;\n\t\tletter-spacing: 0.5rpx;\n\t\twhite-space: nowrap;\n\t\toverflow: hidden;\n\t\ttext-overflow: ellipsis;\n\t\tmax-width: 100%;\n\t}\n\t\n\t.record-note {\n\t\tfont-size: 24rpx;\n\t\tcolor: #999;\n\t\tmargin-top: 4rpx;\n\t\topacity: 0.8;\n\t\twhite-space: nowrap;\n\t\toverflow: hidden;\n\t\ttext-overflow: ellipsis;\n\t\tmax-width: 100%;\n\t}\n\t\n\t.record-right {\n\t\ttext-align: right;\n\t\tflex-shrink: 0;\n\t\tmargin-left: 15rpx;\n\t}\n\t\n\t.record-amount {\n\t\tfont-size: 32rpx;\n\t\tfont-weight: bold;\n\t\tdisplay: block;\n\t\tmargin-bottom: 5rpx;\n\t\tletter-spacing: 0.5rpx;\n\t}\n\t\n\t.record-amount.expense {\n\t\tcolor: #FF6B6B;\n\t\ttext-shadow: 0 1rpx 2rpx rgba(255, 107, 107, 0.2);\n\t}\n\t\n\t.record-amount.income {\n\t\tcolor: #4ECDC4;\n\t\ttext-shadow: 0 1rpx 2rpx rgba(78, 205, 196, 0.2);\n\t}\n\t\n\t.record-time {\n\t\tfont-size: 24rpx;\n\t\tcolor: #999;\n\t\topacity: 0.8;\n\t}\n\t\n\t/* 右滑删除相关样式 */\n\t.record-wrapper {\n\t\tposition: relative;\n\t\toverflow: hidden;\n\t\twidth: 100%;\n\t\tbox-sizing: border-box;\n\t}\n\t\n\t.record-item {\n\t\tdisplay: flex;\n\t\tjustify-content: space-between;\n\t\talign-items: center;\n\t\tpadding: 25rpx 30rpx;\n\t\tborder-bottom: 1px solid #F8F8F8;\n\t\tbackground-color: white;\n\t\ttransition: all 0.3s ease;\n\t\tposition: relative;\n\t\tz-index: 1;\n\t\twidth: 100%;\n\t\tbox-sizing: border-box;\n\t\tmin-width: 0;\n\t}\n\t\n\t.record-group .record-item:first-child {\n\t\tborder-top: none;\n\t}\n\t\n\t.record-group .record-item:last-child {\n\t\tborder-bottom: 1px solid #F0F0F0;\n\t\tborder-bottom-left-radius: 0;\n\t\tborder-bottom-right-radius: 0;\n\t}\n\t\n\t.record-item:hover {\n\t\tbackground-color: #FAFAFA;\n\t}\n\t\n\t.record-item:active {\n\t\tbackground-color: #F5F5F5;\n\t\ttransform: scale(0.995);\n\t}\n\t\n\t.record-item:active .category-icon {\n\t\ttransform: scale(1.1);\n\t}\n\t\n\t.record-item:last-child {\n\t\tborder-bottom: none;\n\t}\n\t\n\t.action-buttons {\n\t\tposition: absolute;\n\t\tright: 0;\n\t\ttop: 0;\n\t\tbottom: 0;\n\t\tdisplay: flex;\n\t\tz-index: 0;\n\t}\n\t\n\t.edit-btn {\n\t\twidth: 80px;\n\t\tbackground: linear-gradient(135deg, #4ECDC4, #44A08D);\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tjustify-content: center;\n\t\ttransition: all 0.2s ease;\n\t\tposition: relative;\n\t\toverflow: hidden;\n\t}\n\t\n\t.edit-btn::before {\n\t\tcontent: '';\n\t\tposition: absolute;\n\t\ttop: 0;\n\t\tleft: -100%;\n\t\twidth: 100%;\n\t\theight: 100%;\n\t\tbackground: linear-gradient(90deg, transparent, rgba(255,255,255,0.2), transparent);\n\t\ttransition: left 0.5s ease;\n\t}\n\t\n\t.edit-btn:active::before {\n\t\tleft: 100%;\n\t}\n\t\n\t.edit-text {\n\t\tcolor: white;\n\t\tfont-size: 28rpx;\n\t\tfont-weight: bold;\n\t\ttext-shadow: 0 1rpx 2rpx rgba(0,0,0,0.1);\n\t}\n\t\n\t.delete-btn {\n\t\twidth: 80px;\n\t\tbackground: linear-gradient(135deg, #FF4757, #FF3742);\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tjustify-content: center;\n\t\ttransition: all 0.2s ease;\n\t\tposition: relative;\n\t\toverflow: hidden;\n\t}\n\t\n\t.delete-btn::before {\n\t\tcontent: '';\n\t\tposition: absolute;\n\t\ttop: 0;\n\t\tleft: -100%;\n\t\twidth: 100%;\n\t\theight: 100%;\n\t\tbackground: linear-gradient(90deg, transparent, rgba(255,255,255,0.2), transparent);\n\t\ttransition: left 0.5s ease;\n\t}\n\t\n\t.delete-btn:active::before {\n\t\tleft: 100%;\n\t}\n\t\n\t.delete-text {\n\t\tcolor: white;\n\t\tfont-size: 28rpx;\n\t\tfont-weight: bold;\n\t\ttext-shadow: 0 1rpx 2rpx rgba(0,0,0,0.1);\n\t}\n</style>\n","import MiniProgramPage from 'D:/simple-account-v1.0.4/pages/index/index.vue'\nwx.createPage(MiniProgramPage)"],"names":["uni"],"mappings":"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"}