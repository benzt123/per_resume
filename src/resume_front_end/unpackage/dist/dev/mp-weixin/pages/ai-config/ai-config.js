"use strict";
const common_vendor = require("../../common/vendor.js");
const _sfc_main = {
  data() {
    return {
      config: {
        apiUrl: "",
        apiKey: "",
        modelName: "gpt-3.5-turbo",
        systemPrompt: ""
      },
      isTestingConnection: false,
      connectionStatus: null,
      templates: {
        accounting: {
          name: "Êô∫ËÉΩËÆ∞Ë¥¶Âä©Êâã",
          prompt: `‰Ω†ÊòØ‰∏Ä‰∏™‰∏ì‰∏öÁöÑËÆ∞Ë¥¶Âä©ÊâãÔºå‰∏ªË¶ÅÂäüËÉΩÊòØÂ∏ÆÂä©Áî®Êà∑Ëß£ÊûêÂíåËÆ∞ÂΩïË¥¢Âä°‰ø°ÊÅØ„ÄÇ

ËØ∑ÊåâÁÖß‰ª•‰∏ãËßÑÂàôÂ∑•‰ΩúÔºö

1. ÂàÜÁ±ªÈÄâÊã©ÂéüÂàôÔºàÈáçË¶ÅÔºâÔºö
   - Áî®Êà∑‰ºöÂú®ÂØπËØùÂºÄÂßãÊó∂Êèê‰æõÂΩìÂâçÂèØÁî®ÁöÑÂàÜÁ±ªÂàóË°®
   - ‰ºòÂÖà‰ªéÁé∞ÊúâÂàÜÁ±ª‰∏≠ÈÄâÊã©ÊúÄÂåπÈÖçÁöÑÂàÜÁ±ª
   - Âè™ÊúâÂú®Áé∞ÊúâÂàÜÁ±ªÈÉΩ‰∏çÂêàÈÄÇÊó∂ÊâçÂàõÂª∫Êñ∞ÂàÜÁ±ª
   - ‰æãÂ¶ÇÔºöÂ¶ÇÊûúÁé∞ÊúâÂàÜÁ±ªÊúâ"È§êÈ•Æ"Ôºå‰∏çË¶ÅÂàõÂª∫"Êó©È§ê"„ÄÅ"ÂçàÈ§ê"Á≠âÁªÜÂàÜÁ±ªÂà´

2. ÂΩìÁî®Êà∑ËæìÂÖ•ËÆ∞Ë¥¶‰ø°ÊÅØÊó∂ÔºàÂèØËÉΩÂåÖÂê´ÂçïÁ¨îÊàñÂ§öÁ¨îËÆ∞ÂΩïÔºâÔºå‰Ω†ÈúÄË¶ÅÔºö
   - Ëß£ÊûêÂá∫ÊØèÁ¨îËÆ∞ÂΩïÁöÑÈáëÈ¢ùÊï∞Â≠ó
   - ‰ªéÁé∞ÊúâÂàÜÁ±ª‰∏≠ÈÄâÊã©ÊúÄÂêàÈÄÇÁöÑÁ±ªÂà´ÔºåÊàñÂàõÂª∫Êñ∞ÂàÜÁ±ª
   - Âà§Êñ≠ÊòØÊîØÂá∫ËøòÊòØÊî∂ÂÖ•
   - ÊèêÂèñÂ§áÊ≥®‰ø°ÊÅØÂíåÊó∂Èó¥‰ø°ÊÅØ
   
3. ËøîÂõûÊ†ºÂºèËßÑÂàôÔºàÊûÅÂÖ∂ÈáçË¶ÅÔºâÔºö
   - ÂΩìËØÜÂà´Âà∞ËÆ∞Ë¥¶‰ø°ÊÅØÊó∂ÔºåÂøÖÈ°ªÁõ¥Êé•ËøîÂõûÁ∫ØJSONÔºå‰∏çËÉΩÊúâ‰ªª‰ΩïÂÖ∂‰ªñÂÜÖÂÆπ
   - ÁªùÂØπÁ¶ÅÊ≠¢‰ΩøÁî®markdown‰ª£Á†ÅÂùóÔºàÂ¶Ç\`\`\`json\`\`\`ÔºâÂåÖË£πJSON
   - ÁªùÂØπÁ¶ÅÊ≠¢Âú®JSONÂâçÂêéÊ∑ªÂä†‰ªª‰ΩïËØ¥ÊòéÊñáÂ≠ó
   - ÂçïÁ¨îËÆ∞ÂΩïÔºöÂè™ËøîÂõû {"type": "expense/income", "amount": "ÈáëÈ¢ù", "category": "ÂàÜÁ±ª", "note": "Â§áÊ≥®", "time": "Êó∂Èó¥ÊèèËø∞"}
   - Â§öÁ¨îËÆ∞ÂΩïÔºöÂè™ËøîÂõû [{"type": "expense", "amount": "20", "category": "È§êÈ•Æ", "note": "Êó©È§ê", "time": "‰ªäÂ§©Êó©‰∏ä"}, ...]
   - Êó∂Èó¥ÊèèËø∞ÔºöÂ¶Ç"‰ªäÂ§©Êó©‰∏ä"„ÄÅ"Êò®Â§©‰∏≠Âçà"„ÄÅ"ÂâçÂ§©Êôö‰∏ä"Á≠âÔºåÂ¶ÇÊûúÊ≤°ÊúâÊòéÁ°ÆÊó∂Èó¥ÂàôËÆæ‰∏∫"ÂàöÊâç"
   - JSONÂ≠óÁ¨¶‰∏≤‰∏çÂæóÂåÖÂê´ËΩ¨‰πâÂ≠óÁ¨¶ÔºåÁõ¥Êé•‰ΩøÁî®Ê†áÂáÜJSONÊ†ºÂºè

4. ÂàÜÁ±ªÂåπÈÖçËßÑÂàôÔºö
   - ‰∏•Ê†º‰ºòÂÖà‰ΩøÁî®Áé∞ÊúâÂàÜÁ±ª
   - Â¶ÇÊûúÁî®Êà∑ËØ¥"Êó©È§ê20ÂÖÉ"‰∏îÁé∞ÊúâÂàÜÁ±ªÊúâ"È§êÈ•Æ"Ôºå‰ΩøÁî®"È§êÈ•Æ"ËÄå‰∏çÊòØÂàõÂª∫"Êó©È§ê"
   - Â¶ÇÊûúÁî®Êà∑ËØ¥"ÊâìËΩ¶15ÂÖÉ"‰∏îÁé∞ÊúâÂàÜÁ±ªÊúâ"‰∫§ÈÄö"Ôºå‰ΩøÁî®"‰∫§ÈÄö"ËÄå‰∏çÊòØÂàõÂª∫"ÊâìËΩ¶"
   - Âè™ÊúâÂú®Áé∞ÊúâÂàÜÁ±ªÂÆåÂÖ®‰∏çÂåπÈÖçÊó∂ÊâçÂàõÂª∫Êñ∞ÂàÜÁ±ª

5. Á§∫‰æãÔºö
   Áé∞ÊúâÂàÜÁ±ªÔºö[È§êÈ•Æ, ‰∫§ÈÄö, Ë¥≠Áâ©]
   ËæìÂÖ•Ôºö"‰ªäÂ§©Êó©‰∏äÊó©È§ê20ÂÖÉÔºåÊâìËΩ¶15ÂÖÉ"
   ËæìÂá∫Ôºö[{"type": "expense", "amount": "20", "category": "È§êÈ•Æ", "note": "Êó©È§ê", "time": "‰ªäÂ§©Êó©‰∏ä"}, {"type": "expense", "amount": "15", "category": "‰∫§ÈÄö", "note": "ÊâìËΩ¶", "time": "‰ªäÂ§©Êó©‰∏ä"}]

6. ÂΩìÁî®Êà∑ËØ¢ÈóÆË¥¢Âä°Áõ∏ÂÖ≥ÈóÆÈ¢òÊó∂ÔºåÊèê‰æõ‰∏ì‰∏öÁöÑÁêÜË¥¢Âª∫ËÆÆ

7. ‰øùÊåÅÂèãÂ•Ω„ÄÅ‰∏ì‰∏öÁöÑËØ≠Ë∞ÉÔºåÁÆÄÊ¥ÅÊòé‰∫ÜÂú∞ÂõûÂ§ç`
        },
        financial: {
          name: "Ë¥¢Âä°È°æÈóÆ",
          prompt: `‰Ω†ÊòØ‰∏Ä‰∏™‰∏ì‰∏öÁöÑ‰∏™‰∫∫Ë¥¢Âä°È°æÈóÆÔºåÂÖ∑Â§á‰ª•‰∏ãËÉΩÂäõÔºö

1. ËÆ∞Ë¥¶ÂäüËÉΩÔºö
   - Ëß£ÊûêÁî®Êà∑ÁöÑÊ∂àË¥πËÆ∞ÂΩïÔºåÂ¶Ç"Á∫¢Áâõ20ÂÖÉ"
   - ËøîÂõûJSONÊ†ºÂºèÔºö{"type": "expense/income", "amount": "ÈáëÈ¢ù", "category": "ÂàÜÁ±ª", "note": "Â§áÊ≥®"}

2. Ë¥¢Âä°Âí®ËØ¢Ôºö
   - ÂàÜÊûêÁî®Êà∑ÁöÑÊî∂ÊîØÊÉÖÂÜµ
   - Êèê‰æõÈ¢ÑÁÆóËßÑÂàíÂª∫ËÆÆ
   - Êé®ËçêÂêàÈÄÇÁöÑÁêÜË¥¢‰∫ßÂìÅ
   - Â∏ÆÂä©Âà∂ÂÆöÂÇ®ËìÑÁõÆÊ†á

3. ÁêÜË¥¢ÊïôËÇ≤Ôºö
   - ÊôÆÂèäÁêÜË¥¢Áü•ËØÜ
   - Ëß£ÈáäÊäïËµÑÊ¶ÇÂøµ
   - È£éÈô©ËØÑ‰º∞Âª∫ËÆÆ

ËØ∑Áî®‰∏ì‰∏ö‰ΩÜÊòìÊáÇÁöÑËØ≠Ë®ÄÂõûÂ§çÔºåÂÖ≥Ê≥®Áî®Êà∑ÁöÑÂÆûÈôÖÊÉÖÂÜµÔºåÊèê‰æõ‰∏™ÊÄßÂåñÂª∫ËÆÆ„ÄÇ`
        }
      }
    };
  },
  onLoad() {
    this.loadConfig();
  },
  methods: {
    // Âä†ËΩΩÈÖçÁΩÆ
    loadConfig() {
      const savedConfig = common_vendor.index.getStorageSync("aiConfig") || {};
      this.config = {
        apiUrl: savedConfig.apiUrl || "",
        apiKey: savedConfig.apiKey || "",
        modelName: savedConfig.modelName || "gpt-3.5-turbo",
        systemPrompt: savedConfig.systemPrompt || ""
      };
    },
    // ÈÖçÁΩÆÂèòÂåñ
    onConfigChange() {
      this.connectionStatus = null;
    },
    // ‰ΩøÁî®È¢ÑËÆæÊ®°Êùø
    useTemplate(templateKey) {
      common_vendor.index.showModal({
        title: "‰ΩøÁî®Ê®°Êùø",
        content: `Á°ÆÂÆöË¶Å‰ΩøÁî®"${this.templates[templateKey].name}"Ê®°ÊùøÂêóÔºüËøôÂ∞ÜË¶ÜÁõñÂΩìÂâçÁöÑÊô∫ËÉΩ‰ΩìÊåá‰ª§„ÄÇ`,
        success: (res) => {
          if (res.confirm) {
            this.config.systemPrompt = this.templates[templateKey].prompt;
            common_vendor.index.showToast({
              title: "Ê®°ÊùøÂ∑≤Â∫îÁî®",
              icon: "success"
            });
          }
        }
      });
    },
    // ÊµãËØïËøûÊé•
    async testConnection() {
      if (!this.config.apiUrl || !this.config.apiKey) {
        common_vendor.index.showToast({
          title: "ËØ∑ÂÖàÂ°´ÂÜôAPIÂú∞ÂùÄÂíåÂØÜÈí•",
          icon: "none"
        });
        return;
      }
      this.isTestingConnection = true;
      this.connectionStatus = null;
      try {
        const response = await common_vendor.index.request({
          url: this.config.apiUrl,
          method: "POST",
          header: {
            "Content-Type": "application/json",
            "Authorization": `Bearer ${this.config.apiKey}`
          },
          data: {
            model: this.config.modelName,
            messages: [
              {
                role: "user",
                content: "ÊµãËØïËøûÊé•"
              }
            ],
            max_tokens: 10
          },
          timeout: 1e4
        });
        if (response.statusCode === 200) {
          this.connectionStatus = {
            success: true,
            message: "ËøûÊé•ÊàêÂäüÔºÅAPIÈÖçÁΩÆÊ≠£Á°Æ"
          };
          common_vendor.index.showToast({
            title: "ËøûÊé•ÊµãËØïÊàêÂäü",
            icon: "success"
          });
        } else {
          throw new Error(`HTTP ${response.statusCode}`);
        }
      } catch (error) {
        common_vendor.index.__f__("error", "at pages/ai-config/ai-config.vue:269", "ËøûÊé•ÊµãËØïÂ§±Ë¥•:", error);
        this.connectionStatus = {
          success: false,
          message: `ËøûÊé•Â§±Ë¥•Ôºö${error.message || "ËØ∑Ê£ÄÊü•APIÈÖçÁΩÆ"}`
        };
        common_vendor.index.showToast({
          title: "ËøûÊé•ÊµãËØïÂ§±Ë¥•",
          icon: "none"
        });
      } finally {
        this.isTestingConnection = false;
      }
    },
    // ‰øùÂ≠òÈÖçÁΩÆ
    saveConfig() {
      if (!this.config.apiUrl.trim()) {
        common_vendor.index.showToast({
          title: "ËØ∑Â°´ÂÜôAPIÂú∞ÂùÄ",
          icon: "none"
        });
        return;
      }
      if (!this.config.apiKey.trim()) {
        common_vendor.index.showToast({
          title: "ËØ∑Â°´ÂÜôAPIÂØÜÈí•",
          icon: "none"
        });
        return;
      }
      common_vendor.index.setStorageSync("aiConfig", this.config);
      common_vendor.index.showToast({
        title: "ÈÖçÁΩÆÂ∑≤‰øùÂ≠ò",
        icon: "success"
      });
      setTimeout(() => {
        common_vendor.index.navigateBack();
      }, 1500);
    }
  }
};
function _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {
  return common_vendor.e({
    a: common_vendor.o([($event) => $data.config.apiUrl = $event.detail.value, (...args) => $options.onConfigChange && $options.onConfigChange(...args)]),
    b: $data.config.apiUrl,
    c: common_vendor.o([($event) => $data.config.apiKey = $event.detail.value, (...args) => $options.onConfigChange && $options.onConfigChange(...args)]),
    d: $data.config.apiKey,
    e: common_vendor.o([($event) => $data.config.modelName = $event.detail.value, (...args) => $options.onConfigChange && $options.onConfigChange(...args)]),
    f: $data.config.modelName,
    g: common_vendor.o([($event) => $data.config.systemPrompt = $event.detail.value, (...args) => $options.onConfigChange && $options.onConfigChange(...args)]),
    h: $data.config.systemPrompt,
    i: common_vendor.o(($event) => $options.useTemplate("accounting")),
    j: common_vendor.o(($event) => $options.useTemplate("financial")),
    k: common_vendor.t($data.isTestingConnection ? "ÊµãËØï‰∏≠..." : "üîó ÊµãËØïËøûÊé•"),
    l: common_vendor.o((...args) => $options.testConnection && $options.testConnection(...args)),
    m: $data.isTestingConnection,
    n: common_vendor.o((...args) => $options.saveConfig && $options.saveConfig(...args)),
    o: $data.connectionStatus
  }, $data.connectionStatus ? {
    p: common_vendor.t($data.connectionStatus.success ? "‚úÖ" : "‚ùå"),
    q: common_vendor.t($data.connectionStatus.message),
    r: common_vendor.n($data.connectionStatus.success ? "status-success" : "status-error")
  } : {});
}
const MiniProgramPage = /* @__PURE__ */ common_vendor._export_sfc(_sfc_main, [["render", _sfc_render], ["__scopeId", "data-v-dd080916"]]);
wx.createPage(MiniProgramPage);
//# sourceMappingURL=../../../.sourcemap/mp-weixin/pages/ai-config/ai-config.js.map
